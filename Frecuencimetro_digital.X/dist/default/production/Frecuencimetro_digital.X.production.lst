

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 15:45:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.36
    55                           ; Generated 28/01/2022 GMT
    56                           ; 
    57                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _TMR1ON	set	32360
    90  0000                     _LATD	set	3980
    91  0000                     _TRISD	set	3989
    92  0000                     _CCP1CON	set	4029
    93  0000                     _OSCCON	set	4051
    94  0000                     _CCP1IE	set	31978
    95  0000                     _CCP1IF	set	31986
    96  0000                     _TRISC2	set	31906
    97  0000                     _CCPR1	set	4030
    98  0000                     _T1CON	set	4045
    99  0000                     _TMR1	set	4046
   100                           
   101                           	psect	smallconst
   102  000800                     __psmallconst:
   103                           	callstack 0
   104  000800  00                 	db	0
   105  000801                     STR_1:
   106  000801  46                 	db	70	;'F'
   107  000802  72                 	db	114	;'r'
   108  000803  65                 	db	101	;'e'
   109  000804  63                 	db	99	;'c'
   110  000805  75                 	db	117	;'u'
   111  000806  65                 	db	101	;'e'
   112  000807  6E                 	db	110	;'n'
   113  000808  63                 	db	99	;'c'
   114  000809  69                 	db	105	;'i'
   115  00080A  61                 	db	97	;'a'
   116  00080B  20                 	db	32
   117  00080C  65                 	db	101	;'e'
   118  00080D  73                 	db	115	;'s'
   119  00080E  20                 	db	32
   120  00080F  3A                 	db	58	;':'
   121  000810  00                 	db	0
   122  000811                     STR_2:
   123  000811  25                 	db	37
   124  000812  2E                 	db	46
   125  000813  31                 	db	49	;'1'
   126  000814  66                 	db	102	;'f'
   127  000815  00                 	db	0
   128  000816                     STR_3:
   129  000816  49                 	db	73	;'I'
   130  000817  4E                 	db	78	;'N'
   131  000818  46                 	db	70	;'F'
   132  000819  00                 	db	0
   133  00081A                     STR_7:
   134  00081A  4E                 	db	78	;'N'
   135  00081B  41                 	db	65	;'A'
   136  00081C  4E                 	db	78	;'N'
   137  00081D  00                 	db	0
   138  00081E                     STR_4:
   139  00081E  69                 	db	105	;'i'
   140  00081F  6E                 	db	110	;'n'
   141  000820  66                 	db	102	;'f'
   142  000821  00                 	db	0
   143  000822                     STR_8:
   144  000822  6E                 	db	110	;'n'
   145  000823  61                 	db	97	;'a'
   146  000824  6E                 	db	110	;'n'
   147  000825  00                 	db	0
   148  000826                     STR_11:
   149  000826  6C                 	db	108	;'l'
   150  000827  66                 	db	102	;'f'
   151  000828  00                 	db	0
   152  000829  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  00378A                     __pcinit:
   158                           	callstack 0
   159  00378A                     start_initialization:
   160                           	callstack 0
   161  00378A                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (80 bytes)
   165  00378A  EE01  F000         	lfsr	0,__pbssBANK1
   166  00378E  0E50               	movlw	80
   167  003790                     clear_0:
   168  003790  6AEE               	clrf	postinc0,c
   169  003792  06E8               	decf	wreg,f,c
   170  003794  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (16 bytes)
   173  003796  EE00  F0BF         	lfsr	0,__pbssBANK0
   174  00379A  0E10               	movlw	16
   175  00379C                     clear_1:
   176  00379C  6AEE               	clrf	postinc0,c
   177  00379E  06E8               	decf	wreg,f,c
   178  0037A0  E1FD               	bnz	clear_1
   179  0037A2                     end_of_initialization:
   180                           	callstack 0
   181  0037A2                     __end_of__initialization:
   182                           	callstack 0
   183  0037A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  0037A4  6EF8               	movwf	tblptru,c
   185  0037A6  0100               	movlb	0
   186  0037A8  EF23  F019         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  0000BF                     __pbssBANK0:
   190                           	callstack 0
   191  0000BF                     floorf@F526:
   192                           	callstack 0
   193  0000BF                     	ds	4
   194  0000C3                     ___fpclassifyf@F465:
   195                           	callstack 0
   196  0000C3                     	ds	4
   197  0000C7                     _nout:
   198                           	callstack 0
   199  0000C7                     	ds	2
   200  0000C9                     _width:
   201                           	callstack 0
   202  0000C9                     	ds	2
   203  0000CB                     _prec:
   204                           	callstack 0
   205  0000CB                     	ds	2
   206  0000CD                     _flags:
   207                           	callstack 0
   208  0000CD                     	ds	2
   209                           
   210                           	psect	bssBANK1
   211  000100                     __pbssBANK1:
   212                           	callstack 0
   213  000100                     _dbuf:
   214                           	callstack 0
   215  000100                     	ds	80
   216                           
   217                           	psect	cstackBANK0
   218  000060                     __pcstackBANK0:
   219                           	callstack 0
   220  000060                     _efgtoa$670:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224  000060                     	ds	2
   225  000062                     _efgtoa$678:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x2
   229  000062                     	ds	2
   230  000064                     _efgtoa$679:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x4
   234  000064                     	ds	2
   235  000066                     efgtoa@t:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x6
   239  000066                     	ds	2
   240  000068                     efgtoa@pp:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x8
   244  000068                     	ds	2
   245  00006A                     efgtoa@ne:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xA
   249  00006A                     	ds	2
   250  00006C                     efgtoa@m:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xC
   254  00006C                     	ds	2
   255  00006E                     efgtoa@ou:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0xE
   259  00006E                     	ds	4
   260  000072                     efgtoa@d:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x12
   264  000072                     	ds	2
   265  000074                     efgtoa@sign:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x14
   269  000074                     	ds	2
   270  000076                     efgtoa@p:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x16
   274  000076                     	ds	2
   275  000078                     efgtoa@w:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x18
   279  000078                     	ds	2
   280  00007A                     efgtoa@nmode:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x1A
   284  00007A                     	ds	1
   285  00007B                     efgtoa@mode:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x1B
   289  00007B                     	ds	1
   290  00007C                     efgtoa@h:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0x1C
   294  00007C                     	ds	4
   295  000080                     efgtoa@l:
   296                           	callstack 0
   297                           
   298                           ; 4 bytes @ 0x20
   299  000080                     	ds	4
   300  000084                     efgtoa@i:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x24
   304  000084                     	ds	2
   305  000086                     efgtoa@g:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x26
   309  000086                     	ds	4
   310  00008A                     efgtoa@e:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2A
   314  00008A                     	ds	2
   315  00008C                     efgtoa@n:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2C
   319  00008C                     	ds	2
   320  00008E                     efgtoa@u:
   321                           	callstack 0
   322                           
   323                           ; 4 bytes @ 0x2E
   324  00008E                     	ds	4
   325  000092                     vfprintf@cfmt:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x32
   329  000092                     	ds	2
   330  000094                     ?_sprintf:
   331                           	callstack 0
   332  000094                     sprintf@s:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x34
   336  000094                     	ds	2
   337  000096                     sprintf@fmt:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x36
   341  000096                     	ds	6
   342  00009C                     sprintf@ap:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x3C
   346  00009C                     	ds	2
   347  00009E                     sprintf@f:
   348                           	callstack 0
   349                           
   350                           ; 11 bytes @ 0x3E
   351  00009E                     	ds	11
   352  0000A9                     ??_main:
   353                           
   354                           ; 1 bytes @ 0x49
   355  0000A9                     	ds	2
   356  0000AB                     main@buffer:
   357                           	callstack 0
   358                           
   359                           ; 16 bytes @ 0x4B
   360  0000AB                     	ds	16
   361  0000BB                     main@frecuencia:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x5B
   365  0000BB                     	ds	4
   366                           
   367                           	psect	cstackCOMRAM
   368  000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370  000001                     ??_LCD_Command:
   371  000001                     ??_LCD_Char:
   372  000001                     ?_strlen:
   373                           	callstack 0
   374  000001                     ?___fpclassifyf:
   375                           	callstack 0
   376  000001                     ?_isupper:
   377                           	callstack 0
   378  000001                     ?_isdigit:
   379                           	callstack 0
   380  000001                     ?_strncmp:
   381                           	callstack 0
   382  000001                     ?_isspace:
   383                           	callstack 0
   384  000001                     ?___wmul:
   385                           	callstack 0
   386  000001                     ?___awdiv:
   387                           	callstack 0
   388  000001                     ?___awmod:
   389                           	callstack 0
   390  000001                     ?___fladd:
   391                           	callstack 0
   392  000001                     ?___flmul:
   393                           	callstack 0
   394  000001                     ?___flneg:
   395                           	callstack 0
   396  000001                     ?___fltol:
   397                           	callstack 0
   398  000001                     ?___xxtofl:
   399                           	callstack 0
   400  000001                     ___wmul@multiplier:
   401                           	callstack 0
   402  000001                     ___awdiv@dividend:
   403                           	callstack 0
   404  000001                     ___awmod@dividend:
   405                           	callstack 0
   406  000001                     isdigit@c:
   407                           	callstack 0
   408  000001                     isspace@c:
   409                           	callstack 0
   410  000001                     isupper@c:
   411                           	callstack 0
   412  000001                     fputc@c:
   413                           	callstack 0
   414  000001                     strcpy@dest:
   415                           	callstack 0
   416  000001                     strlen@s:
   417                           	callstack 0
   418  000001                     strncmp@_l:
   419                           	callstack 0
   420  000001                     ___fleq@ff1:
   421                           	callstack 0
   422  000001                     ___flneg@f1:
   423                           	callstack 0
   424  000001                     ___fltol@f1:
   425                           	callstack 0
   426  000001                     ___fladd@b:
   427                           	callstack 0
   428  000001                     ___flmul@b:
   429                           	callstack 0
   430  000001                     ___xxtofl@val:
   431                           	callstack 0
   432  000001                     ___fpclassifyf@x:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x0
   436  000001                     	ds	1
   437  000002                     LCD_Command@dat:
   438                           	callstack 0
   439  000002                     LCD_Char@x:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     ??_isupper:
   445  000003                     ??_isdigit:
   446  000003                     ??_isspace:
   447  000003                     ??_LCD_Begin:
   448  000003                     LCD_setCursor@y:
   449                           	callstack 0
   450  000003                     LCD_Print@str:
   451                           	callstack 0
   452  000003                     ___wmul@multiplicand:
   453                           	callstack 0
   454  000003                     ___awdiv@divisor:
   455                           	callstack 0
   456  000003                     ___awmod@divisor:
   457                           	callstack 0
   458  000003                     fputc@fp:
   459                           	callstack 0
   460  000003                     strcpy@src:
   461                           	callstack 0
   462  000003                     strlen@a:
   463                           	callstack 0
   464  000003                     strncmp@_r:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  000003                     	ds	1
   469  000004                     ??_LCD_setCursor:
   470                           
   471                           ; 1 bytes @ 0x3
   472  000004                     	ds	1
   473  000005                     ??_fputc:
   474  000005                     ??___fpclassifyf:
   475  000005                     ??_strcpy:
   476  000005                     ??___fltol:
   477  000005                     ??___xxtofl:
   478  000005                     ___awdiv@counter:
   479                           	callstack 0
   480  000005                     ___awmod@counter:
   481                           	callstack 0
   482  000005                     ___wmul@product:
   483                           	callstack 0
   484  000005                     strncmp@n:
   485                           	callstack 0
   486  000005                     ___fleq@ff2:
   487                           	callstack 0
   488  000005                     ___fladd@a:
   489                           	callstack 0
   490  000005                     ___flmul@a:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x4
   494  000005                     	ds	1
   495  000006                     LCD_setCursor@x:
   496                           	callstack 0
   497  000006                     ___awdiv@sign:
   498                           	callstack 0
   499  000006                     ___awmod@sign:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x5
   503  000006                     	ds	1
   504  000007                     ??_strncmp:
   505  000007                     ?_tolower:
   506                           	callstack 0
   507  000007                     LCD_setCursor@location:
   508                           	callstack 0
   509  000007                     _isspace$757:
   510                           	callstack 0
   511  000007                     ___awdiv@quotient:
   512                           	callstack 0
   513  000007                     strcpy@s:
   514                           	callstack 0
   515  000007                     tolower@c:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x6
   519  000007                     	ds	1
   520  000008                     ?_atoi:
   521                           	callstack 0
   522  000008                     atoi@s:
   523                           	callstack 0
   524  000008                     strncmp@l:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x7
   528  000008                     	ds	1
   529  000009                     ??___fladd:
   530  000009                     ??___flmul:
   531  000009                     ??_tolower:
   532  000009                     ??___fleq:
   533  000009                     ___fltol@sign1:
   534                           	callstack 0
   535  000009                     ___xxtofl@sign:
   536                           	callstack 0
   537  000009                     ___fpclassifyf@e:
   538                           	callstack 0
   539  000009                     strcpy@d:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     ??_atoi:
   545  00000A                     ___fltol@exp1:
   546                           	callstack 0
   547  00000A                     ___xxtofl@exp:
   548                           	callstack 0
   549  00000A                     fputs@s:
   550                           	callstack 0
   551  00000A                     strncmp@r:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x9
   555  00000A                     	ds	1
   556  00000B                     ___xxtofl@arg:
   557                           	callstack 0
   558  00000B                     ___fpclassifyf@u:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0xA
   562  00000B                     	ds	1
   563  00000C                     fputs@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xB
   567  00000C                     	ds	1
   568  00000D                     ___fladd@signs:
   569                           	callstack 0
   570  00000D                     ___flmul@sign:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0xC
   574  00000D                     	ds	1
   575  00000E                     ___fladd@aexp:
   576                           	callstack 0
   577  00000E                     fputs@c:
   578                           	callstack 0
   579  00000E                     atoi@neg:
   580                           	callstack 0
   581  00000E                     ___flmul@grs:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0xD
   585  00000E                     	ds	1
   586  00000F                     ?___fldiv:
   587                           	callstack 0
   588  00000F                     ___fladd@bexp:
   589                           	callstack 0
   590  00000F                     fputs@i:
   591                           	callstack 0
   592  00000F                     ___fldiv@b:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0xE
   596  00000F                     	ds	1
   597  000010                     ___fladd@grs:
   598                           	callstack 0
   599  000010                     atoi@n:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0xF
   603  000010                     	ds	1
   604  000011                     ?_pad:
   605                           	callstack 0
   606  000011                     pad@fp:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x10
   610  000011                     	ds	1
   611  000012                     ___flmul@aexp:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x11
   615  000012                     	ds	1
   616  000013                     ___flmul@bexp:
   617                           	callstack 0
   618  000013                     pad@buf:
   619                           	callstack 0
   620  000013                     ___fldiv@a:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x12
   624  000013                     	ds	1
   625  000014                     ___flmul@prod:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x13
   629  000014                     	ds	1
   630  000015                     pad@p:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x14
   634  000015                     	ds	2
   635  000017                     ??___fldiv:
   636  000017                     ??_pad:
   637                           
   638                           ; 1 bytes @ 0x16
   639  000017                     	ds	1
   640  000018                     ___flmul@temp:
   641                           	callstack 0
   642  000018                     pad@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x17
   646  000018                     	ds	2
   647  00001A                     ?___flsub:
   648                           	callstack 0
   649  00001A                     pad@w:
   650                           	callstack 0
   651  00001A                     ___flge@ff1:
   652                           	callstack 0
   653  00001A                     ___flsub@b:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x19
   657  00001A                     	ds	1
   658  00001B                     ___fldiv@rem:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x1A
   662  00001B                     	ds	3
   663  00001E                     ___flge@ff2:
   664                           	callstack 0
   665  00001E                     ___flsub@a:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x1D
   669  00001E                     	ds	1
   670  00001F                     ___fldiv@sign:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1E
   674  00001F                     	ds	1
   675  000020                     ___fldiv@new_exp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x1F
   679  000020                     	ds	2
   680  000022                     ??___flge:
   681  000022                     ___fldiv@grs:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x21
   685  000022                     	ds	4
   686  000026                     ___fldiv@bexp:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x25
   690  000026                     	ds	1
   691  000027                     ___fldiv@aexp:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x26
   695  000027                     	ds	1
   696  000028                     ?_Capture_read:
   697                           	callstack 0
   698  000028                     ?_floorf:
   699                           	callstack 0
   700  000028                     floorf@x:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x27
   704  000028                     	ds	4
   705  00002C                     ??_floorf:
   706  00002C                     Capture_read@conteo:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x2B
   710  00002C                     	ds	2
   711  00002E                     Capture_read@data1:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715  00002E                     	ds	2
   716  000030                     Capture_read@data2:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2F
   720  000030                     	ds	2
   721  000032                     floorf@m:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x31
   725  000032                     	ds	4
   726  000036                     floorf@e:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x35
   730  000036                     	ds	2
   731  000038                     floorf@u:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x37
   735  000038                     	ds	4
   736  00003C                     ?_efgtoa:
   737                           	callstack 0
   738  00003C                     efgtoa@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3B
   742  00003C                     	ds	2
   743  00003E                     efgtoa@f:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x3D
   747  00003E                     	ds	4
   748  000042                     efgtoa@c:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x41
   752  000042                     	ds	1
   753  000043                     ??_efgtoa:
   754                           
   755                           ; 1 bytes @ 0x42
   756  000043                     	ds	5
   757  000048                     ?_vfpfcnvrt:
   758                           	callstack 0
   759  000048                     vfpfcnvrt@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x47
   763  000048                     	ds	2
   764  00004A                     vfpfcnvrt@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x49
   768  00004A                     	ds	2
   769  00004C                     vfpfcnvrt@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x4B
   773  00004C                     	ds	2
   774  00004E                     ??_vfpfcnvrt:
   775                           
   776                           ; 1 bytes @ 0x4D
   777  00004E                     	ds	4
   778  000052                     vfpfcnvrt@f:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x51
   782  000052                     	ds	4
   783  000056                     vfpfcnvrt@ct:
   784                           	callstack 0
   785                           
   786                           ; 3 bytes @ 0x55
   787  000056                     	ds	3
   788  000059                     vfpfcnvrt@c:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x58
   792  000059                     	ds	1
   793  00005A                     ?_vfprintf:
   794                           	callstack 0
   795  00005A                     vfprintf@fp:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x59
   799  00005A                     	ds	2
   800  00005C                     vfprintf@fmt:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x5B
   804  00005C                     	ds	2
   805  00005E                     vfprintf@ap:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x5D
   809  00005E                     	ds	2
   810  000060                     
   811                           ; 1 bytes @ 0x5F
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 18 in file "../Frecuenciometro_digital.X/main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  buffer         16   75[BANK0 ] unsigned char [16]
   822 ;;  frecuencia      4   91[BANK0 ] float 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  2   71[None  ] int 
   825 ;; Registers used:
   826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         0       0       0       0       0       0       0       0       0
   833 ;;      Locals:         0      20       0       0       0       0       0       0       0
   834 ;;      Temps:          0       2       0       0       0       0       0       0       0
   835 ;;      Totals:         0      22       0       0       0       0       0       0       0
   836 ;;Total ram usage:       22 bytes
   837 ;; Hardware stack levels required when called: 8
   838 ;; This function calls:
   839 ;;		_Capture_Begin
   840 ;;		_Capture_read
   841 ;;		_LCD_Begin
   842 ;;		_LCD_Print
   843 ;;		_LCD_setCursor
   844 ;;		_sprintf
   845 ;; This function is called by:
   846 ;;		Startup code after reset
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text0
   851  003246                     __ptext0:
   852                           	callstack 0
   853  003246                     _main:
   854                           	callstack 23
   855  003246                     
   856                           ;../Frecuenciometro_digital.X/main.c: 20:     float frecuencia;;../Frecuenciometro_digit
      +                          al.X/main.c: 21:     char buffer[16];;../Frecuenciometro_digital.X/main.c: 22:     OSCCO
      +                          N=0x72;
   857  003246  0E72               	movlw	114
   858  003248  6ED3               	movwf	211,c	;volatile
   859  00324A                     
   860                           ;../Frecuenciometro_digital.X/main.c: 23:     Capture_Begin();
   861  00324A  ECD6  F01B         	call	_Capture_Begin	;wreg free
   862  00324E                     
   863                           ;../Frecuenciometro_digital.X/main.c: 24:     LCD_Begin();
   864  00324E  EC98  F01B         	call	_LCD_Begin	;wreg free
   865  003252                     
   866                           ;../Frecuenciometro_digital.X/main.c: 25:     LCD_setCursor(0,0);
   867  003252  0E00               	movlw	0
   868  003254  6E03               	movwf	LCD_setCursor@y^0,c
   869  003256  0E00               	movlw	0
   870  003258  ECFB  F019         	call	_LCD_setCursor
   871  00325C                     
   872                           ;../Frecuenciometro_digital.X/main.c: 26:     LCD_Print("Frecuencia es :");
   873  00325C  0E01               	movlw	low STR_1
   874  00325E  6E03               	movwf	LCD_Print@str^0,c
   875  003260  0E08               	movlw	high STR_1
   876  003262  6E04               	movwf	(LCD_Print@str+1)^0,c
   877  003264  EC9E  F019         	call	_LCD_Print	;wreg free
   878  003268                     l3927:
   879                           
   880                           ;../Frecuenciometro_digital.X/main.c: 30:         frecuencia=Capture_read();
   881  003268  EC1B  F018         	call	_Capture_read	;wreg free
   882  00326C  C028  F0BB         	movff	?_Capture_read,main@frecuencia
   883  003270  C029  F0BC         	movff	?_Capture_read+1,main@frecuencia+1
   884  003274  C02A  F0BD         	movff	?_Capture_read+2,main@frecuencia+2
   885  003278  C02B  F0BE         	movff	?_Capture_read+3,main@frecuencia+3
   886  00327C                     
   887                           ;../Frecuenciometro_digital.X/main.c: 31:         sprintf(buffer,"%.1f",frecuencia);
   888  00327C  0EAB               	movlw	low main@buffer
   889  00327E  0100               	movlb	0	; () banked
   890  003280  6F94               	movwf	sprintf@s& (0+255),b
   891  003282  0E00               	movlw	high main@buffer
   892  003284  6F95               	movwf	(sprintf@s+1)& (0+255),b
   893  003286  0E11               	movlw	low STR_2
   894  003288  6F96               	movwf	sprintf@fmt& (0+255),b
   895  00328A  0E08               	movlw	high STR_2
   896  00328C  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
   897  00328E  C0BB  F098         	movff	main@frecuencia,?_sprintf+4
   898  003292  C0BC  F099         	movff	main@frecuencia+1,?_sprintf+5
   899  003296  C0BD  F09A         	movff	main@frecuencia+2,?_sprintf+6
   900  00329A  C0BE  F09B         	movff	main@frecuencia+3,?_sprintf+7
   901  00329E  EC26  F01A         	call	_sprintf	;wreg free
   902  0032A2                     
   903                           ;../Frecuenciometro_digital.X/main.c: 32:         LCD_setCursor(0,1);
   904  0032A2  0E01               	movlw	1
   905  0032A4  6E03               	movwf	LCD_setCursor@y^0,c
   906  0032A6  0E00               	movlw	0
   907  0032A8  ECFB  F019         	call	_LCD_setCursor
   908  0032AC                     
   909                           ;../Frecuenciometro_digital.X/main.c: 33:         LCD_Print(buffer);
   910  0032AC  0EAB               	movlw	low main@buffer
   911  0032AE  6E03               	movwf	LCD_Print@str^0,c
   912  0032B0  0E00               	movlw	high main@buffer
   913  0032B2  6E04               	movwf	(LCD_Print@str+1)^0,c
   914  0032B4  EC9E  F019         	call	_LCD_Print	;wreg free
   915  0032B8                     
   916                           ;../Frecuenciometro_digital.X/main.c: 34:         _delay((unsigned long)((500)*(8000000/
      +                          4000.0)));
   917  0032B8  0E06               	movlw	6
   918  0032BA  0100               	movlb	0	; () banked
   919  0032BC  6FAA               	movwf	(??_main+1)& (0+255),b
   920  0032BE  0E13               	movlw	19
   921  0032C0  6FA9               	movwf	??_main& (0+255),b
   922  0032C2  0EAD               	movlw	173
   923  0032C4                     u4597:
   924  0032C4  2EE8               	decfsz	wreg,f,c
   925  0032C6  D7FE               	bra	u4597
   926  0032C8  2FA9               	decfsz	??_main& (0+255),f,b
   927  0032CA  D7FC               	bra	u4597
   928  0032CC  2FAA               	decfsz	(??_main+1)& (0+255),f,b
   929  0032CE  D7FA               	bra	u4597
   930  0032D0  D000               	nop2	
   931  0032D2  EF34  F019         	goto	l3927
   932  0032D6  EF00  F000         	goto	start
   933  0032DA                     __end_of_main:
   934                           	callstack 0
   935                           
   936 ;; *************** function _sprintf *****************
   937 ;; Defined at:
   938 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  s               2   52[BANK0 ] PTR unsigned char 
   941 ;;		 -> main@buffer(16), 
   942 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
   943 ;;		 -> STR_2(5), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  f              11   62[BANK0 ] struct _IO_FILE
   946 ;;  ap              2   60[BANK0 ] PTR void [1]
   947 ;;		 -> ?_sprintf(2), 
   948 ;;  ret             2    0        int 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  2   52[BANK0 ] int 
   951 ;; Registers used:
   952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       8       0       0       0       0       0       0       0
   959 ;;      Locals:         0      13       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         0      21       0       0       0       0       0       0       0
   962 ;;Total ram usage:       21 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 7
   965 ;; This function calls:
   966 ;;		_vfprintf
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text1
   973  00344C                     __ptext1:
   974                           	callstack 0
   975  00344C                     _sprintf:
   976                           	callstack 23
   977  00344C  0E98               	movlw	low (?_sprintf+4)
   978  00344E  0100               	movlb	0	; () banked
   979  003450  6F9C               	movwf	sprintf@ap& (0+255),b
   980  003452  0E00               	movlw	high (?_sprintf+4)
   981  003454  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
   982  003456  C094  F09E         	movff	sprintf@s,sprintf@f
   983  00345A  C095  F09F         	movff	sprintf@s+1,sprintf@f+1
   984  00345E                     
   985                           ; BSR set to: 0
   986  00345E  0E00               	movlw	0
   987  003460  6FA2               	movwf	(sprintf@f+4)& (0+255),b
   988  003462  0E00               	movlw	0
   989  003464  6FA1               	movwf	(sprintf@f+3)& (0+255),b
   990  003466                     
   991                           ; BSR set to: 0
   992  003466  0E00               	movlw	0
   993  003468  6FA8               	movwf	(sprintf@f+10)& (0+255),b
   994  00346A  0E00               	movlw	0
   995  00346C  6FA7               	movwf	(sprintf@f+9)& (0+255),b
   996  00346E                     
   997                           ; BSR set to: 0
   998  00346E  0E9E               	movlw	low sprintf@f
   999  003470  6E5A               	movwf	vfprintf@fp^0,c
  1000  003472  0E00               	movlw	high sprintf@f
  1001  003474  6E5B               	movwf	(vfprintf@fp+1)^0,c
  1002  003476  C096  F05C         	movff	sprintf@fmt,vfprintf@fmt
  1003  00347A  C097  F05D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1004  00347E  0E9C               	movlw	low sprintf@ap
  1005  003480  6E5E               	movwf	vfprintf@ap^0,c
  1006  003482  0E00               	movlw	high sprintf@ap
  1007  003484  6E5F               	movwf	(vfprintf@ap+1)^0,c
  1008  003486  EC6D  F019         	call	_vfprintf	;wreg free
  1009  00348A  0100               	movlb	0	; () banked
  1010  00348C  51A1               	movf	(sprintf@f+3)& (0+255),w,b
  1011  00348E  2594               	addwf	sprintf@s& (0+255),w,b
  1012  003490  6ED9               	movwf	fsr2l,c
  1013  003492  51A2               	movf	(sprintf@f+4)& (0+255),w,b
  1014  003494  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  1015  003496  6EDA               	movwf	fsr2h,c
  1016  003498  0E00               	movlw	0
  1017  00349A  6EDF               	movwf	indf2,c
  1018  00349C                     
  1019                           ; BSR set to: 0
  1020  00349C  0012               	return		;funcret
  1021  00349E                     __end_of_sprintf:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _vfprintf *****************
  1025 ;; Defined at:
  1026 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  fp              2   89[COMRAM] PTR struct _IO_FILE
  1029 ;;		 -> sprintf@f(11), 
  1030 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1031 ;;		 -> STR_2(5), 
  1032 ;;  ap              2   93[COMRAM] PTR PTR void 
  1033 ;;		 -> sprintf@ap(2), 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  1036 ;;		 -> STR_2(5), 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  2   89[COMRAM] int 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1046 ;;      Params:         6       0       0       0       0       0       0       0       0
  1047 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1049 ;;      Totals:         6       2       0       0       0       0       0       0       0
  1050 ;;Total ram usage:        8 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 6
  1053 ;; This function calls:
  1054 ;;		_vfpfcnvrt
  1055 ;; This function is called by:
  1056 ;;		_sprintf
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text2
  1061  0032DA                     __ptext2:
  1062                           	callstack 0
  1063  0032DA                     _vfprintf:
  1064                           	callstack 23
  1065  0032DA                     
  1066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1067  0032DA  C05C  F092         	movff	vfprintf@fmt,vfprintf@cfmt
  1068  0032DE  C05D  F093         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1069  0032E2                     
  1070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1071  0032E2  0E00               	movlw	0
  1072  0032E4  0100               	movlb	0	; () banked
  1073  0032E6  6FC8               	movwf	(_nout+1)& (0+255),b
  1074  0032E8  0E00               	movlw	0
  1075  0032EA  6FC7               	movwf	_nout& (0+255),b
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1078  0032EC  EF8B  F019         	goto	l3837
  1079  0032F0                     l3835:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1083  0032F0  C05A  F048         	movff	vfprintf@fp,vfpfcnvrt@fp
  1084  0032F4  C05B  F049         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1085  0032F8  0E92               	movlw	low vfprintf@cfmt
  1086  0032FA  6E4A               	movwf	vfpfcnvrt@fmt^0,c
  1087  0032FC  0E00               	movlw	high vfprintf@cfmt
  1088  0032FE  6E4B               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1089  003300  C05E  F04C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1090  003304  C05F  F04D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1091  003308  EC7C  F00C         	call	_vfpfcnvrt	;wreg free
  1092  00330C  5048               	movf	?_vfpfcnvrt^0,w,c
  1093  00330E  0100               	movlb	0	; () banked
  1094  003310  27C7               	addwf	_nout& (0+255),f,b
  1095  003312  5049               	movf	(?_vfpfcnvrt+1)^0,w,c
  1096  003314  23C8               	addwfc	(_nout+1)& (0+255),f,b
  1097  003316                     l3837:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1101  003316  C092  FFF6         	movff	vfprintf@cfmt,tblptrl
  1102  00331A  C093  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1103  00331E                     	if	0	;tblptru may be non-zero
  1104  00331E                     	endif
  1105  00331E                     	if	0	;tblptru may be non-zero
  1106  00331E                     	endif
  1107  00331E  0008               	tblrd		*
  1108  003320  50F5               	movf	tablat,w,c
  1109  003322  0900               	iorlw	0
  1110  003324  A4D8               	btfss	status,2,c
  1111  003326  EF97  F019         	goto	u4521
  1112  00332A  EF99  F019         	goto	u4520
  1113  00332E                     u4521:
  1114  00332E  EF78  F019         	goto	l3835
  1115  003332                     u4520:
  1116  003332                     
  1117                           ; BSR set to: 0
  1118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1119  003332  C0C7  F05A         	movff	_nout,?_vfprintf
  1120  003336  C0C8  F05B         	movff	_nout+1,?_vfprintf+1
  1121  00333A                     
  1122                           ; BSR set to: 0
  1123  00333A  0012               	return		;funcret
  1124  00333C                     __end_of_vfprintf:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _vfpfcnvrt *****************
  1128 ;; Defined at:
  1129 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  fp              2   71[COMRAM] PTR struct _IO_FILE
  1132 ;;		 -> sprintf@f(11), 
  1133 ;;  fmt             2   73[COMRAM] PTR PTR unsigned char 
  1134 ;;		 -> vfprintf@cfmt(2), 
  1135 ;;  ap              2   75[COMRAM] PTR PTR void 
  1136 ;;		 -> sprintf@ap(2), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  llu             8    0        unsigned long long 
  1139 ;;  ll              8    0        long long 
  1140 ;;  f               4   81[COMRAM] long long 
  1141 ;;  ct              3   85[COMRAM] unsigned char [3]
  1142 ;;  vp              3    0        PTR void 
  1143 ;;  cp              3    0        PTR unsigned char 
  1144 ;;  i               2    0        int 
  1145 ;;  done            2    0        int 
  1146 ;;  c               1   88[COMRAM] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2   71[COMRAM] int 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         6       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1159 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:       18 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 5
  1163 ;; This function calls:
  1164 ;;		_atoi
  1165 ;;		_efgtoa
  1166 ;;		_fputc
  1167 ;;		_isdigit
  1168 ;;		_isupper
  1169 ;;		_strncmp
  1170 ;;		_tolower
  1171 ;; This function is called by:
  1172 ;;		_vfprintf
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text3
  1177  0018F8                     __ptext3:
  1178                           	callstack 0
  1179  0018F8                     _vfpfcnvrt:
  1180                           	callstack 23
  1181  0018F8                     
  1182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1183  0018F8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1184  0018FC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1185  001900  CFDE FFF6          	movff	postinc2,tblptrl
  1186  001904  CFDD FFF7          	movff	postdec2,tblptrh
  1187  001908                     	if	0	;tblptru may be non-zero
  1188  001908                     	endif
  1189  001908                     	if	0	;tblptru may be non-zero
  1190  001908                     	endif
  1191  001908  0008               	tblrd		*
  1192  00190A  50F5               	movf	tablat,w,c
  1193  00190C  0A25               	xorlw	37
  1194  00190E  A4D8               	btfss	status,2,c
  1195  001910  EF8C  F00C         	goto	u4321
  1196  001914  EF8E  F00C         	goto	u4320
  1197  001918                     u4321:
  1198  001918  EF76  F00E         	goto	l3745
  1199  00191C                     u4320:
  1200  00191C                     
  1201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1202  00191C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203  001920  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204  001924  2ADE               	incf	postinc2,f,c
  1205  001926  0E00               	movlw	0
  1206  001928  22DD               	addwfc	postdec2,f,c
  1207  00192A                     
  1208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1209  00192A  0E00               	movlw	0
  1210  00192C  0100               	movlb	0	; () banked
  1211  00192E  6FCA               	movwf	(_width+1)& (0+255),b
  1212  001930  0E00               	movlw	0
  1213  001932  6FC9               	movwf	_width& (0+255),b
  1214  001934  C0C9  F0CD         	movff	_width,_flags
  1215  001938  C0CA  F0CE         	movff	_width+1,_flags+1
  1216  00193C                     
  1217                           ; BSR set to: 0
  1218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1219  00193C  69CB               	setf	_prec& (0+255),b
  1220  00193E  69CC               	setf	(_prec+1)& (0+255),b
  1221  001940                     
  1222                           ; BSR set to: 0
  1223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1224  001940  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1225  001944  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1226  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1227  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1228  001950                     	if	0	;tblptru may be non-zero
  1229  001950                     	endif
  1230  001950                     	if	0	;tblptru may be non-zero
  1231  001950                     	endif
  1232  001950  0008               	tblrd		*
  1233  001952  50F5               	movf	tablat,w,c
  1234  001954  0A2E               	xorlw	46
  1235  001956  A4D8               	btfss	status,2,c
  1236  001958  EFB0  F00C         	goto	u4331
  1237  00195C  EFB2  F00C         	goto	u4330
  1238  001960                     u4331:
  1239  001960  EF22  F00D         	goto	l3691
  1240  001964                     u4330:
  1241  001964                     
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1244  001964  0E00               	movlw	0
  1245  001966  6FCC               	movwf	(_prec+1)& (0+255),b
  1246  001968  0E00               	movlw	0
  1247  00196A  6FCB               	movwf	_prec& (0+255),b
  1248  00196C                     
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1251  00196C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1252  001970  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1253  001974  2ADE               	incf	postinc2,f,c
  1254  001976  0E00               	movlw	0
  1255  001978  22DD               	addwfc	postdec2,f,c
  1256  00197A                     
  1257                           ; BSR set to: 0
  1258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1259  00197A  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260  00197E  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261  001982  CFDE FFF6          	movff	postinc2,tblptrl
  1262  001986  CFDD FFF7          	movff	postdec2,tblptrh
  1263  00198A                     	if	0	;tblptru may be non-zero
  1264  00198A                     	endif
  1265  00198A                     	if	0	;tblptru may be non-zero
  1266  00198A                     	endif
  1267  00198A  0008               	tblrd		*
  1268  00198C  50F5               	movf	tablat,w,c
  1269  00198E  0A2A               	xorlw	42
  1270  001990  A4D8               	btfss	status,2,c
  1271  001992  EFCD  F00C         	goto	u4341
  1272  001996  EFCF  F00C         	goto	u4340
  1273  00199A                     u4341:
  1274  00199A  EFEC  F00C         	goto	l3683
  1275  00199E                     u4340:
  1276  00199E                     
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1279  00199E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280  0019A2  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281  0019A6  2ADE               	incf	postinc2,f,c
  1282  0019A8  0E00               	movlw	0
  1283  0019AA  22DD               	addwfc	postdec2,f,c
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1286  0019AC  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1287  0019B0  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1288  0019B4  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1289  0019B8  0E02               	movlw	2
  1290  0019BA  26DE               	addwf	postinc2,f,c
  1291  0019BC  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1292  0019C0  0E00               	movlw	0
  1293  0019C2  22DD               	addwfc	postdec2,f,c
  1294  0019C4  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1295  0019C8  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1296  0019CC  CFDE F0CB          	movff	postinc2,_prec
  1297  0019D0  CFDD F0CC          	movff	postdec2,_prec+1
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1300  0019D4  EF22  F00D         	goto	l3691
  1301  0019D8                     l3683:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1305  0019D8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1306  0019DC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1307  0019E0  CFDE F008          	movff	postinc2,atoi@s
  1308  0019E4  CFDD F009          	movff	postdec2,atoi@s+1
  1309  0019E8  EC57  F014         	call	_atoi	;wreg free
  1310  0019EC  C008  F0CB         	movff	?_atoi,_prec
  1311  0019F0  C009  F0CC         	movff	?_atoi+1,_prec+1
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1314  0019F4  EF03  F00D         	goto	l3689
  1315  0019F8                     l3685:
  1316                           
  1317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1318  0019F8  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1319  0019FC  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1320  001A00  2ADE               	incf	postinc2,f,c
  1321  001A02  0E00               	movlw	0
  1322  001A04  22DD               	addwfc	postdec2,f,c
  1323  001A06                     l3689:
  1324  001A06  0ED0               	movlw	208
  1325  001A08  6E4E               	movwf	??_vfpfcnvrt^0,c
  1326  001A0A  0EFF               	movlw	255
  1327  001A0C  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  1328  001A0E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1329  001A12  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1330  001A16  CFDE FFF6          	movff	postinc2,tblptrl
  1331  001A1A  CFDD FFF7          	movff	postdec2,tblptrh
  1332  001A1E                     	if	0	;tblptru may be non-zero
  1333  001A1E                     	endif
  1334  001A1E                     	if	0	;tblptru may be non-zero
  1335  001A1E                     	endif
  1336  001A1E  0008               	tblrd		*
  1337  001A20  50F5               	movf	tablat,w,c
  1338  001A22  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  1339  001A24  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  1340  001A26  504E               	movf	??_vfpfcnvrt^0,w,c
  1341  001A28  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1342  001A2A  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1343  001A2C  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1344  001A2E  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  1345  001A30  E109               	bnz	u4350
  1346  001A32  0E0A               	movlw	10
  1347  001A34  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1348  001A36  A0D8               	btfss	status,0,c
  1349  001A38  EF20  F00D         	goto	u4351
  1350  001A3C  EF22  F00D         	goto	u4350
  1351  001A40                     u4351:
  1352  001A40  EFFC  F00C         	goto	l3685
  1353  001A44                     u4350:
  1354  001A44                     l3691:
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1357  001A44  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1358  001A48  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1359  001A4C  CFDE FFF6          	movff	postinc2,tblptrl
  1360  001A50  CFDD FFF7          	movff	postdec2,tblptrh
  1361  001A54                     	if	0	;tblptru may be non-zero
  1362  001A54                     	endif
  1363  001A54                     	if	0	;tblptru may be non-zero
  1364  001A54                     	endif
  1365  001A54  0008               	tblrd		*
  1366  001A56  50F5               	movf	tablat,w,c
  1367  001A58  6E07               	movwf	tolower@c^0,c
  1368  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  1369  001A5C  ECA0  F01A         	call	_tolower	;wreg free
  1370  001A60  5007               	movf	?_tolower^0,w,c
  1371  001A62  6E56               	movwf	vfpfcnvrt@ct^0,c
  1372  001A64                     
  1373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1374  001A64  5056               	movf	vfpfcnvrt@ct^0,w,c
  1375  001A66  B4D8               	btfsc	status,2,c
  1376  001A68  EF38  F00D         	goto	u4361
  1377  001A6C  EF3A  F00D         	goto	u4360
  1378  001A70                     u4361:
  1379  001A70  EF72  F00D         	goto	l3701
  1380  001A74                     u4360:
  1381  001A74                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1383  001A74  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1384  001A78  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1385  001A7C  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1386  001A80  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1387  001A84  0E01               	movlw	1
  1388  001A86  264E               	addwf	??_vfpfcnvrt^0,f,c
  1389  001A88  0E00               	movlw	0
  1390  001A8A  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1391  001A8C  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1392  001A90  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1393  001A94                     	if	0	;tblptru may be non-zero
  1394  001A94                     	endif
  1395  001A94                     	if	0	;tblptru may be non-zero
  1396  001A94                     	endif
  1397  001A94  0008               	tblrd		*
  1398  001A96  50F5               	movf	tablat,w,c
  1399  001A98  6E07               	movwf	tolower@c^0,c
  1400  001A9A  6A08               	clrf	(tolower@c+1)^0,c
  1401  001A9C  ECA0  F01A         	call	_tolower	;wreg free
  1402  001AA0  5007               	movf	?_tolower^0,w,c
  1403  001AA2  6E57               	movwf	(vfpfcnvrt@ct+1)^0,c
  1404  001AA4                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1406  001AA4  5057               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1407  001AA6  B4D8               	btfsc	status,2,c
  1408  001AA8  EF58  F00D         	goto	u4371
  1409  001AAC  EF5A  F00D         	goto	u4370
  1410  001AB0                     u4371:
  1411  001AB0  EF72  F00D         	goto	l3701
  1412  001AB4                     u4370:
  1413  001AB4                     
  1414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1415  001AB4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1416  001AB8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1417  001ABC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1418  001AC0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1419  001AC4  0E02               	movlw	2
  1420  001AC6  264E               	addwf	??_vfpfcnvrt^0,f,c
  1421  001AC8  0E00               	movlw	0
  1422  001ACA  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1423  001ACC  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1424  001AD0  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1425  001AD4                     	if	0	;tblptru may be non-zero
  1426  001AD4                     	endif
  1427  001AD4                     	if	0	;tblptru may be non-zero
  1428  001AD4                     	endif
  1429  001AD4  0008               	tblrd		*
  1430  001AD6  50F5               	movf	tablat,w,c
  1431  001AD8  6E07               	movwf	tolower@c^0,c
  1432  001ADA  6A08               	clrf	(tolower@c+1)^0,c
  1433  001ADC  ECA0  F01A         	call	_tolower	;wreg free
  1434  001AE0  5007               	movf	?_tolower^0,w,c
  1435  001AE2  6E58               	movwf	(vfpfcnvrt@ct+2)^0,c
  1436  001AE4                     l3701:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1439  001AE4  0E66               	movlw	102
  1440  001AE6  1856               	xorwf	vfpfcnvrt@ct^0,w,c
  1441  001AE8  A4D8               	btfss	status,2,c
  1442  001AEA  EF79  F00D         	goto	u4381
  1443  001AEE  EF7B  F00D         	goto	u4380
  1444  001AF2                     u4381:
  1445  001AF2  EFBB  F00D         	goto	l3713
  1446  001AF6                     u4380:
  1447  001AF6                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1449  001AF6  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1450  001AFA  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1451  001AFE  CFDE FFF6          	movff	postinc2,tblptrl
  1452  001B02  CFDD FFF7          	movff	postdec2,tblptrh
  1453  001B06                     	if	0	;tblptru may be non-zero
  1454  001B06                     	endif
  1455  001B06                     	if	0	;tblptru may be non-zero
  1456  001B06                     	endif
  1457  001B06  0008               	tblrd		*
  1458  001B08  CFF5 F059          	movff	tablat,vfpfcnvrt@c
  1459  001B0C                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1461  001B0C  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462  001B10  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463  001B14  2ADE               	incf	postinc2,f,c
  1464  001B16  0E00               	movlw	0
  1465  001B18  22DD               	addwfc	postdec2,f,c
  1466  001B1A                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1468  001B1A  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1469  001B1E  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1470  001B22  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1471  001B26  0E04               	movlw	4
  1472  001B28  26DE               	addwf	postinc2,f,c
  1473  001B2A  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1474  001B2E  0E00               	movlw	0
  1475  001B30  22DD               	addwfc	postdec2,f,c
  1476  001B32  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1477  001B36  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1478  001B3A  CFDE F052          	movff	postinc2,vfpfcnvrt@f
  1479  001B3E  CFDE F053          	movff	postinc2,vfpfcnvrt@f+1
  1480  001B42  CFDE F054          	movff	postinc2,vfpfcnvrt@f+2
  1481  001B46  CFDE F055          	movff	postinc2,vfpfcnvrt@f+3
  1482  001B4A                     l3709:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1485  001B4A  C048  F03C         	movff	vfpfcnvrt@fp,efgtoa@fp
  1486  001B4E  C049  F03D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1487  001B52  C052  F03E         	movff	vfpfcnvrt@f,efgtoa@f
  1488  001B56  C053  F03F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1489  001B5A  C054  F040         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1490  001B5E  C055  F041         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1491  001B62  C059  F042         	movff	vfpfcnvrt@c,efgtoa@c
  1492  001B66  EC15  F004         	call	_efgtoa	;wreg free
  1493  001B6A  C03C  F048         	movff	?_efgtoa,?_vfpfcnvrt
  1494  001B6E  C03D  F049         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1495  001B72  EF91  F00E         	goto	l919
  1496  001B76                     l3713:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1499  001B76  0E56               	movlw	low vfpfcnvrt@ct
  1500  001B78  6E01               	movwf	strncmp@_l^0,c
  1501  001B7A  0E00               	movlw	high vfpfcnvrt@ct
  1502  001B7C  6E02               	movwf	(strncmp@_l+1)^0,c
  1503  001B7E  0E26               	movlw	low STR_11
  1504  001B80  6E03               	movwf	strncmp@_r^0,c
  1505  001B82  0E08               	movlw	high STR_11
  1506  001B84  6E04               	movwf	(strncmp@_r+1)^0,c
  1507  001B86  0E00               	movlw	0
  1508  001B88  6E06               	movwf	(strncmp@n+1)^0,c
  1509  001B8A  0E02               	movlw	2
  1510  001B8C  6E05               	movwf	strncmp@n^0,c
  1511  001B8E  EC86  F016         	call	_strncmp	;wreg free
  1512  001B92  5001               	movf	?_strncmp^0,w,c
  1513  001B94  1002               	iorwf	(?_strncmp+1)^0,w,c
  1514  001B96  A4D8               	btfss	status,2,c
  1515  001B98  EFD0  F00D         	goto	u4391
  1516  001B9C  EFD2  F00D         	goto	u4390
  1517  001BA0                     u4391:
  1518  001BA0  EF40  F00E         	goto	l3729
  1519  001BA4                     u4390:
  1520  001BA4                     
  1521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1522  001BA4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1523  001BA8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1524  001BAC  CFDE F04E          	movff	postinc2,??_vfpfcnvrt
  1525  001BB0  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+1
  1526  001BB4  0E01               	movlw	1
  1527  001BB6  264E               	addwf	??_vfpfcnvrt^0,f,c
  1528  001BB8  0E00               	movlw	0
  1529  001BBA  224F               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1530  001BBC  C04E  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1531  001BC0  C04F  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1532  001BC4                     	if	0	;tblptru may be non-zero
  1533  001BC4                     	endif
  1534  001BC4                     	if	0	;tblptru may be non-zero
  1535  001BC4                     	endif
  1536  001BC4  0008               	tblrd		*
  1537  001BC6  CFF5 F059          	movff	tablat,vfpfcnvrt@c
  1538  001BCA  0EBF               	movlw	191
  1539  001BCC  6E4E               	movwf	??_vfpfcnvrt^0,c
  1540  001BCE  0EFF               	movlw	255
  1541  001BD0  6E4F               	movwf	(??_vfpfcnvrt+1)^0,c
  1542  001BD2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1543  001BD6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1544  001BDA  CFDE FFF6          	movff	postinc2,tblptrl
  1545  001BDE  CFDD FFF7          	movff	postdec2,tblptrh
  1546  001BE2                     	if	0	;tblptru may be non-zero
  1547  001BE2                     	endif
  1548  001BE2                     	if	0	;tblptru may be non-zero
  1549  001BE2                     	endif
  1550  001BE2  0008               	tblrd		*
  1551  001BE4  50F5               	movf	tablat,w,c
  1552  001BE6  6E50               	movwf	(??_vfpfcnvrt+2)^0,c
  1553  001BE8  6A51               	clrf	(??_vfpfcnvrt+3)^0,c
  1554  001BEA  504E               	movf	??_vfpfcnvrt^0,w,c
  1555  001BEC  2650               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1556  001BEE  504F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1557  001BF0  2251               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1558  001BF2  5051               	movf	(??_vfpfcnvrt+3)^0,w,c
  1559  001BF4  E107               	bnz	u4401
  1560  001BF6  0E1A               	movlw	26
  1561  001BF8  5C50               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1562  001BFA  B0D8               	btfsc	status,0,c
  1563  001BFC  EF02  F00E         	goto	u4401
  1564  001C00  EF04  F00E         	goto	u4400
  1565  001C04                     u4401:
  1566  001C04  EF1E  F00E         	goto	l3723
  1567  001C08                     u4400:
  1568  001C08                     
  1569                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1570  001C08  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1571  001C0C  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1572  001C10  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1573  001C14  0E04               	movlw	4
  1574  001C16  26DE               	addwf	postinc2,f,c
  1575  001C18  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1576  001C1C  0E00               	movlw	0
  1577  001C1E  22DD               	addwfc	postdec2,f,c
  1578  001C20  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1579  001C24  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1580  001C28  CFDE F052          	movff	postinc2,vfpfcnvrt@f
  1581  001C2C  CFDE F053          	movff	postinc2,vfpfcnvrt@f+1
  1582  001C30  CFDE F054          	movff	postinc2,vfpfcnvrt@f+2
  1583  001C34  CFDE F055          	movff	postinc2,vfpfcnvrt@f+3
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1586  001C38  EF36  F00E         	goto	l924
  1587  001C3C                     l3723:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1590  001C3C  C04C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1591  001C40  C04D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1592  001C44  CFDF F04E          	movff	indf2,??_vfpfcnvrt
  1593  001C48  0E04               	movlw	4
  1594  001C4A  26DE               	addwf	postinc2,f,c
  1595  001C4C  CFDF F04F          	movff	indf2,??_vfpfcnvrt+1
  1596  001C50  0E00               	movlw	0
  1597  001C52  22DD               	addwfc	postdec2,f,c
  1598  001C54  C04E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1599  001C58  C04F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1600  001C5C  CFDE F052          	movff	postinc2,vfpfcnvrt@f
  1601  001C60  CFDE F053          	movff	postinc2,vfpfcnvrt@f+1
  1602  001C64  CFDE F054          	movff	postinc2,vfpfcnvrt@f+2
  1603  001C68  CFDE F055          	movff	postinc2,vfpfcnvrt@f+3
  1604  001C6C                     l924:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1607  001C6C  0E02               	movlw	2
  1608  001C6E  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  001C72  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  001C76  26DE               	addwf	postinc2,f,c
  1611  001C78  0E00               	movlw	0
  1612  001C7A  22DD               	addwfc	postdec2,f,c
  1613  001C7C  EFA5  F00D         	goto	l3709
  1614  001C80                     l3729:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1617  001C80  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618  001C84  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619  001C88  CFDE FFF6          	movff	postinc2,tblptrl
  1620  001C8C  CFDD FFF7          	movff	postdec2,tblptrh
  1621  001C90                     	if	0	;tblptru may be non-zero
  1622  001C90                     	endif
  1623  001C90                     	if	0	;tblptru may be non-zero
  1624  001C90                     	endif
  1625  001C90  0008               	tblrd		*
  1626  001C92  50F5               	movf	tablat,w,c
  1627  001C94  0A25               	xorlw	37
  1628  001C96  A4D8               	btfss	status,2,c
  1629  001C98  EF50  F00E         	goto	u4411
  1630  001C9C  EF52  F00E         	goto	u4410
  1631  001CA0                     u4411:
  1632  001CA0  EF69  F00E         	goto	l3739
  1633  001CA4                     u4410:
  1634  001CA4                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1636  001CA4  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1637  001CA8  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1638  001CAC  2ADE               	incf	postinc2,f,c
  1639  001CAE  0E00               	movlw	0
  1640  001CB0  22DD               	addwfc	postdec2,f,c
  1641  001CB2                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1643  001CB2  0E00               	movlw	0
  1644  001CB4  6E02               	movwf	(fputc@c+1)^0,c
  1645  001CB6  0E25               	movlw	37
  1646  001CB8  6E01               	movwf	fputc@c^0,c
  1647  001CBA  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1648  001CBE  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1649  001CC2  ECF1  F016         	call	_fputc	;wreg free
  1650  001CC6                     l3735:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1653  001CC6  0E00               	movlw	0
  1654  001CC8  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1655  001CCA  0E01               	movlw	1
  1656  001CCC  6E48               	movwf	?_vfpfcnvrt^0,c
  1657  001CCE  EF91  F00E         	goto	l919
  1658  001CD2                     l3739:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1661  001CD2  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1662  001CD6  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1663  001CDA  2ADE               	incf	postinc2,f,c
  1664  001CDC  0E00               	movlw	0
  1665  001CDE  22DD               	addwfc	postdec2,f,c
  1666  001CE0                     
  1667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1668  001CE0  0E00               	movlw	0
  1669  001CE2  6E49               	movwf	(?_vfpfcnvrt+1)^0,c
  1670  001CE4  0E00               	movlw	0
  1671  001CE6  6E48               	movwf	?_vfpfcnvrt^0,c
  1672  001CE8  EF91  F00E         	goto	l919
  1673  001CEC                     l3745:
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1676  001CEC  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  001CF0  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  001CF4  CFDE FFF6          	movff	postinc2,tblptrl
  1679  001CF8  CFDD FFF7          	movff	postdec2,tblptrh
  1680  001CFC                     	if	0	;tblptru may be non-zero
  1681  001CFC                     	endif
  1682  001CFC                     	if	0	;tblptru may be non-zero
  1683  001CFC                     	endif
  1684  001CFC  0008               	tblrd		*
  1685  001CFE  50F5               	movf	tablat,w,c
  1686  001D00  6E01               	movwf	fputc@c^0,c
  1687  001D02  6A02               	clrf	(fputc@c+1)^0,c
  1688  001D04  C048  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1689  001D08  C049  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1690  001D0C  ECF1  F016         	call	_fputc	;wreg free
  1691  001D10                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1693  001D10  C04A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694  001D14  C04B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695  001D18  2ADE               	incf	postinc2,f,c
  1696  001D1A  0E00               	movlw	0
  1697  001D1C  22DD               	addwfc	postdec2,f,c
  1698  001D1E  EF63  F00E         	goto	l3735
  1699  001D22                     l919:
  1700  001D22  0012               	return		;funcret
  1701  001D24                     __end_of_vfpfcnvrt:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _strncmp *****************
  1705 ;; Defined at:
  1706 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1709 ;;		 -> vfpfcnvrt@ct(3), 
  1710 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1711 ;;		 -> STR_13(3), 
  1712 ;;  n               2    4[COMRAM] unsigned int 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1715 ;;		 -> STR_13(3), 
  1716 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1717 ;;		 -> vfpfcnvrt@ct(3), 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  2    0[COMRAM] int 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1727 ;;      Params:         6       0       0       0       0       0       0       0       0
  1728 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1730 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1731 ;;Total ram usage:       11 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_vfpfcnvrt
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text4
  1741  002D0C                     __ptext4:
  1742                           	callstack 0
  1743  002D0C                     _strncmp:
  1744                           	callstack 27
  1745  002D0C  C001  F008         	movff	strncmp@_l,strncmp@l
  1746  002D10  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1747  002D14  C003  F00A         	movff	strncmp@_r,strncmp@r
  1748  002D18  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1749  002D1C  0605               	decf	strncmp@n^0,f,c
  1750  002D1E  A0D8               	btfss	status,0,c
  1751  002D20  0606               	decf	(strncmp@n+1)^0,f,c
  1752  002D22  2805               	incf	strncmp@n^0,w,c
  1753  002D24  E106               	bnz	u4271
  1754  002D26  2806               	incf	(strncmp@n+1)^0,w,c
  1755  002D28  A4D8               	btfss	status,2,c
  1756  002D2A  EF99  F016         	goto	u4271
  1757  002D2E  EF9B  F016         	goto	u4270
  1758  002D32                     u4271:
  1759  002D32  EFA8  F016         	goto	l3653
  1760  002D36                     u4270:
  1761  002D36  0E00               	movlw	0
  1762  002D38  6E02               	movwf	(?_strncmp+1)^0,c
  1763  002D3A  0E00               	movlw	0
  1764  002D3C  6E01               	movwf	?_strncmp^0,c
  1765  002D3E  EFF0  F016         	goto	l1039
  1766  002D42                     l3651:
  1767  002D42  4A08               	infsnz	strncmp@l^0,f,c
  1768  002D44  2A09               	incf	(strncmp@l+1)^0,f,c
  1769  002D46  4A0A               	infsnz	strncmp@r^0,f,c
  1770  002D48  2A0B               	incf	(strncmp@r+1)^0,f,c
  1771  002D4A  0605               	decf	strncmp@n^0,f,c
  1772  002D4C  A0D8               	btfss	status,0,c
  1773  002D4E  0606               	decf	(strncmp@n+1)^0,f,c
  1774  002D50                     l3653:
  1775  002D50  C008  FFD9         	movff	strncmp@l,fsr2l
  1776  002D54  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1777  002D58  50DF               	movf	indf2,w,c
  1778  002D5A  B4D8               	btfsc	status,2,c
  1779  002D5C  EFB2  F016         	goto	u4281
  1780  002D60  EFB4  F016         	goto	u4280
  1781  002D64                     u4281:
  1782  002D64  EFDF  F016         	goto	l3661
  1783  002D68                     u4280:
  1784  002D68  C00A  FFF6         	movff	strncmp@r,tblptrl
  1785  002D6C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1786  002D70                     	if	0	;tblptru may be non-zero
  1787  002D70                     	endif
  1788  002D70                     	if	0	;tblptru may be non-zero
  1789  002D70                     	endif
  1790  002D70  0008               	tblrd		*
  1791  002D72  50F5               	movf	tablat,w,c
  1792  002D74  0900               	iorlw	0
  1793  002D76  B4D8               	btfsc	status,2,c
  1794  002D78  EFC0  F016         	goto	u4291
  1795  002D7C  EFC2  F016         	goto	u4290
  1796  002D80                     u4291:
  1797  002D80  EFDF  F016         	goto	l3661
  1798  002D84                     u4290:
  1799  002D84  5005               	movf	strncmp@n^0,w,c
  1800  002D86  1006               	iorwf	(strncmp@n+1)^0,w,c
  1801  002D88  B4D8               	btfsc	status,2,c
  1802  002D8A  EFC9  F016         	goto	u4301
  1803  002D8E  EFCB  F016         	goto	u4300
  1804  002D92                     u4301:
  1805  002D92  EFDF  F016         	goto	l3661
  1806  002D96                     u4300:
  1807  002D96  C008  FFD9         	movff	strncmp@l,fsr2l
  1808  002D9A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1809  002D9E  50DF               	movf	indf2,w,c
  1810  002DA0  6E07               	movwf	??_strncmp^0,c
  1811  002DA2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1812  002DA6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1813  002DAA                     	if	0	;tblptru may be non-zero
  1814  002DAA                     	endif
  1815  002DAA                     	if	0	;tblptru may be non-zero
  1816  002DAA                     	endif
  1817  002DAA  0008               	tblrd		*
  1818  002DAC  50F5               	movf	tablat,w,c
  1819  002DAE  1807               	xorwf	??_strncmp^0,w,c
  1820  002DB0  B4D8               	btfsc	status,2,c
  1821  002DB2  EFDD  F016         	goto	u4311
  1822  002DB6  EFDF  F016         	goto	u4310
  1823  002DBA                     u4311:
  1824  002DBA  EFA1  F016         	goto	l3651
  1825  002DBE                     u4310:
  1826  002DBE                     l3661:
  1827  002DBE  C008  FFD9         	movff	strncmp@l,fsr2l
  1828  002DC2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1829  002DC6  50DF               	movf	indf2,w,c
  1830  002DC8  6E07               	movwf	??_strncmp^0,c
  1831  002DCA  C00A  FFF6         	movff	strncmp@r,tblptrl
  1832  002DCE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1833  002DD2                     	if	0	;tblptru may be non-zero
  1834  002DD2                     	endif
  1835  002DD2                     	if	0	;tblptru may be non-zero
  1836  002DD2                     	endif
  1837  002DD2  0008               	tblrd		*
  1838  002DD4  50F5               	movf	tablat,w,c
  1839  002DD6  5C07               	subwf	??_strncmp^0,w,c
  1840  002DD8  6E01               	movwf	?_strncmp^0,c
  1841  002DDA  6A02               	clrf	(?_strncmp+1)^0,c
  1842  002DDC  A0D8               	btfss	status,0,c
  1843  002DDE  0602               	decf	(?_strncmp+1)^0,f,c
  1844  002DE0                     l1039:
  1845  002DE0  0012               	return		;funcret
  1846  002DE2                     __end_of_strncmp:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _efgtoa *****************
  1850 ;; Defined at:
  1851 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1854 ;;		 -> sprintf@f(11), 
  1855 ;;  f               4   61[COMRAM] PTR struct _IO_FILE
  1856 ;;  c               1   65[COMRAM] unsigned char 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  u               4   46[BANK0 ] unsigned char 
  1859 ;;  g               4   38[BANK0 ] unsigned char 
  1860 ;;  l               4   32[BANK0 ] unsigned char 
  1861 ;;  h               4   28[BANK0 ] unsigned char 
  1862 ;;  ou              4   14[BANK0 ] unsigned char 
  1863 ;;  n               2   44[BANK0 ] int 
  1864 ;;  e               2   42[BANK0 ] int 
  1865 ;;  i               2   36[BANK0 ] int 
  1866 ;;  w               2   24[BANK0 ] int 
  1867 ;;  p               2   22[BANK0 ] int 
  1868 ;;  sign            2   20[BANK0 ] int 
  1869 ;;  d               2   18[BANK0 ] int 
  1870 ;;  m               2   12[BANK0 ] int 
  1871 ;;  ne              2   10[BANK0 ] int 
  1872 ;;  pp              2    8[BANK0 ] int 
  1873 ;;  t               2    6[BANK0 ] int 
  1874 ;;  mode            1   27[BANK0 ] unsigned char 
  1875 ;;  nmode           1   26[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   59[COMRAM] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1885 ;;      Params:         7       0       0       0       0       0       0       0       0
  1886 ;;      Locals:         0      50       0       0       0       0       0       0       0
  1887 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1888 ;;      Totals:        12      50       0       0       0       0       0       0       0
  1889 ;;Total ram usage:       62 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 4
  1892 ;; This function calls:
  1893 ;;		___awdiv
  1894 ;;		___awmod
  1895 ;;		___fladd
  1896 ;;		___fldiv
  1897 ;;		___fleq
  1898 ;;		___flge
  1899 ;;		___flmul
  1900 ;;		___flneg
  1901 ;;		___flsub
  1902 ;;		___fltol
  1903 ;;		___fpclassifyf
  1904 ;;		_floorf
  1905 ;;		_isupper
  1906 ;;		_pad
  1907 ;;		_strcpy
  1908 ;;		_tolower
  1909 ;; This function is called by:
  1910 ;;		_vfpfcnvrt
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text5
  1915  00082A                     __ptext5:
  1916                           	callstack 0
  1917  00082A                     _efgtoa:
  1918                           	callstack 23
  1919  00082A                     
  1920                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  1921  00082A  0E00               	movlw	0
  1922  00082C  0100               	movlb	0	; () banked
  1923  00082E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1924  000830  0E00               	movlw	0
  1925  000832  6F74               	movwf	efgtoa@sign& (0+255),b
  1926  000834                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  1929  000834  C03E  F086         	movff	efgtoa@f,efgtoa@g
  1930  000838  C03F  F087         	movff	efgtoa@f+1,efgtoa@g+1
  1931  00083C  C040  F088         	movff	efgtoa@f+2,efgtoa@g+2
  1932  000840  C041  F089         	movff	efgtoa@f+3,efgtoa@g+3
  1933  000844                     
  1934                           ; BSR set to: 0
  1935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  1936  000844  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1937  000846  EF29  F004         	goto	u3750
  1938  00084A  EF27  F004         	goto	u3751
  1939  00084E                     u3751:
  1940  00084E  EF3F  F004         	goto	l3317
  1941  000852                     u3750:
  1942  000852                     
  1943                           ; BSR set to: 0
  1944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  1945  000852  0E00               	movlw	0
  1946  000854  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  1947  000856  0E01               	movlw	1
  1948  000858  6F74               	movwf	efgtoa@sign& (0+255),b
  1949  00085A                     
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  1952  00085A  C086  F001         	movff	efgtoa@g,___flneg@f1
  1953  00085E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1954  000862  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1955  000866  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1956  00086A  EC45  F01B         	call	___flneg	;wreg free
  1957  00086E  C001  F086         	movff	?___flneg,efgtoa@g
  1958  000872  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  1959  000876  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  1960  00087A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  1961  00087E                     l3317:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  1964  00087E  0E00               	movlw	0
  1965  000880  0100               	movlb	0	; () banked
  1966  000882  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  1967  000884  0E00               	movlw	0
  1968  000886  6F8C               	movwf	efgtoa@n& (0+255),b
  1969  000888                     
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  1972  000888  C0C9  F078         	movff	_width,efgtoa@w
  1973  00088C  C0CA  F079         	movff	_width+1,efgtoa@w+1
  1974  000890                     
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  1977  000890  5174               	movf	efgtoa@sign& (0+255),w,b
  1978  000892  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1979  000894  A4D8               	btfss	status,2,c
  1980  000896  EF4F  F004         	goto	u3761
  1981  00089A  EF51  F004         	goto	u3760
  1982  00089E                     u3761:
  1983  00089E  EF58  F004         	goto	l3325
  1984  0008A2                     u3760:
  1985  0008A2                     
  1986                           ; BSR set to: 0
  1987  0008A2  A5CD               	btfss	_flags& (0+255),2,b
  1988  0008A4  EF56  F004         	goto	u3771
  1989  0008A8  EF58  F004         	goto	u3770
  1990  0008AC                     u3771:
  1991  0008AC  EF72  F004         	goto	l3337
  1992  0008B0                     u3770:
  1993  0008B0                     l3325:
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  1997  0008B0  5174               	movf	efgtoa@sign& (0+255),w,b
  1998  0008B2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1999  0008B4  A4D8               	btfss	status,2,c
  2000  0008B6  EF5F  F004         	goto	u3781
  2001  0008BA  EF61  F004         	goto	u3780
  2002  0008BE                     u3781:
  2003  0008BE  EF67  F004         	goto	l3329
  2004  0008C2                     u3780:
  2005  0008C2                     
  2006                           ; BSR set to: 0
  2007  0008C2  0E00               	movlw	0
  2008  0008C4  6F61               	movwf	(_efgtoa$670+1)& (0+255),b
  2009  0008C6  0E2B               	movlw	43
  2010  0008C8  6F60               	movwf	_efgtoa$670& (0+255),b
  2011  0008CA  EF6B  F004         	goto	l3331
  2012  0008CE                     l3329:
  2013                           
  2014                           ; BSR set to: 0
  2015  0008CE  0E00               	movlw	0
  2016  0008D0  6F61               	movwf	(_efgtoa$670+1)& (0+255),b
  2017  0008D2  0E2D               	movlw	45
  2018  0008D4  6F60               	movwf	_efgtoa$670& (0+255),b
  2019  0008D6                     l3331:
  2020                           
  2021                           ; BSR set to: 0
  2022  0008D6  C060  F100         	movff	_efgtoa$670,_dbuf
  2023  0008DA                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2026  0008DA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2027  0008DC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2028  0008DE                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2031  0008DE  0778               	decf	efgtoa@w& (0+255),f,b
  2032  0008E0  A0D8               	btfss	status,0,c
  2033  0008E2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2034  0008E4                     l3337:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2038  0008E4  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2039  0008E8  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2040  0008EC  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2041  0008F0  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2042  0008F4  EC07  F016         	call	___fpclassifyf	;wreg free
  2043  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2044  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2045  0008FC  A4D8               	btfss	status,2,c
  2046  0008FE  EF83  F004         	goto	u3791
  2047  000902  EF85  F004         	goto	u3790
  2048  000906                     u3791:
  2049  000906  EFD0  F004         	goto	l3355
  2050  00090A                     u3790:
  2051  00090A  0EBF               	movlw	191
  2052  00090C  6E43               	movwf	??_efgtoa^0,c
  2053  00090E  0EFF               	movlw	255
  2054  000910  6E44               	movwf	(??_efgtoa+1)^0,c
  2055  000912  5042               	movf	efgtoa@c^0,w,c
  2056  000914  6E45               	movwf	(??_efgtoa+2)^0,c
  2057  000916  6A46               	clrf	(??_efgtoa+3)^0,c
  2058  000918  5043               	movf	??_efgtoa^0,w,c
  2059  00091A  2645               	addwf	(??_efgtoa+2)^0,f,c
  2060  00091C  5044               	movf	(??_efgtoa+1)^0,w,c
  2061  00091E  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2062  000920  5046               	movf	(??_efgtoa+3)^0,w,c
  2063  000922  E107               	bnz	u3801
  2064  000924  0E1A               	movlw	26
  2065  000926  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2066  000928  B0D8               	btfsc	status,0,c
  2067  00092A  EF99  F004         	goto	u3801
  2068  00092E  EF9B  F004         	goto	u3800
  2069  000932                     u3801:
  2070  000932  EFAA  F004         	goto	l3347
  2071  000936                     u3800:
  2072  000936                     
  2073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2074  000936  0E00               	movlw	low _dbuf
  2075  000938  0100               	movlb	0	; () banked
  2076  00093A  258C               	addwf	efgtoa@n& (0+255),w,b
  2077  00093C  6E01               	movwf	strcpy@dest^0,c
  2078  00093E  0E01               	movlw	high _dbuf
  2079  000940  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2080  000942  6E02               	movwf	(strcpy@dest+1)^0,c
  2081  000944  0E16               	movlw	low STR_3
  2082  000946  6E03               	movwf	strcpy@src^0,c
  2083  000948  0E08               	movlw	high STR_3
  2084  00094A  6E04               	movwf	(strcpy@src+1)^0,c
  2085  00094C  ECCD  F019         	call	_strcpy	;wreg free
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2088  000950  EFB7  F004         	goto	l3349
  2089  000954                     l3347:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2092  000954  0E00               	movlw	low _dbuf
  2093  000956  0100               	movlb	0	; () banked
  2094  000958  258C               	addwf	efgtoa@n& (0+255),w,b
  2095  00095A  6E01               	movwf	strcpy@dest^0,c
  2096  00095C  0E01               	movlw	high _dbuf
  2097  00095E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2098  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2099  000962  0E1E               	movlw	low STR_4
  2100  000964  6E03               	movwf	strcpy@src^0,c
  2101  000966  0E08               	movlw	high STR_4
  2102  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2103  00096A  ECCD  F019         	call	_strcpy	;wreg free
  2104  00096E                     l3349:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2107  00096E  0100               	movlb	0	; () banked
  2108  000970  0EFD               	movlw	253
  2109  000972  2778               	addwf	efgtoa@w& (0+255),f,b
  2110  000974  0EFF               	movlw	255
  2111  000976  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2112  000978                     l3351:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2115  000978  C03C  F011         	movff	efgtoa@fp,pad@fp
  2116  00097C  C03D  F012         	movff	efgtoa@fp+1,pad@fp+1
  2117  000980  0E00               	movlw	low _dbuf
  2118  000982  6E13               	movwf	pad@buf^0,c
  2119  000984  0E01               	movlw	high _dbuf
  2120  000986  6E14               	movwf	(pad@buf+1)^0,c
  2121  000988  C078  F015         	movff	efgtoa@w,pad@p
  2122  00098C  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2123  000990  EC56  F017         	call	_pad	;wreg free
  2124  000994  C011  F03C         	movff	?_pad,?_efgtoa
  2125  000998  C012  F03D         	movff	?_pad+1,?_efgtoa+1
  2126  00099C  EF1B  F00A         	goto	l833
  2127  0009A0                     l3355:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2130  0009A0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2131  0009A4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2132  0009A8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2133  0009AC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2134  0009B0  EC07  F016         	call	___fpclassifyf	;wreg free
  2135  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2136  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2137  0009B8  A4D8               	btfss	status,2,c
  2138  0009BA  EFE1  F004         	goto	u3811
  2139  0009BE  EFE3  F004         	goto	u3810
  2140  0009C2                     u3811:
  2141  0009C2  EF17  F005         	goto	l3373
  2142  0009C6                     u3810:
  2143  0009C6  0EBF               	movlw	191
  2144  0009C8  6E43               	movwf	??_efgtoa^0,c
  2145  0009CA  0EFF               	movlw	255
  2146  0009CC  6E44               	movwf	(??_efgtoa+1)^0,c
  2147  0009CE  5042               	movf	efgtoa@c^0,w,c
  2148  0009D0  6E45               	movwf	(??_efgtoa+2)^0,c
  2149  0009D2  6A46               	clrf	(??_efgtoa+3)^0,c
  2150  0009D4  5043               	movf	??_efgtoa^0,w,c
  2151  0009D6  2645               	addwf	(??_efgtoa+2)^0,f,c
  2152  0009D8  5044               	movf	(??_efgtoa+1)^0,w,c
  2153  0009DA  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2154  0009DC  5046               	movf	(??_efgtoa+3)^0,w,c
  2155  0009DE  E107               	bnz	u3821
  2156  0009E0  0E1A               	movlw	26
  2157  0009E2  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2158  0009E4  B0D8               	btfsc	status,0,c
  2159  0009E6  EFF7  F004         	goto	u3821
  2160  0009EA  EFF9  F004         	goto	u3820
  2161  0009EE                     u3821:
  2162  0009EE  EF08  F005         	goto	l3365
  2163  0009F2                     u3820:
  2164  0009F2                     
  2165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2166  0009F2  0E00               	movlw	low _dbuf
  2167  0009F4  0100               	movlb	0	; () banked
  2168  0009F6  258C               	addwf	efgtoa@n& (0+255),w,b
  2169  0009F8  6E01               	movwf	strcpy@dest^0,c
  2170  0009FA  0E01               	movlw	high _dbuf
  2171  0009FC  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2172  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2173  000A00  0E1A               	movlw	low STR_7
  2174  000A02  6E03               	movwf	strcpy@src^0,c
  2175  000A04  0E08               	movlw	high STR_7
  2176  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2177  000A08  ECCD  F019         	call	_strcpy	;wreg free
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2180  000A0C  EFB7  F004         	goto	l3349
  2181  000A10                     l3365:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2184  000A10  0E00               	movlw	low _dbuf
  2185  000A12  0100               	movlb	0	; () banked
  2186  000A14  258C               	addwf	efgtoa@n& (0+255),w,b
  2187  000A16  6E01               	movwf	strcpy@dest^0,c
  2188  000A18  0E01               	movlw	high _dbuf
  2189  000A1A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2190  000A1C  6E02               	movwf	(strcpy@dest+1)^0,c
  2191  000A1E  0E22               	movlw	low STR_8
  2192  000A20  6E03               	movwf	strcpy@src^0,c
  2193  000A22  0E08               	movlw	high STR_8
  2194  000A24  6E04               	movwf	(strcpy@src+1)^0,c
  2195  000A26  ECCD  F019         	call	_strcpy	;wreg free
  2196  000A2A  EFB7  F004         	goto	l3349
  2197  000A2E                     l3373:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2200  000A2E  0E00               	movlw	0
  2201  000A30  0100               	movlb	0	; () banked
  2202  000A32  6F8E               	movwf	efgtoa@u& (0+255),b
  2203  000A34  0E00               	movlw	0
  2204  000A36  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2205  000A38  0E80               	movlw	128
  2206  000A3A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2207  000A3C  0E3F               	movlw	63
  2208  000A3E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2211  000A40  0E00               	movlw	0
  2212  000A42  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2213  000A44  0E00               	movlw	0
  2214  000A46  6F8A               	movwf	efgtoa@e& (0+255),b
  2215  000A48                     
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2218  000A48  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2219  000A4C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2220  000A50  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2221  000A54  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2222  000A58  0E00               	movlw	0
  2223  000A5A  6E05               	movwf	___fleq@ff2^0,c
  2224  000A5C  0E00               	movlw	0
  2225  000A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2226  000A60  0E00               	movlw	0
  2227  000A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  2228  000A64  0E00               	movlw	0
  2229  000A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  2230  000A68  ECCE  F018         	call	___fleq	;wreg free
  2231  000A6C  B0D8               	btfsc	status,0,c
  2232  000A6E  EF3B  F005         	goto	u3831
  2233  000A72  EF3D  F005         	goto	u3830
  2234  000A76                     u3831:
  2235  000A76  EFC0  F005         	goto	l3391
  2236  000A7A                     u3830:
  2237  000A7A  EF5C  F005         	goto	l3383
  2238  000A7E                     l3379:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2241  000A7E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2242  000A82  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2243  000A86  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2244  000A8A  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2245  000A8E  0E00               	movlw	0
  2246  000A90  6E05               	movwf	___flmul@a^0,c
  2247  000A92  0E00               	movlw	0
  2248  000A94  6E06               	movwf	(___flmul@a+1)^0,c
  2249  000A96  0E20               	movlw	32
  2250  000A98  6E07               	movwf	(___flmul@a+2)^0,c
  2251  000A9A  0E41               	movlw	65
  2252  000A9C  6E08               	movwf	(___flmul@a+3)^0,c
  2253  000A9E  EC92  F00E         	call	___flmul	;wreg free
  2254  000AA2  C001  F08E         	movff	?___flmul,efgtoa@u
  2255  000AA6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2256  000AAA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2257  000AAE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2258  000AB2                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2260  000AB2  0100               	movlb	0	; () banked
  2261  000AB4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2262  000AB6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2263  000AB8                     l3383:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2266  000AB8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2267  000ABC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2268  000AC0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2269  000AC4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2270  000AC8  0E00               	movlw	0
  2271  000ACA  6E05               	movwf	___flmul@a^0,c
  2272  000ACC  0E00               	movlw	0
  2273  000ACE  6E06               	movwf	(___flmul@a+1)^0,c
  2274  000AD0  0E20               	movlw	32
  2275  000AD2  6E07               	movwf	(___flmul@a+2)^0,c
  2276  000AD4  0E41               	movlw	65
  2277  000AD6  6E08               	movwf	(___flmul@a+3)^0,c
  2278  000AD8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2279  000ADC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2280  000AE0  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2281  000AE4  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2282  000AE8  EC92  F00E         	call	___flmul	;wreg free
  2283  000AEC  C001  F01E         	movff	?___flmul,___flge@ff2
  2284  000AF0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2285  000AF4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2286  000AF8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2287  000AFC  EC85  F015         	call	___flge	;wreg free
  2288  000B00  B0D8               	btfsc	status,0,c
  2289  000B02  EF85  F005         	goto	u3841
  2290  000B06  EF87  F005         	goto	u3840
  2291  000B0A                     u3841:
  2292  000B0A  EF3F  F005         	goto	l3379
  2293  000B0E                     u3840:
  2294  000B0E  EFA7  F005         	goto	l3389
  2295  000B12                     l3385:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2298  000B12  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  2299  000B16  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2300  000B1A  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2301  000B1E  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2302  000B22  0E00               	movlw	0
  2303  000B24  6E13               	movwf	___fldiv@a^0,c
  2304  000B26  0E00               	movlw	0
  2305  000B28  6E14               	movwf	(___fldiv@a+1)^0,c
  2306  000B2A  0E20               	movlw	32
  2307  000B2C  6E15               	movwf	(___fldiv@a+2)^0,c
  2308  000B2E  0E41               	movlw	65
  2309  000B30  6E16               	movwf	(___fldiv@a+3)^0,c
  2310  000B32  ECA7  F010         	call	___fldiv	;wreg free
  2311  000B36  C00F  F08E         	movff	?___fldiv,efgtoa@u
  2312  000B3A  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2313  000B3E  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  2314  000B42  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  2315  000B46                     
  2316                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2317  000B46  0100               	movlb	0	; () banked
  2318  000B48  078A               	decf	efgtoa@e& (0+255),f,b
  2319  000B4A  A0D8               	btfss	status,0,c
  2320  000B4C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2321  000B4E                     l3389:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2324  000B4E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2325  000B52  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2326  000B56  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2327  000B5A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2328  000B5E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  2329  000B62  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2330  000B66  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2331  000B6A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2332  000B6E  EC85  F015         	call	___flge	;wreg free
  2333  000B72  A0D8               	btfss	status,0,c
  2334  000B74  EFBE  F005         	goto	u3851
  2335  000B78  EFC0  F005         	goto	u3850
  2336  000B7C                     u3851:
  2337  000B7C  EF89  F005         	goto	l3385
  2338  000B80                     u3850:
  2339  000B80                     l3391:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2342  000B80  C042  F007         	movff	efgtoa@c,tolower@c
  2343  000B84  6A08               	clrf	(tolower@c+1)^0,c
  2344  000B86  ECA0  F01A         	call	_tolower	;wreg free
  2345  000B8A  5007               	movf	?_tolower^0,w,c
  2346  000B8C  0100               	movlb	0	; () banked
  2347  000B8E  6F7B               	movwf	efgtoa@mode& (0+255),b
  2348  000B90                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2351  000B90  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2352  000B94                     
  2353                           ; BSR set to: 0
  2354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2355  000B94  0E67               	movlw	103
  2356  000B96  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2357  000B98  A4D8               	btfss	status,2,c
  2358  000B9A  EFD1  F005         	goto	u3861
  2359  000B9E  EFD3  F005         	goto	u3860
  2360  000BA2                     u3861:
  2361  000BA2  EFF9  F005         	goto	l3405
  2362  000BA6                     u3860:
  2363  000BA6                     
  2364                           ; BSR set to: 0
  2365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2366  000BA6  51CB               	movf	_prec& (0+255),w,b
  2367  000BA8  11CC               	iorwf	(_prec+1)& (0+255),w,b
  2368  000BAA  A4D8               	btfss	status,2,c
  2369  000BAC  EFDA  F005         	goto	u3871
  2370  000BB0  EFDC  F005         	goto	u3870
  2371  000BB4                     u3871:
  2372  000BB4  EFE0  F005         	goto	l3401
  2373  000BB8                     u3870:
  2374  000BB8                     
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2377  000BB8  0E00               	movlw	0
  2378  000BBA  6FCC               	movwf	(_prec+1)& (0+255),b
  2379  000BBC  0E01               	movlw	1
  2380  000BBE  6FCB               	movwf	_prec& (0+255),b
  2381  000BC0                     l3401:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2385  000BC0  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  2386  000BC2  EFED  F005         	goto	u3880
  2387  000BC6  51CC               	movf	(_prec+1)& (0+255),w,b
  2388  000BC8  E106               	bnz	u3881
  2389  000BCA  05CB               	decf	_prec& (0+255),w,b
  2390  000BCC  B0D8               	btfsc	status,0,c
  2391  000BCE  EFEB  F005         	goto	u3881
  2392  000BD2  EFED  F005         	goto	u3880
  2393  000BD6                     u3881:
  2394  000BD6  EFF3  F005         	goto	l849
  2395  000BDA                     u3880:
  2396  000BDA                     l3403:
  2397                           
  2398                           ; BSR set to: 0
  2399  000BDA  0E00               	movlw	0
  2400  000BDC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2401  000BDE  0E06               	movlw	6
  2402  000BE0  6F76               	movwf	efgtoa@p& (0+255),b
  2403  000BE2  EF02  F006         	goto	l3411
  2404  000BE6                     l849:
  2405                           
  2406                           ; BSR set to: 0
  2407  000BE6  C0CB  F076         	movff	_prec,efgtoa@p
  2408  000BEA  C0CC  F077         	movff	_prec+1,efgtoa@p+1
  2409  000BEE  EF02  F006         	goto	l3411
  2410  000BF2                     l3405:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2414  000BF2  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  2415  000BF4  EFFE  F005         	goto	u3891
  2416  000BF8  EF00  F006         	goto	u3890
  2417  000BFC                     u3891:
  2418  000BFC  EFED  F005         	goto	l3403
  2419  000C00                     u3890:
  2420  000C00  EFF3  F005         	goto	l849
  2421  000C04                     l3411:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2425  000C04  0E67               	movlw	103
  2426  000C06  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2427  000C08  A4D8               	btfss	status,2,c
  2428  000C0A  EF09  F006         	goto	u3901
  2429  000C0E  EF0B  F006         	goto	u3900
  2430  000C12                     u3901:
  2431  000C12  EF3A  F006         	goto	l3421
  2432  000C16                     u3900:
  2433  000C16                     
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2436  000C16  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  2437  000C18  EF19  F006         	goto	u3910
  2438  000C1C  0EFC               	movlw	252
  2439  000C1E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  2440  000C20  0EFF               	movlw	255
  2441  000C22  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2442  000C24  A0D8               	btfss	status,0,c
  2443  000C26  EF17  F006         	goto	u3911
  2444  000C2A  EF19  F006         	goto	u3910
  2445  000C2E                     u3911:
  2446  000C2E  EF38  F006         	goto	l3419
  2447  000C32                     u3910:
  2448  000C32                     
  2449                           ; BSR set to: 0
  2450  000C32  0EFF               	movlw	255
  2451  000C34  6E43               	movwf	??_efgtoa^0,c
  2452  000C36  0EFF               	movlw	255
  2453  000C38  6E44               	movwf	(??_efgtoa+1)^0,c
  2454  000C3A  C076  F045         	movff	efgtoa@p,??_efgtoa+2
  2455  000C3E  C077  F046         	movff	efgtoa@p+1,??_efgtoa+3
  2456  000C42  5043               	movf	??_efgtoa^0,w,c
  2457  000C44  2645               	addwf	(??_efgtoa+2)^0,f,c
  2458  000C46  5044               	movf	(??_efgtoa+1)^0,w,c
  2459  000C48  2246               	addwfc	(??_efgtoa+3)^0,f,c
  2460  000C4A  518A               	movf	efgtoa@e& (0+255),w,b
  2461  000C4C  5C45               	subwf	(??_efgtoa+2)^0,w,c
  2462  000C4E  5046               	movf	(??_efgtoa+3)^0,w,c
  2463  000C50  0A80               	xorlw	128
  2464  000C52  6E47               	movwf	(??_efgtoa+4)^0,c
  2465  000C54  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2466  000C56  0A80               	xorlw	128
  2467  000C58  5847               	subwfb	(??_efgtoa+4)^0,w,c
  2468  000C5A  A0D8               	btfss	status,0,c
  2469  000C5C  EF32  F006         	goto	u3921
  2470  000C60  EF34  F006         	goto	u3920
  2471  000C64                     u3921:
  2472  000C64  EF38  F006         	goto	l3419
  2473  000C68                     u3920:
  2474  000C68                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2477  000C68  0E66               	movlw	102
  2478  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2481  000C6C  EF3A  F006         	goto	l3421
  2482  000C70                     l3419:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2486  000C70  0E65               	movlw	101
  2487  000C72  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2488  000C74                     l3421:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2492  000C74  C076  F06C         	movff	efgtoa@p,efgtoa@m
  2493  000C78  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  2494  000C7C                     
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2497  000C7C  0E67               	movlw	103
  2498  000C7E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2499  000C80  A4D8               	btfss	status,2,c
  2500  000C82  EF45  F006         	goto	u3931
  2501  000C86  EF47  F006         	goto	u3930
  2502  000C8A                     u3931:
  2503  000C8A  EF57  F006         	goto	l3429
  2504  000C8E                     u3930:
  2505  000C8E                     
  2506                           ; BSR set to: 0
  2507  000C8E  0E66               	movlw	102
  2508  000C90  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2509  000C92  A4D8               	btfss	status,2,c
  2510  000C94  EF4E  F006         	goto	u3941
  2511  000C98  EF50  F006         	goto	u3940
  2512  000C9C                     u3941:
  2513  000C9C  EF59  F006         	goto	l3431
  2514  000CA0                     u3940:
  2515  000CA0                     
  2516                           ; BSR set to: 0
  2517  000CA0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2518  000CA2  EF57  F006         	goto	u3950
  2519  000CA6  EF55  F006         	goto	u3951
  2520  000CAA                     u3951:
  2521  000CAA  EF59  F006         	goto	l3431
  2522  000CAE                     u3950:
  2523  000CAE                     l3429:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2527  000CAE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2528  000CB0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2529  000CB2                     l3431:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2533  000CB2  0E66               	movlw	102
  2534  000CB4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2535  000CB6  A4D8               	btfss	status,2,c
  2536  000CB8  EF60  F006         	goto	u3961
  2537  000CBC  EF62  F006         	goto	u3960
  2538  000CC0                     u3961:
  2539  000CC0  EF82  F006         	goto	l3441
  2540  000CC4                     u3960:
  2541  000CC4                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2544  000CC4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2545  000CC6  EF69  F006         	goto	u3970
  2546  000CCA  EF67  F006         	goto	u3971
  2547  000CCE                     u3971:
  2548  000CCE  EF75  F006         	goto	l3437
  2549  000CD2                     u3970:
  2550  000CD2                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2553  000CD2  0E00               	movlw	0
  2554  000CD4  6F8E               	movwf	efgtoa@u& (0+255),b
  2555  000CD6  0E00               	movlw	0
  2556  000CD8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2557  000CDA  0E80               	movlw	128
  2558  000CDC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2559  000CDE  0E3F               	movlw	63
  2560  000CE0  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2563  000CE2  0E00               	movlw	0
  2564  000CE4  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2565  000CE6  0E00               	movlw	0
  2566  000CE8  6F8A               	movwf	efgtoa@e& (0+255),b
  2567  000CEA                     l3437:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2571  000CEA  0E67               	movlw	103
  2572  000CEC  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2573  000CEE  B4D8               	btfsc	status,2,c
  2574  000CF0  EF7C  F006         	goto	u3981
  2575  000CF4  EF7E  F006         	goto	u3980
  2576  000CF8                     u3981:
  2577  000CF8  EF82  F006         	goto	l3441
  2578  000CFC                     u3980:
  2579  000CFC                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2582  000CFC  518A               	movf	efgtoa@e& (0+255),w,b
  2583  000CFE  276C               	addwf	efgtoa@m& (0+255),f,b
  2584  000D00  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2585  000D02  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2586  000D04                     l3441:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2590  000D04  0E00               	movlw	0
  2591  000D06  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2592  000D08  0E00               	movlw	0
  2593  000D0A  6F84               	movwf	efgtoa@i& (0+255),b
  2594  000D0C                     
  2595                           ; BSR set to: 0
  2596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2597  000D0C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  2598  000D10  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  2599  000D14  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  2600  000D18  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  2601  000D1C                     
  2602                           ; BSR set to: 0
  2603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2604  000D1C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  2605  000D20  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  2606  000D24  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  2607  000D28  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2610  000D2C  EF13  F007         	goto	l3455
  2611  000D30                     l3447:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2615  000D30  C07C  F00F         	movff	efgtoa@h,___fldiv@b
  2616  000D34  C07D  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2617  000D38  C07E  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2618  000D3C  C07F  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2619  000D40  C08E  F013         	movff	efgtoa@u,___fldiv@a
  2620  000D44  C08F  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2621  000D48  C090  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2622  000D4C  C091  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2623  000D50  ECA7  F010         	call	___fldiv	;wreg free
  2624  000D54  C00F  F028         	movff	?___fldiv,floorf@x
  2625  000D58  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2626  000D5C  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2627  000D60  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2628  000D64  EC74  F012         	call	_floorf	;wreg free
  2629  000D68  C028  F080         	movff	?_floorf,efgtoa@l
  2630  000D6C  C029  F081         	movff	?_floorf+1,efgtoa@l+1
  2631  000D70  C02A  F082         	movff	?_floorf+2,efgtoa@l+2
  2632  000D74  C02B  F083         	movff	?_floorf+3,efgtoa@l+3
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2635  000D78  C080  F001         	movff	efgtoa@l,___fltol@f1
  2636  000D7C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2637  000D80  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2638  000D84  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2639  000D88  EC02  F015         	call	___fltol	;wreg free
  2640  000D8C  C001  F072         	movff	?___fltol,efgtoa@d
  2641  000D90  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2642  000D94                     
  2643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2644  000D94  C07C  F01A         	movff	efgtoa@h,___flsub@b
  2645  000D98  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2646  000D9C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2647  000DA0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2648  000DA4  C08E  F005         	movff	efgtoa@u,___flmul@a
  2649  000DA8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  2650  000DAC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  2651  000DB0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  2652  000DB4  C080  F001         	movff	efgtoa@l,___flmul@b
  2653  000DB8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  2654  000DBC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  2655  000DC0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  2656  000DC4  EC92  F00E         	call	___flmul	;wreg free
  2657  000DC8  C001  F01E         	movff	?___flmul,___flsub@a
  2658  000DCC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2659  000DD0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2660  000DD4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2661  000DD8  ECC3  F01A         	call	___flsub	;wreg free
  2662  000DDC  C01A  F07C         	movff	?___flsub,efgtoa@h
  2663  000DE0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  2664  000DE4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  2665  000DE8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  2666  000DEC                     
  2667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2668  000DEC  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  2669  000DF0  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  2670  000DF4  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  2671  000DF8  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  2672  000DFC  0E00               	movlw	0
  2673  000DFE  6E13               	movwf	___fldiv@a^0,c
  2674  000E00  0E00               	movlw	0
  2675  000E02  6E14               	movwf	(___fldiv@a+1)^0,c
  2676  000E04  0E20               	movlw	32
  2677  000E06  6E15               	movwf	(___fldiv@a+2)^0,c
  2678  000E08  0E41               	movlw	65
  2679  000E0A  6E16               	movwf	(___fldiv@a+3)^0,c
  2680  000E0C  ECA7  F010         	call	___fldiv	;wreg free
  2681  000E10  C00F  F08E         	movff	?___fldiv,efgtoa@u
  2682  000E14  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2683  000E18  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  2684  000E1C  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  2685  000E20                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2687  000E20  0100               	movlb	0	; () banked
  2688  000E22  4B84               	infsnz	efgtoa@i& (0+255),f,b
  2689  000E24  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  2690  000E26                     l3455:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2694  000E26  516C               	movf	efgtoa@m& (0+255),w,b
  2695  000E28  5D84               	subwf	efgtoa@i& (0+255),w,b
  2696  000E2A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  2697  000E2C  0A80               	xorlw	128
  2698  000E2E  6E43               	movwf	??_efgtoa^0,c
  2699  000E30  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  2700  000E32  0A80               	xorlw	128
  2701  000E34  5843               	subwfb	??_efgtoa^0,w,c
  2702  000E36  A0D8               	btfss	status,0,c
  2703  000E38  EF20  F007         	goto	u3991
  2704  000E3C  EF22  F007         	goto	u3990
  2705  000E40                     u3991:
  2706  000E40  EF98  F006         	goto	l3447
  2707  000E44                     u3990:
  2708  000E44                     
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2711  000E44  C08E  F001         	movff	efgtoa@u,___flmul@b
  2712  000E48  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2713  000E4C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2714  000E50  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2715  000E54  0E00               	movlw	0
  2716  000E56  6E05               	movwf	___flmul@a^0,c
  2717  000E58  0E00               	movlw	0
  2718  000E5A  6E06               	movwf	(___flmul@a+1)^0,c
  2719  000E5C  0EA0               	movlw	160
  2720  000E5E  6E07               	movwf	(___flmul@a+2)^0,c
  2721  000E60  0E40               	movlw	64
  2722  000E62  6E08               	movwf	(___flmul@a+3)^0,c
  2723  000E64  EC92  F00E         	call	___flmul	;wreg free
  2724  000E68  C001  F080         	movff	?___flmul,efgtoa@l
  2725  000E6C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  2726  000E70  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  2727  000E74  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  2728  000E78                     
  2729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2730  000E78  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  2731  000E7C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2732  000E80  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2733  000E84  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2734  000E88  C080  F01E         	movff	efgtoa@l,___flge@ff2
  2735  000E8C  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2736  000E90  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2737  000E94  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2738  000E98  EC85  F015         	call	___flge	;wreg free
  2739  000E9C  B0D8               	btfsc	status,0,c
  2740  000E9E  EF53  F007         	goto	u4001
  2741  000EA2  EF55  F007         	goto	u4000
  2742  000EA6                     u4001:
  2743  000EA6  EF60  F007         	goto	l3463
  2744  000EAA                     u4000:
  2745  000EAA                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2747  000EAA  0E00               	movlw	0
  2748  000EAC  0100               	movlb	0	; () banked
  2749  000EAE  6F80               	movwf	efgtoa@l& (0+255),b
  2750  000EB0  0E00               	movlw	0
  2751  000EB2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2752  000EB4  0E00               	movlw	0
  2753  000EB6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2754  000EB8  0E00               	movlw	0
  2755  000EBA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2758  000EBC  EF89  F007         	goto	l3469
  2759  000EC0                     l3463:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2762  000EC0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  2763  000EC4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2764  000EC8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2765  000ECC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2766  000ED0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  2767  000ED4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2768  000ED8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2769  000EDC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2770  000EE0  ECCE  F018         	call	___fleq	;wreg free
  2771  000EE4  A0D8               	btfss	status,0,c
  2772  000EE6  EF77  F007         	goto	u4011
  2773  000EEA  EF79  F007         	goto	u4010
  2774  000EEE                     u4011:
  2775  000EEE  EF89  F007         	goto	l3469
  2776  000EF2                     u4010:
  2777  000EF2  0100               	movlb	0	; () banked
  2778  000EF4  B172               	btfsc	efgtoa@d& (0+255),0,b
  2779  000EF6  EF7F  F007         	goto	u4021
  2780  000EFA  EF81  F007         	goto	u4020
  2781  000EFE                     u4021:
  2782  000EFE  EF89  F007         	goto	l3469
  2783  000F02                     u4020:
  2784  000F02                     
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2787  000F02  0E00               	movlw	0
  2788  000F04  6F80               	movwf	efgtoa@l& (0+255),b
  2789  000F06  0E00               	movlw	0
  2790  000F08  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2791  000F0A  0E00               	movlw	0
  2792  000F0C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2793  000F0E  0E00               	movlw	0
  2794  000F10  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2795  000F12                     l3469:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2798  000F12  C086  F001         	movff	efgtoa@g,___fladd@b
  2799  000F16  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  2800  000F1A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  2801  000F1E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  2802  000F22  C080  F005         	movff	efgtoa@l,___fladd@a
  2803  000F26  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  2804  000F2A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  2805  000F2E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  2806  000F32  EC1C  F00A         	call	___fladd	;wreg free
  2807  000F36  C001  F07C         	movff	?___fladd,efgtoa@h
  2808  000F3A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  2809  000F3E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  2810  000F42  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  2811  000F46                     
  2812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2813  000F46  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  2814  000F4A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2815  000F4E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2816  000F52  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2817  000F56  0E00               	movlw	0
  2818  000F58  6E05               	movwf	___flmul@a^0,c
  2819  000F5A  0E00               	movlw	0
  2820  000F5C  6E06               	movwf	(___flmul@a+1)^0,c
  2821  000F5E  0E20               	movlw	32
  2822  000F60  6E07               	movwf	(___flmul@a+2)^0,c
  2823  000F62  0E41               	movlw	65
  2824  000F64  6E08               	movwf	(___flmul@a+3)^0,c
  2825  000F66  C06E  F001         	movff	efgtoa@ou,___flmul@b
  2826  000F6A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2827  000F6E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2828  000F72  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2829  000F76  EC92  F00E         	call	___flmul	;wreg free
  2830  000F7A  C001  F01E         	movff	?___flmul,___flge@ff2
  2831  000F7E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2832  000F82  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2833  000F86  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2834  000F8A  EC85  F015         	call	___flge	;wreg free
  2835  000F8E  A0D8               	btfss	status,0,c
  2836  000F90  EFCC  F007         	goto	u4031
  2837  000F94  EFCE  F007         	goto	u4030
  2838  000F98                     u4031:
  2839  000F98  EFF7  F007         	goto	l3481
  2840  000F9C                     u4030:
  2841  000F9C                     
  2842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  2843  000F9C  0100               	movlb	0	; () banked
  2844  000F9E  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2845  000FA0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2846  000FA2                     
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  2849  000FA2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  2850  000FA6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2851  000FAA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2852  000FAE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2853  000FB2  0E00               	movlw	0
  2854  000FB4  6E05               	movwf	___flmul@a^0,c
  2855  000FB6  0E00               	movlw	0
  2856  000FB8  6E06               	movwf	(___flmul@a+1)^0,c
  2857  000FBA  0E20               	movlw	32
  2858  000FBC  6E07               	movwf	(___flmul@a+2)^0,c
  2859  000FBE  0E41               	movlw	65
  2860  000FC0  6E08               	movwf	(___flmul@a+3)^0,c
  2861  000FC2  EC92  F00E         	call	___flmul	;wreg free
  2862  000FC6  C001  F06E         	movff	?___flmul,efgtoa@ou
  2863  000FCA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  2864  000FCE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  2865  000FD2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  2866  000FD6                     
  2867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  2868  000FD6  0E66               	movlw	102
  2869  000FD8  0100               	movlb	0	; () banked
  2870  000FDA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2871  000FDC  A4D8               	btfss	status,2,c
  2872  000FDE  EFF3  F007         	goto	u4041
  2873  000FE2  EFF5  F007         	goto	u4040
  2874  000FE6                     u4041:
  2875  000FE6  EFF7  F007         	goto	l3481
  2876  000FEA                     u4040:
  2877  000FEA                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  2880  000FEA  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2881  000FEC  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2882  000FEE                     l3481:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  2885  000FEE  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  2886  000FF2  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  2887  000FF6  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  2888  000FFA  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  2889  000FFE                     
  2890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  2891  000FFE  0E65               	movlw	101
  2892  001000  0100               	movlb	0	; () banked
  2893  001002  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2894  001004  B4D8               	btfsc	status,2,c
  2895  001006  EF07  F008         	goto	u4051
  2896  00100A  EF09  F008         	goto	u4050
  2897  00100E                     u4051:
  2898  00100E  EF0F  F008         	goto	l3487
  2899  001012                     u4050:
  2900  001012                     
  2901                           ; BSR set to: 0
  2902  001012  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  2903  001016  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  2904  00101A  EF13  F008         	goto	l877
  2905  00101E                     l3487:
  2906                           
  2907                           ; BSR set to: 0
  2908  00101E  0E00               	movlw	0
  2909  001020  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  2910  001022  0E00               	movlw	0
  2911  001024  6F6A               	movwf	efgtoa@ne& (0+255),b
  2912  001026                     l877:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  2916  001026  0E00               	movlw	0
  2917  001028  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  2918  00102A  0E00               	movlw	0
  2919  00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  2922  00102E  0E00               	movlw	0
  2923  001030  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  2924  001032  0E00               	movlw	0
  2925  001034  6F66               	movwf	efgtoa@t& (0+255),b
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  2928  001036  0E00               	movlw	0
  2929  001038  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2930  00103A  0E00               	movlw	0
  2931  00103C  6F84               	movwf	efgtoa@i& (0+255),b
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2934  00103E  EF0E  F009         	goto	l3537
  2935  001042                     l3489:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  2939  001042  C07C  F00F         	movff	efgtoa@h,___fldiv@b
  2940  001046  C07D  F010         	movff	efgtoa@h+1,___fldiv@b+1
  2941  00104A  C07E  F011         	movff	efgtoa@h+2,___fldiv@b+2
  2942  00104E  C07F  F012         	movff	efgtoa@h+3,___fldiv@b+3
  2943  001052  C08E  F013         	movff	efgtoa@u,___fldiv@a
  2944  001056  C08F  F014         	movff	efgtoa@u+1,___fldiv@a+1
  2945  00105A  C090  F015         	movff	efgtoa@u+2,___fldiv@a+2
  2946  00105E  C091  F016         	movff	efgtoa@u+3,___fldiv@a+3
  2947  001062  ECA7  F010         	call	___fldiv	;wreg free
  2948  001066  C00F  F028         	movff	?___fldiv,floorf@x
  2949  00106A  C010  F029         	movff	?___fldiv+1,floorf@x+1
  2950  00106E  C011  F02A         	movff	?___fldiv+2,floorf@x+2
  2951  001072  C012  F02B         	movff	?___fldiv+3,floorf@x+3
  2952  001076  EC74  F012         	call	_floorf	;wreg free
  2953  00107A  C028  F080         	movff	?_floorf,efgtoa@l
  2954  00107E  C029  F081         	movff	?_floorf+1,efgtoa@l+1
  2955  001082  C02A  F082         	movff	?_floorf+2,efgtoa@l+2
  2956  001086  C02B  F083         	movff	?_floorf+3,efgtoa@l+3
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  2959  00108A  C080  F001         	movff	efgtoa@l,___fltol@f1
  2960  00108E  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2961  001092  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2962  001096  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2963  00109A  EC02  F015         	call	___fltol	;wreg free
  2964  00109E  C001  F072         	movff	?___fltol,efgtoa@d
  2965  0010A2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2966  0010A6                     
  2967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2968  0010A6  0100               	movlb	0	; () banked
  2969  0010A8  B9CD               	btfsc	_flags& (0+255),4,b
  2970  0010AA  EF59  F008         	goto	u4061
  2971  0010AE  EF5B  F008         	goto	u4060
  2972  0010B2                     u4061:
  2973  0010B2  EF78  F008         	goto	l3501
  2974  0010B6                     u4060:
  2975  0010B6                     
  2976                           ; BSR set to: 0
  2977  0010B6  5172               	movf	efgtoa@d& (0+255),w,b
  2978  0010B8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2979  0010BA  A4D8               	btfss	status,2,c
  2980  0010BC  EF62  F008         	goto	u4071
  2981  0010C0  EF64  F008         	goto	u4070
  2982  0010C4                     u4071:
  2983  0010C4  EF78  F008         	goto	l3501
  2984  0010C8                     u4070:
  2985  0010C8                     
  2986                           ; BSR set to: 0
  2987  0010C8  0E67               	movlw	103
  2988  0010CA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2989  0010CC  A4D8               	btfss	status,2,c
  2990  0010CE  EF6B  F008         	goto	u4081
  2991  0010D2  EF6D  F008         	goto	u4080
  2992  0010D6                     u4081:
  2993  0010D6  EF78  F008         	goto	l3501
  2994  0010DA                     u4080:
  2995  0010DA                     
  2996                           ; BSR set to: 0
  2997  0010DA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2998  0010DC  EF74  F008         	goto	u4090
  2999  0010E0  EF72  F008         	goto	u4091
  3000  0010E4                     u4091:
  3001  0010E4  EF78  F008         	goto	l3501
  3002  0010E8                     u4090:
  3003  0010E8                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3006  0010E8  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3007  0010EA  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3010  0010EC  EFC2  F008         	goto	l3529
  3011  0010F0                     l3501:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3015  0010F0  5168               	movf	efgtoa@pp& (0+255),w,b
  3016  0010F2  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3017  0010F4  A4D8               	btfss	status,2,c
  3018  0010F6  EF7F  F008         	goto	u4101
  3019  0010FA  EF81  F008         	goto	u4100
  3020  0010FE                     u4101:
  3021  0010FE  EFAB  F008         	goto	l3521
  3022  001102                     u4100:
  3023  001102                     
  3024                           ; BSR set to: 0
  3025  001102  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3026  001104  EF88  F008         	goto	u4110
  3027  001108  EF86  F008         	goto	u4111
  3028  00110C                     u4111:
  3029  00110C  EFAB  F008         	goto	l3521
  3030  001110                     u4110:
  3031  001110                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3034  001110  0E00               	movlw	low _dbuf
  3035  001112  258C               	addwf	efgtoa@n& (0+255),w,b
  3036  001114  6ED9               	movwf	fsr2l,c
  3037  001116  0E01               	movlw	high _dbuf
  3038  001118  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3039  00111A  6EDA               	movwf	fsr2h,c
  3040  00111C  0E2E               	movlw	46
  3041  00111E  6EDF               	movwf	indf2,c
  3042  001120                     
  3043                           ; BSR set to: 0
  3044  001120  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3045  001122  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3046  001124                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3049  001124  0778               	decf	efgtoa@w& (0+255),f,b
  3050  001126  A0D8               	btfss	status,0,c
  3051  001128  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3052  00112A                     
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3055  00112A  0E00               	movlw	0
  3056  00112C  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3057  00112E  0E01               	movlw	1
  3058  001130  6F68               	movwf	efgtoa@pp& (0+255),b
  3059  001132  EFAB  F008         	goto	l3521
  3060  001136                     l3513:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3064  001136  0E00               	movlw	low _dbuf
  3065  001138  258C               	addwf	efgtoa@n& (0+255),w,b
  3066  00113A  6ED9               	movwf	fsr2l,c
  3067  00113C  0E01               	movlw	high _dbuf
  3068  00113E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3069  001140  6EDA               	movwf	fsr2h,c
  3070  001142  0E30               	movlw	48
  3071  001144  6EDF               	movwf	indf2,c
  3072  001146                     
  3073                           ; BSR set to: 0
  3074  001146  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3075  001148  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3076  00114A                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3079  00114A  0778               	decf	efgtoa@w& (0+255),f,b
  3080  00114C  A0D8               	btfss	status,0,c
  3081  00114E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3082  001150                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3085  001150  0766               	decf	efgtoa@t& (0+255),f,b
  3086  001152  A0D8               	btfss	status,0,c
  3087  001154  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3088  001156                     l3521:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3092  001156  5166               	movf	efgtoa@t& (0+255),w,b
  3093  001158  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3094  00115A  A4D8               	btfss	status,2,c
  3095  00115C  EFB2  F008         	goto	u4121
  3096  001160  EFB4  F008         	goto	u4120
  3097  001164                     u4121:
  3098  001164  EF9B  F008         	goto	l3513
  3099  001168                     u4120:
  3100  001168                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3103  001168  0E00               	movlw	low _dbuf
  3104  00116A  258C               	addwf	efgtoa@n& (0+255),w,b
  3105  00116C  6ED9               	movwf	fsr2l,c
  3106  00116E  0E01               	movlw	high _dbuf
  3107  001170  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3108  001172  6EDA               	movwf	fsr2h,c
  3109  001174  5172               	movf	efgtoa@d& (0+255),w,b
  3110  001176  0F30               	addlw	48
  3111  001178  6EDF               	movwf	indf2,c
  3112  00117A                     
  3113                           ; BSR set to: 0
  3114  00117A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3115  00117C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3116  00117E                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3119  00117E  0778               	decf	efgtoa@w& (0+255),f,b
  3120  001180  A0D8               	btfss	status,0,c
  3121  001182  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3122  001184                     l3529:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3126  001184  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3127  001188  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3128  00118C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3129  001190  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3130  001194  C08E  F005         	movff	efgtoa@u,___flmul@a
  3131  001198  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3132  00119C  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3133  0011A0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3134  0011A4  C080  F001         	movff	efgtoa@l,___flmul@b
  3135  0011A8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3136  0011AC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3137  0011B0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3138  0011B4  EC92  F00E         	call	___flmul	;wreg free
  3139  0011B8  C001  F01E         	movff	?___flmul,___flsub@a
  3140  0011BC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3141  0011C0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3142  0011C4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3143  0011C8  ECC3  F01A         	call	___flsub	;wreg free
  3144  0011CC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3145  0011D0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3146  0011D4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3147  0011D8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3148  0011DC                     
  3149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3150  0011DC  C08E  F00F         	movff	efgtoa@u,___fldiv@b
  3151  0011E0  C08F  F010         	movff	efgtoa@u+1,___fldiv@b+1
  3152  0011E4  C090  F011         	movff	efgtoa@u+2,___fldiv@b+2
  3153  0011E8  C091  F012         	movff	efgtoa@u+3,___fldiv@b+3
  3154  0011EC  0E00               	movlw	0
  3155  0011EE  6E13               	movwf	___fldiv@a^0,c
  3156  0011F0  0E00               	movlw	0
  3157  0011F2  6E14               	movwf	(___fldiv@a+1)^0,c
  3158  0011F4  0E20               	movlw	32
  3159  0011F6  6E15               	movwf	(___fldiv@a+2)^0,c
  3160  0011F8  0E41               	movlw	65
  3161  0011FA  6E16               	movwf	(___fldiv@a+3)^0,c
  3162  0011FC  ECA7  F010         	call	___fldiv	;wreg free
  3163  001200  C00F  F08E         	movff	?___fldiv,efgtoa@u
  3164  001204  C010  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3165  001208  C011  F090         	movff	?___fldiv+2,efgtoa@u+2
  3166  00120C  C012  F091         	movff	?___fldiv+3,efgtoa@u+3
  3167  001210                     
  3168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3169  001210  0100               	movlb	0	; () banked
  3170  001212  076A               	decf	efgtoa@ne& (0+255),f,b
  3171  001214  A0D8               	btfss	status,0,c
  3172  001216  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3173  001218                     
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3176  001218  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3177  00121A  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3178  00121C                     l3537:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3182  00121C  516C               	movf	efgtoa@m& (0+255),w,b
  3183  00121E  5D84               	subwf	efgtoa@i& (0+255),w,b
  3184  001220  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3185  001222  0A80               	xorlw	128
  3186  001224  6E43               	movwf	??_efgtoa^0,c
  3187  001226  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3188  001228  0A80               	xorlw	128
  3189  00122A  5843               	subwfb	??_efgtoa^0,w,c
  3190  00122C  B0D8               	btfsc	status,0,c
  3191  00122E  EF1B  F009         	goto	u4131
  3192  001232  EF1D  F009         	goto	u4130
  3193  001236                     u4131:
  3194  001236  EF2B  F009         	goto	l3541
  3195  00123A                     u4130:
  3196  00123A                     
  3197                           ; BSR set to: 0
  3198  00123A  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3199  00123C  EF29  F009         	goto	u4141
  3200  001240  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3201  001242  E109               	bnz	u4140
  3202  001244  0E4B               	movlw	75
  3203  001246  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3204  001248  A0D8               	btfss	status,0,c
  3205  00124A  EF29  F009         	goto	u4141
  3206  00124E  EF2B  F009         	goto	u4140
  3207  001252                     u4141:
  3208  001252  EF21  F008         	goto	l3489
  3209  001256                     u4140:
  3210  001256                     l3541:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3214  001256  5168               	movf	efgtoa@pp& (0+255),w,b
  3215  001258  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3216  00125A  A4D8               	btfss	status,2,c
  3217  00125C  EF32  F009         	goto	u4151
  3218  001260  EF34  F009         	goto	u4150
  3219  001264                     u4151:
  3220  001264  EF45  F009         	goto	l3549
  3221  001268                     u4150:
  3222  001268                     
  3223                           ; BSR set to: 0
  3224  001268  A9CD               	btfss	_flags& (0+255),4,b
  3225  00126A  EF39  F009         	goto	u4161
  3226  00126E  EF3B  F009         	goto	u4160
  3227  001272                     u4161:
  3228  001272  EF45  F009         	goto	l3549
  3229  001276                     u4160:
  3230  001276                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3233  001276  0E00               	movlw	low _dbuf
  3234  001278  258C               	addwf	efgtoa@n& (0+255),w,b
  3235  00127A  6ED9               	movwf	fsr2l,c
  3236  00127C  0E01               	movlw	high _dbuf
  3237  00127E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3238  001280  6EDA               	movwf	fsr2h,c
  3239  001282  0E2E               	movlw	46
  3240  001284  6EDF               	movwf	indf2,c
  3241  001286                     
  3242                           ; BSR set to: 0
  3243  001286  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3244  001288  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3245  00128A                     l3549:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3249  00128A  0E00               	movlw	low _dbuf
  3250  00128C  258C               	addwf	efgtoa@n& (0+255),w,b
  3251  00128E  6ED9               	movwf	fsr2l,c
  3252  001290  0E01               	movlw	high _dbuf
  3253  001292  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3254  001294  6EDA               	movwf	fsr2h,c
  3255  001296  0E00               	movlw	0
  3256  001298  6EDF               	movwf	indf2,c
  3257  00129A                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3260  00129A  0E65               	movlw	101
  3261  00129C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3262  00129E  A4D8               	btfss	status,2,c
  3263  0012A0  EF54  F009         	goto	u4171
  3264  0012A4  EF56  F009         	goto	u4170
  3265  0012A8                     u4171:
  3266  0012A8  EFBC  F004         	goto	l3351
  3267  0012AC                     u4170:
  3268  0012AC                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3271  0012AC  0E00               	movlw	0
  3272  0012AE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3273  0012B0  0E4F               	movlw	79
  3274  0012B2  6F84               	movwf	efgtoa@i& (0+255),b
  3275  0012B4                     
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3278  0012B4  0E00               	movlw	low _dbuf
  3279  0012B6  2584               	addwf	efgtoa@i& (0+255),w,b
  3280  0012B8  6ED9               	movwf	fsr2l,c
  3281  0012BA  0E01               	movlw	high _dbuf
  3282  0012BC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3283  0012BE  6EDA               	movwf	fsr2h,c
  3284  0012C0  0E00               	movlw	0
  3285  0012C2  6EDF               	movwf	indf2,c
  3286  0012C4                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3289  0012C4  0E00               	movlw	0
  3290  0012C6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3291  0012C8  0E00               	movlw	0
  3292  0012CA  6F74               	movwf	efgtoa@sign& (0+255),b
  3293  0012CC                     
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3296  0012CC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3297  0012CE  EF6D  F009         	goto	u4180
  3298  0012D2  EF6B  F009         	goto	u4181
  3299  0012D6                     u4181:
  3300  0012D6  EF75  F009         	goto	l3565
  3301  0012DA                     u4180:
  3302  0012DA                     
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3305  0012DA  0E00               	movlw	0
  3306  0012DC  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3307  0012DE  0E01               	movlw	1
  3308  0012E0  6F74               	movwf	efgtoa@sign& (0+255),b
  3309  0012E2                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3312  0012E2  6D8A               	negf	efgtoa@e& (0+255),b
  3313  0012E4  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3314  0012E6  B0D8               	btfsc	status,0,c
  3315  0012E8  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3316  0012EA                     l3565:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3320  0012EA  0E00               	movlw	0
  3321  0012EC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3322  0012EE  0E02               	movlw	2
  3323  0012F0  6F76               	movwf	efgtoa@p& (0+255),b
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3326  0012F2  EFA6  F009         	goto	l3577
  3327  0012F6                     l3567:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3331  0012F6  0784               	decf	efgtoa@i& (0+255),f,b
  3332  0012F8  A0D8               	btfss	status,0,c
  3333  0012FA  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3334  0012FC                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3337  0012FC  0E00               	movlw	low _dbuf
  3338  0012FE  2584               	addwf	efgtoa@i& (0+255),w,b
  3339  001300  6ED9               	movwf	fsr2l,c
  3340  001302  0E01               	movlw	high _dbuf
  3341  001304  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3342  001306  6EDA               	movwf	fsr2h,c
  3343  001308  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3344  00130C  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3345  001310  0E00               	movlw	0
  3346  001312  6E04               	movwf	(___awmod@divisor+1)^0,c
  3347  001314  0E0A               	movlw	10
  3348  001316  6E03               	movwf	___awmod@divisor^0,c
  3349  001318  EC76  F018         	call	___awmod	;wreg free
  3350  00131C  5001               	movf	?___awmod^0,w,c
  3351  00131E  0F30               	addlw	48
  3352  001320  6EDF               	movwf	indf2,c
  3353  001322                     
  3354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3355  001322  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3356  001326  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3357  00132A  0E00               	movlw	0
  3358  00132C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3359  00132E  0E0A               	movlw	10
  3360  001330  6E03               	movwf	___awdiv@divisor^0,c
  3361  001332  ECB9  F017         	call	___awdiv	;wreg free
  3362  001336  C001  F08A         	movff	?___awdiv,efgtoa@e
  3363  00133A  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3364  00133E                     
  3365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3366  00133E  0100               	movlb	0	; () banked
  3367  001340  0776               	decf	efgtoa@p& (0+255),f,b
  3368  001342  A0D8               	btfss	status,0,c
  3369  001344  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3370  001346                     
  3371                           ; BSR set to: 0
  3372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3373  001346  0778               	decf	efgtoa@w& (0+255),f,b
  3374  001348  A0D8               	btfss	status,0,c
  3375  00134A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3376  00134C                     l3577:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3380  00134C  518A               	movf	efgtoa@e& (0+255),w,b
  3381  00134E  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3382  001350  A4D8               	btfss	status,2,c
  3383  001352  EFAD  F009         	goto	u4191
  3384  001356  EFAF  F009         	goto	u4190
  3385  00135A                     u4191:
  3386  00135A  EF7B  F009         	goto	l3567
  3387  00135E                     u4190:
  3388  00135E                     
  3389                           ; BSR set to: 0
  3390  00135E  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3391  001360  EFBC  F009         	goto	u4200
  3392  001364  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3393  001366  E106               	bnz	u4201
  3394  001368  0576               	decf	efgtoa@p& (0+255),w,b
  3395  00136A  B0D8               	btfsc	status,0,c
  3396  00136C  EFBA  F009         	goto	u4201
  3397  001370  EFBC  F009         	goto	u4200
  3398  001374                     u4201:
  3399  001374  EF7B  F009         	goto	l3567
  3400  001378                     u4200:
  3401  001378                     
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3404  001378  0784               	decf	efgtoa@i& (0+255),f,b
  3405  00137A  A0D8               	btfss	status,0,c
  3406  00137C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3407  00137E                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3410  00137E  5174               	movf	efgtoa@sign& (0+255),w,b
  3411  001380  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3412  001382  A4D8               	btfss	status,2,c
  3413  001384  EFC6  F009         	goto	u4211
  3414  001388  EFC8  F009         	goto	u4210
  3415  00138C                     u4211:
  3416  00138C  EFCE  F009         	goto	l3587
  3417  001390                     u4210:
  3418  001390                     
  3419                           ; BSR set to: 0
  3420  001390  0E00               	movlw	0
  3421  001392  6F63               	movwf	(_efgtoa$678+1)& (0+255),b
  3422  001394  0E2B               	movlw	43
  3423  001396  6F62               	movwf	_efgtoa$678& (0+255),b
  3424  001398  EFD2  F009         	goto	l3589
  3425  00139C                     l3587:
  3426                           
  3427                           ; BSR set to: 0
  3428  00139C  0E00               	movlw	0
  3429  00139E  6F63               	movwf	(_efgtoa$678+1)& (0+255),b
  3430  0013A0  0E2D               	movlw	45
  3431  0013A2  6F62               	movwf	_efgtoa$678& (0+255),b
  3432  0013A4                     l3589:
  3433                           
  3434                           ; BSR set to: 0
  3435  0013A4  0E00               	movlw	low _dbuf
  3436  0013A6  2584               	addwf	efgtoa@i& (0+255),w,b
  3437  0013A8  6ED9               	movwf	fsr2l,c
  3438  0013AA  0E01               	movlw	high _dbuf
  3439  0013AC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3440  0013AE  6EDA               	movwf	fsr2h,c
  3441  0013B0  C062  FFDF         	movff	_efgtoa$678,indf2
  3442  0013B4                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3445  0013B4  0778               	decf	efgtoa@w& (0+255),f,b
  3446  0013B6  A0D8               	btfss	status,0,c
  3447  0013B8  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3448  0013BA                     
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3451  0013BA  0784               	decf	efgtoa@i& (0+255),f,b
  3452  0013BC  A0D8               	btfss	status,0,c
  3453  0013BE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3454  0013C0                     
  3455                           ; BSR set to: 0
  3456  0013C0  0EBF               	movlw	191
  3457  0013C2  6E43               	movwf	??_efgtoa^0,c
  3458  0013C4  0EFF               	movlw	255
  3459  0013C6  6E44               	movwf	(??_efgtoa+1)^0,c
  3460  0013C8  5042               	movf	efgtoa@c^0,w,c
  3461  0013CA  6E45               	movwf	(??_efgtoa+2)^0,c
  3462  0013CC  6A46               	clrf	(??_efgtoa+3)^0,c
  3463  0013CE  5043               	movf	??_efgtoa^0,w,c
  3464  0013D0  2645               	addwf	(??_efgtoa+2)^0,f,c
  3465  0013D2  5044               	movf	(??_efgtoa+1)^0,w,c
  3466  0013D4  2246               	addwfc	(??_efgtoa+3)^0,f,c
  3467  0013D6  5046               	movf	(??_efgtoa+3)^0,w,c
  3468  0013D8  E109               	bnz	u4220
  3469  0013DA  0E1A               	movlw	26
  3470  0013DC  5C45               	subwf	(??_efgtoa+2)^0,w,c
  3471  0013DE  A0D8               	btfss	status,0,c
  3472  0013E0  EFF4  F009         	goto	u4221
  3473  0013E4  EFF6  F009         	goto	u4220
  3474  0013E8                     u4221:
  3475  0013E8  EFFC  F009         	goto	l3601
  3476  0013EC                     u4220:
  3477  0013EC                     
  3478                           ; BSR set to: 0
  3479  0013EC  0E00               	movlw	0
  3480  0013EE  6F65               	movwf	(_efgtoa$679+1)& (0+255),b
  3481  0013F0  0E65               	movlw	101
  3482  0013F2  6F64               	movwf	_efgtoa$679& (0+255),b
  3483  0013F4  EF00  F00A         	goto	l3603
  3484  0013F8                     l3601:
  3485                           
  3486                           ; BSR set to: 0
  3487  0013F8  0E00               	movlw	0
  3488  0013FA  6F65               	movwf	(_efgtoa$679+1)& (0+255),b
  3489  0013FC  0E45               	movlw	69
  3490  0013FE  6F64               	movwf	_efgtoa$679& (0+255),b
  3491  001400                     l3603:
  3492                           
  3493                           ; BSR set to: 0
  3494  001400  0E00               	movlw	low _dbuf
  3495  001402  2584               	addwf	efgtoa@i& (0+255),w,b
  3496  001404  6ED9               	movwf	fsr2l,c
  3497  001406  0E01               	movlw	high _dbuf
  3498  001408  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3499  00140A  6EDA               	movwf	fsr2h,c
  3500  00140C  C064  FFDF         	movff	_efgtoa$679,indf2
  3501  001410                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3504  001410  0778               	decf	efgtoa@w& (0+255),f,b
  3505  001412  A0D8               	btfss	status,0,c
  3506  001414  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3507  001416                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3510  001416  0E00               	movlw	low _dbuf
  3511  001418  258C               	addwf	efgtoa@n& (0+255),w,b
  3512  00141A  6E01               	movwf	strcpy@dest^0,c
  3513  00141C  0E01               	movlw	high _dbuf
  3514  00141E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3515  001420  6E02               	movwf	(strcpy@dest+1)^0,c
  3516  001422  0E00               	movlw	low _dbuf
  3517  001424  2584               	addwf	efgtoa@i& (0+255),w,b
  3518  001426  6E03               	movwf	strcpy@src^0,c
  3519  001428  0E01               	movlw	high _dbuf
  3520  00142A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3521  00142C  6E04               	movwf	(strcpy@src+1)^0,c
  3522  00142E  ECCD  F019         	call	_strcpy	;wreg free
  3523  001432  EFBC  F004         	goto	l3351
  3524  001436                     l833:
  3525  001436  0012               	return		;funcret
  3526  001438                     __end_of_efgtoa:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _tolower *****************
  3530 ;; Defined at:
  3531 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  c               2    6[COMRAM] int 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    6[COMRAM] int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         2       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        6 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 1
  3552 ;; This function calls:
  3553 ;;		_isupper
  3554 ;; This function is called by:
  3555 ;;		_efgtoa
  3556 ;;		_vfpfcnvrt
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text6
  3561  003540                     __ptext6:
  3562                           	callstack 0
  3563  003540                     _tolower:
  3564                           	callstack 26
  3565  003540  0EBF               	movlw	191
  3566  003542  6E09               	movwf	??_tolower^0,c
  3567  003544  0EFF               	movlw	255
  3568  003546  6E0A               	movwf	(??_tolower+1)^0,c
  3569  003548  C007  F00B         	movff	tolower@c,??_tolower+2
  3570  00354C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3571  003550  5009               	movf	??_tolower^0,w,c
  3572  003552  260B               	addwf	(??_tolower+2)^0,f,c
  3573  003554  500A               	movf	(??_tolower+1)^0,w,c
  3574  003556  220C               	addwfc	(??_tolower+3)^0,f,c
  3575  003558  500C               	movf	(??_tolower+3)^0,w,c
  3576  00355A  E107               	bnz	u3601
  3577  00355C  0E1A               	movlw	26
  3578  00355E  5C0B               	subwf	(??_tolower+2)^0,w,c
  3579  003560  B0D8               	btfsc	status,0,c
  3580  003562  EFB5  F01A         	goto	u3601
  3581  003566  EFB7  F01A         	goto	u3600
  3582  00356A                     u3601:
  3583  00356A  EFBE  F01A         	goto	l1049
  3584  00356E                     u3600:
  3585  00356E  0E20               	movlw	32
  3586  003570  1007               	iorwf	tolower@c^0,w,c
  3587  003572  6E07               	movwf	?_tolower^0,c
  3588  003574  5008               	movf	(tolower@c+1)^0,w,c
  3589  003576  6E08               	movwf	(?_tolower+1)^0,c
  3590  003578  EFC2  F01A         	goto	l1052
  3591  00357C                     l1049:
  3592  00357C  C007  F007         	movff	tolower@c,?_tolower
  3593  003580  C008  F008         	movff	tolower@c+1,?_tolower+1
  3594  003584                     l1052:
  3595  003584  0012               	return		;funcret
  3596  003586                     __end_of_tolower:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _isupper *****************
  3600 ;; Defined at:
  3601 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  c               2    0[COMRAM] int 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  2    0[COMRAM] int 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         2       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3618 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:        6 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_efgtoa
  3625 ;;		_vfpfcnvrt
  3626 ;;		_tolower
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text7
  3631  003652                     __ptext7:
  3632                           	callstack 0
  3633  003652                     _isupper:
  3634                           	callstack 26
  3635  003652  0EBF               	movlw	191
  3636  003654  6E03               	movwf	??_isupper^0,c
  3637  003656  0EFF               	movlw	255
  3638  003658  6E04               	movwf	(??_isupper+1)^0,c
  3639  00365A  C001  F005         	movff	isupper@c,??_isupper+2
  3640  00365E  C002  F006         	movff	isupper@c+1,??_isupper+3
  3641  003662  5003               	movf	??_isupper^0,w,c
  3642  003664  2605               	addwf	(??_isupper+2)^0,f,c
  3643  003666  5004               	movf	(??_isupper+1)^0,w,c
  3644  003668  2206               	addwfc	(??_isupper+3)^0,f,c
  3645  00366A  5006               	movf	(??_isupper+3)^0,w,c
  3646  00366C  E10A               	bnz	u2750
  3647  00366E  0E1A               	movlw	26
  3648  003670  5C05               	subwf	(??_isupper+2)^0,w,c
  3649  003672  A0D8               	btfss	status,0,c
  3650  003674  EF3E  F01B         	goto	u2751
  3651  003678  EF41  F01B         	goto	u2750
  3652  00367C                     u2751:
  3653  00367C  0E01               	movlw	1
  3654  00367E  EF42  F01B         	goto	u2760
  3655  003682                     u2750:
  3656  003682  0E00               	movlw	0
  3657  003684                     u2760:
  3658  003684  6E01               	movwf	?_isupper^0,c
  3659  003686  6A02               	clrf	(?_isupper+1)^0,c
  3660  003688  0012               	return		;funcret
  3661  00368A                     __end_of_isupper:
  3662                           	callstack 0
  3663                           
  3664 ;; *************** function _strcpy *****************
  3665 ;; Defined at:
  3666 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3669 ;;		 -> dbuf(80), 
  3670 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3671 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3672 ;;		 -> dbuf(80), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  d               2    8[COMRAM] PTR unsigned char 
  3675 ;;		 -> dbuf(80), 
  3676 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3677 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3678 ;;		 -> dbuf(80), 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  2    0[COMRAM] PTR unsigned char 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3688 ;;      Params:         4       0       0       0       0       0       0       0       0
  3689 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3690 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3691 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3692 ;;Total ram usage:       10 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_efgtoa
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text8
  3702  00339A                     __ptext8:
  3703                           	callstack 0
  3704  00339A                     _strcpy:
  3705                           	callstack 26
  3706  00339A  C003  F007         	movff	strcpy@src,strcpy@s
  3707  00339E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3708  0033A2  C001  F009         	movff	strcpy@dest,strcpy@d
  3709  0033A6  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3710  0033AA                     l3251:
  3711  0033AA  5007               	movf	strcpy@s^0,w,c
  3712  0033AC  6E05               	movwf	??_strcpy^0,c
  3713  0033AE  5008               	movf	(strcpy@s+1)^0,w,c
  3714  0033B0  6E06               	movwf	(??_strcpy+1)^0,c
  3715  0033B2  4A07               	infsnz	strcpy@s^0,f,c
  3716  0033B4  2A08               	incf	(strcpy@s+1)^0,f,c
  3717  0033B6  C005  FFF6         	movff	??_strcpy,tblptrl
  3718  0033BA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3719  0033BE  6AF8               	clrf	tblptru,c
  3720  0033C0  C009  FFD9         	movff	strcpy@d,fsr2l
  3721  0033C4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3722  0033C8  4A09               	infsnz	strcpy@d^0,f,c
  3723  0033CA  2A0A               	incf	(strcpy@d+1)^0,f,c
  3724  0033CC  0E07               	movlw	(high __ramtop+-1)
  3725  0033CE  64F7               	cpfsgt	tblptrh,c
  3726  0033D0  D003               	bra	u3587
  3727  0033D2  0008               	tblrd		*
  3728  0033D4  50F5               	movf	tablat,w,c
  3729  0033D6  D005               	bra	u3580
  3730  0033D8                     u3587:
  3731  0033D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3732  0033DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3733  0033E0  50E7               	movf	indf1,w,c
  3734  0033E2                     u3580:
  3735  0033E2  6EDF               	movwf	indf2,c
  3736  0033E4  50DF               	movf	indf2,w,c
  3737  0033E6  A4D8               	btfss	status,2,c
  3738  0033E8  EFF8  F019         	goto	u3591
  3739  0033EC  EFFA  F019         	goto	u3590
  3740  0033F0                     u3591:
  3741  0033F0  EFD5  F019         	goto	l3251
  3742  0033F4                     u3590:
  3743  0033F4  0012               	return		;funcret
  3744  0033F6                     __end_of_strcpy:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _pad *****************
  3748 ;; Defined at:
  3749 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3752 ;;		 -> sprintf@f(11), 
  3753 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3754 ;;		 -> dbuf(80), 
  3755 ;;  p               2   20[COMRAM] int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  w               2   25[COMRAM] int 
  3758 ;;  i               2   23[COMRAM] int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   16[COMRAM] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3768 ;;      Params:         6       0       0       0       0       0       0       0       0
  3769 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3770 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3771 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3772 ;;Total ram usage:       11 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 3
  3775 ;; This function calls:
  3776 ;;		_fputc
  3777 ;;		_fputs
  3778 ;;		_strlen
  3779 ;; This function is called by:
  3780 ;;		_efgtoa
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text9
  3785  002EAC                     __ptext9:
  3786                           	callstack 0
  3787  002EAC                     _pad:
  3788                           	callstack 23
  3789  002EAC                     
  3790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3791  002EAC  0100               	movlb	0	; () banked
  3792  002EAE  A1CD               	btfss	_flags& (0+255),0,b
  3793  002EB0  EF5C  F017         	goto	u3471
  3794  002EB4  EF5E  F017         	goto	u3470
  3795  002EB8                     u3471:
  3796  002EB8  EF68  F017         	goto	l3209
  3797  002EBC                     u3470:
  3798  002EBC                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3801  002EBC  C013  F00A         	movff	pad@buf,fputs@s
  3802  002EC0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3803  002EC4  C011  F00C         	movff	pad@fp,fputs@fp
  3804  002EC8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3805  002ECC  ECE6  F01A         	call	_fputs	;wreg free
  3806  002ED0                     l3209:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3809  002ED0  BE16               	btfsc	(pad@p+1)^0,7,c
  3810  002ED2  EF6D  F017         	goto	u3481
  3811  002ED6  EF6F  F017         	goto	u3480
  3812  002EDA                     u3481:
  3813  002EDA  EF75  F017         	goto	l3213
  3814  002EDE                     u3480:
  3815  002EDE  C015  F01A         	movff	pad@p,pad@w
  3816  002EE2  C016  F01B         	movff	pad@p+1,pad@w+1
  3817  002EE6  EF79  F017         	goto	l812
  3818  002EEA                     l3213:
  3819  002EEA  0E00               	movlw	0
  3820  002EEC  6E1B               	movwf	(pad@w+1)^0,c
  3821  002EEE  0E00               	movlw	0
  3822  002EF0  6E1A               	movwf	pad@w^0,c
  3823  002EF2                     l812:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3826  002EF2  0E00               	movlw	0
  3827  002EF4  6E19               	movwf	(pad@i+1)^0,c
  3828  002EF6  0E00               	movlw	0
  3829  002EF8  6E18               	movwf	pad@i^0,c
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3832  002EFA  EF8B  F017         	goto	l3219
  3833  002EFE                     l3215:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3836  002EFE  0E00               	movlw	0
  3837  002F00  6E02               	movwf	(fputc@c+1)^0,c
  3838  002F02  0E20               	movlw	32
  3839  002F04  6E01               	movwf	fputc@c^0,c
  3840  002F06  C011  F003         	movff	pad@fp,fputc@fp
  3841  002F0A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3842  002F0E  ECF1  F016         	call	_fputc	;wreg free
  3843  002F12                     
  3844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3845  002F12  4A18               	infsnz	pad@i^0,f,c
  3846  002F14  2A19               	incf	(pad@i+1)^0,f,c
  3847  002F16                     l3219:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3850  002F16  501A               	movf	pad@w^0,w,c
  3851  002F18  5C18               	subwf	pad@i^0,w,c
  3852  002F1A  5019               	movf	(pad@i+1)^0,w,c
  3853  002F1C  0A80               	xorlw	128
  3854  002F1E  6E17               	movwf	??_pad^0,c
  3855  002F20  501B               	movf	(pad@w+1)^0,w,c
  3856  002F22  0A80               	xorlw	128
  3857  002F24  5817               	subwfb	??_pad^0,w,c
  3858  002F26  A0D8               	btfss	status,0,c
  3859  002F28  EF98  F017         	goto	u3491
  3860  002F2C  EF9A  F017         	goto	u3490
  3861  002F30                     u3491:
  3862  002F30  EF7F  F017         	goto	l3215
  3863  002F34                     u3490:
  3864  002F34                     
  3865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3866  002F34  0100               	movlb	0	; () banked
  3867  002F36  B1CD               	btfsc	_flags& (0+255),0,b
  3868  002F38  EFA0  F017         	goto	u3501
  3869  002F3C  EFA2  F017         	goto	u3500
  3870  002F40                     u3501:
  3871  002F40  EFAC  F017         	goto	l3223
  3872  002F44                     u3500:
  3873  002F44                     
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3876  002F44  C013  F00A         	movff	pad@buf,fputs@s
  3877  002F48  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3878  002F4C  C011  F00C         	movff	pad@fp,fputs@fp
  3879  002F50  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3880  002F54  ECE6  F01A         	call	_fputs	;wreg free
  3881  002F58                     l3223:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3884  002F58  C013  F001         	movff	pad@buf,strlen@s
  3885  002F5C  C014  F002         	movff	pad@buf+1,strlen@s+1
  3886  002F60  EC7D  F01B         	call	_strlen	;wreg free
  3887  002F64  501A               	movf	pad@w^0,w,c
  3888  002F66  2401               	addwf	?_strlen^0,w,c
  3889  002F68  6E11               	movwf	?_pad^0,c
  3890  002F6A  501B               	movf	(pad@w+1)^0,w,c
  3891  002F6C  2002               	addwfc	(?_strlen+1)^0,w,c
  3892  002F6E  6E12               	movwf	(?_pad+1)^0,c
  3893  002F70  0012               	return		;funcret
  3894  002F72                     __end_of_pad:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _strlen *****************
  3898 ;; Defined at:
  3899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3902 ;;		 -> dbuf(80), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3905 ;;		 -> dbuf(80), 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  2    0[COMRAM] unsigned int 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3915 ;;      Params:         2       0       0       0       0       0       0       0       0
  3916 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3918 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3919 ;;Total ram usage:        4 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_pad
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text10
  3929  0036FA                     __ptext10:
  3930                           	callstack 0
  3931  0036FA                     _strlen:
  3932                           	callstack 25
  3933  0036FA  C001  F003         	movff	strlen@s,strlen@a
  3934  0036FE  C002  F004         	movff	strlen@s+1,strlen@a+1
  3935  003702  EF85  F01B         	goto	l2745
  3936  003706                     l2743:
  3937  003706  4A01               	infsnz	strlen@s^0,f,c
  3938  003708  2A02               	incf	(strlen@s+1)^0,f,c
  3939  00370A                     l2745:
  3940  00370A  C001  FFD9         	movff	strlen@s,fsr2l
  3941  00370E  C002  FFDA         	movff	strlen@s+1,fsr2h
  3942  003712  50DF               	movf	indf2,w,c
  3943  003714  A4D8               	btfss	status,2,c
  3944  003716  EF8F  F01B         	goto	u2741
  3945  00371A  EF91  F01B         	goto	u2740
  3946  00371E                     u2741:
  3947  00371E  EF83  F01B         	goto	l2743
  3948  003722                     u2740:
  3949  003722  5003               	movf	strlen@a^0,w,c
  3950  003724  5C01               	subwf	strlen@s^0,w,c
  3951  003726  6E01               	movwf	?_strlen^0,c
  3952  003728  5004               	movf	(strlen@a+1)^0,w,c
  3953  00372A  5802               	subwfb	(strlen@s+1)^0,w,c
  3954  00372C  6E02               	movwf	(?_strlen+1)^0,c
  3955  00372E  0012               	return		;funcret
  3956  003730                     __end_of_strlen:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function _fputs *****************
  3960 ;; Defined at:
  3961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3964 ;;		 -> dbuf(80), 
  3965 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3966 ;;		 -> sprintf@f(11), 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  i               2   14[COMRAM] int 
  3969 ;;  c               1   13[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2    9[COMRAM] int 
  3972 ;; Registers used:
  3973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3979 ;;      Params:         4       0       0       0       0       0       0       0       0
  3980 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3982 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3983 ;;Total ram usage:        7 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 2
  3986 ;; This function calls:
  3987 ;;		_fputc
  3988 ;; This function is called by:
  3989 ;;		_pad
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text11
  3994  0035CC                     __ptext11:
  3995                           	callstack 0
  3996  0035CC                     _fputs:
  3997                           	callstack 23
  3998  0035CC  0E00               	movlw	0
  3999  0035CE  6E10               	movwf	(fputs@i+1)^0,c
  4000  0035D0  0E00               	movlw	0
  4001  0035D2  6E0F               	movwf	fputs@i^0,c
  4002  0035D4  EFF7  F01A         	goto	l2739
  4003  0035D8                     l2735:
  4004  0035D8  C00E  F001         	movff	fputs@c,fputc@c
  4005  0035DC  6A02               	clrf	(fputc@c+1)^0,c
  4006  0035DE  C00C  F003         	movff	fputs@fp,fputc@fp
  4007  0035E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4008  0035E6  ECF1  F016         	call	_fputc	;wreg free
  4009  0035EA  4A0F               	infsnz	fputs@i^0,f,c
  4010  0035EC  2A10               	incf	(fputs@i+1)^0,f,c
  4011  0035EE                     l2739:
  4012  0035EE  500F               	movf	fputs@i^0,w,c
  4013  0035F0  240A               	addwf	fputs@s^0,w,c
  4014  0035F2  6ED9               	movwf	fsr2l,c
  4015  0035F4  5010               	movf	(fputs@i+1)^0,w,c
  4016  0035F6  200B               	addwfc	(fputs@s+1)^0,w,c
  4017  0035F8  6EDA               	movwf	fsr2h,c
  4018  0035FA  50DF               	movf	indf2,w,c
  4019  0035FC  6E0E               	movwf	fputs@c^0,c
  4020  0035FE  500E               	movf	fputs@c^0,w,c
  4021  003600  A4D8               	btfss	status,2,c
  4022  003602  EF05  F01B         	goto	u2731
  4023  003606  EF07  F01B         	goto	u2730
  4024  00360A                     u2731:
  4025  00360A  EFEC  F01A         	goto	l2735
  4026  00360E                     u2730:
  4027  00360E  0012               	return		;funcret
  4028  003610                     __end_of_fputs:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function _fputc *****************
  4032 ;; Defined at:
  4033 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  c               2    0[COMRAM] int 
  4036 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4037 ;;		 -> sprintf@f(11), 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2    0[COMRAM] int 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4049 ;;      Params:         4       0       0       0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4051 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4052 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        9 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 1
  4056 ;; This function calls:
  4057 ;;		_putch
  4058 ;; This function is called by:
  4059 ;;		_pad
  4060 ;;		_vfpfcnvrt
  4061 ;;		_fputs
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text12
  4066  002DE2                     __ptext12:
  4067                           	callstack 0
  4068  002DE2                     _fputc:
  4069                           	callstack 26
  4070  002DE2  5003               	movf	fputc@fp^0,w,c
  4071  002DE4  1004               	iorwf	(fputc@fp+1)^0,w,c
  4072  002DE6  B4D8               	btfsc	status,2,c
  4073  002DE8  EFF8  F016         	goto	u2301
  4074  002DEC  EFFA  F016         	goto	u2300
  4075  002DF0                     u2301:
  4076  002DF0  EF03  F017         	goto	l2521
  4077  002DF4                     u2300:
  4078  002DF4  5003               	movf	fputc@fp^0,w,c
  4079  002DF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4080  002DF8  A4D8               	btfss	status,2,c
  4081  002DFA  EF01  F017         	goto	u2311
  4082  002DFE  EF03  F017         	goto	u2310
  4083  002E02                     u2311:
  4084  002E02  EF08  F017         	goto	l2523
  4085  002E06                     u2310:
  4086  002E06                     l2521:
  4087  002E06  5001               	movf	fputc@c^0,w,c
  4088  002E08  ECE7  F01B         	call	_putch
  4089  002E0C  EF55  F017         	goto	l1012
  4090  002E10                     l2523:
  4091  002E10  EE20 F009          	lfsr	2,9
  4092  002E14  5003               	movf	fputc@fp^0,w,c
  4093  002E16  26D9               	addwf	fsr2l,f,c
  4094  002E18  5004               	movf	(fputc@fp+1)^0,w,c
  4095  002E1A  22DA               	addwfc	fsr2h,f,c
  4096  002E1C  50DE               	movf	postinc2,w,c
  4097  002E1E  10DE               	iorwf	postinc2,w,c
  4098  002E20  B4D8               	btfsc	status,2,c
  4099  002E22  EF15  F017         	goto	u2321
  4100  002E26  EF17  F017         	goto	u2320
  4101  002E2A                     u2321:
  4102  002E2A  EF32  F017         	goto	l2527
  4103  002E2E                     u2320:
  4104  002E2E  EE20 F009          	lfsr	2,9
  4105  002E32  5003               	movf	fputc@fp^0,w,c
  4106  002E34  26D9               	addwf	fsr2l,f,c
  4107  002E36  5004               	movf	(fputc@fp+1)^0,w,c
  4108  002E38  22DA               	addwfc	fsr2h,f,c
  4109  002E3A  EE10 F003          	lfsr	1,3
  4110  002E3E  5003               	movf	fputc@fp^0,w,c
  4111  002E40  26E1               	addwf	fsr1l,f,c
  4112  002E42  5004               	movf	(fputc@fp+1)^0,w,c
  4113  002E44  22E2               	addwfc	fsr1h,f,c
  4114  002E46  50DE               	movf	postinc2,w,c
  4115  002E48  5CE6               	subwf	postinc1,w,c
  4116  002E4A  50E6               	movf	postinc1,w,c
  4117  002E4C  0A80               	xorlw	128
  4118  002E4E  6E09               	movwf	(??_fputc+4)^0,c
  4119  002E50  50DE               	movf	postinc2,w,c
  4120  002E52  0A80               	xorlw	128
  4121  002E54  5809               	subwfb	(??_fputc+4)^0,w,c
  4122  002E56  B0D8               	btfsc	status,0,c
  4123  002E58  EF30  F017         	goto	u2331
  4124  002E5C  EF32  F017         	goto	u2330
  4125  002E60                     u2331:
  4126  002E60  EF55  F017         	goto	l1012
  4127  002E64                     u2330:
  4128  002E64                     l2527:
  4129  002E64  EE20 F003          	lfsr	2,3
  4130  002E68  5003               	movf	fputc@fp^0,w,c
  4131  002E6A  26D9               	addwf	fsr2l,f,c
  4132  002E6C  5004               	movf	(fputc@fp+1)^0,w,c
  4133  002E6E  22DA               	addwfc	fsr2h,f,c
  4134  002E70  CFDE F005          	movff	postinc2,??_fputc
  4135  002E74  CFDD F006          	movff	postdec2,??_fputc+1
  4136  002E78  C003  FFD9         	movff	fputc@fp,fsr2l
  4137  002E7C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4138  002E80  CFDE F007          	movff	postinc2,??_fputc+2
  4139  002E84  CFDD F008          	movff	postdec2,??_fputc+3
  4140  002E88  5005               	movf	??_fputc^0,w,c
  4141  002E8A  2407               	addwf	(??_fputc+2)^0,w,c
  4142  002E8C  6ED9               	movwf	fsr2l,c
  4143  002E8E  5006               	movf	(??_fputc+1)^0,w,c
  4144  002E90  2008               	addwfc	(??_fputc+3)^0,w,c
  4145  002E92  6EDA               	movwf	fsr2h,c
  4146  002E94  C001  FFDF         	movff	fputc@c,indf2
  4147  002E98  EE20 F003          	lfsr	2,3
  4148  002E9C  5003               	movf	fputc@fp^0,w,c
  4149  002E9E  26D9               	addwf	fsr2l,f,c
  4150  002EA0  5004               	movf	(fputc@fp+1)^0,w,c
  4151  002EA2  22DA               	addwfc	fsr2h,f,c
  4152  002EA4  2ADE               	incf	postinc2,f,c
  4153  002EA6  0E00               	movlw	0
  4154  002EA8  22DD               	addwfc	postdec2,f,c
  4155  002EAA                     l1012:
  4156  002EAA  0012               	return		;funcret
  4157  002EAC                     __end_of_fputc:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _putch *****************
  4161 ;; Defined at:
  4162 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  c               1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  c               1    0[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4179 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_fputc
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text13
  4190  0037CE                     __ptext13:
  4191                           	callstack 0
  4192  0037CE                     _putch:
  4193                           	callstack 26
  4194  0037CE  0012               	return		;funcret
  4195  0037D0                     __end_of_putch:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _floorf *****************
  4199 ;; Defined at:
  4200 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  x               4   39[COMRAM] float 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  u               4   55[COMRAM] struct .
  4205 ;;  m               4   49[COMRAM] unsigned long 
  4206 ;;  e               2   53[COMRAM] int 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  4   39[COMRAM] float 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         4       0       0       0       0       0       0       0       0
  4217 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4219 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:       20 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_efgtoa
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text14
  4230  0024E8                     __ptext14:
  4231                           	callstack 0
  4232  0024E8                     _floorf:
  4233                           	callstack 26
  4234  0024E8  C0BF  F038         	movff	floorf@F526,floorf@u
  4235  0024EC  C0C0  F039         	movff	floorf@F526+1,floorf@u+1
  4236  0024F0  C0C1  F03A         	movff	floorf@F526+2,floorf@u+2
  4237  0024F4  C0C2  F03B         	movff	floorf@F526+3,floorf@u+3
  4238  0024F8  C028  F038         	movff	floorf@x,floorf@u
  4239  0024FC  C029  F039         	movff	floorf@x+1,floorf@u+1
  4240  002500  C02A  F03A         	movff	floorf@x+2,floorf@u+2
  4241  002504  C02B  F03B         	movff	floorf@x+3,floorf@u+3
  4242  002508  0E81               	movlw	129
  4243  00250A  6E2C               	movwf	??_floorf^0,c
  4244  00250C  0EFF               	movlw	255
  4245  00250E  6E2D               	movwf	(??_floorf+1)^0,c
  4246  002510  C038  F02E         	movff	floorf@u,??_floorf+2
  4247  002514  C039  F02F         	movff	floorf@u+1,??_floorf+3
  4248  002518  C03A  F030         	movff	floorf@u+2,??_floorf+4
  4249  00251C  C03B  F031         	movff	floorf@u+3,??_floorf+5
  4250  002520  0E18               	movlw	24
  4251  002522  EF98  F012         	goto	u3610
  4252  002526                     u3615:
  4253  002526  90D8               	bcf	status,0,c
  4254  002528  3231               	rrcf	(??_floorf+5)^0,f,c
  4255  00252A  3230               	rrcf	(??_floorf+4)^0,f,c
  4256  00252C  322F               	rrcf	(??_floorf+3)^0,f,c
  4257  00252E  322E               	rrcf	(??_floorf+2)^0,f,c
  4258  002530                     u3610:
  4259  002530  2EE8               	decfsz	wreg,f,c
  4260  002532  EF93  F012         	goto	u3615
  4261  002536  502E               	movf	(??_floorf+2)^0,w,c
  4262  002538  242C               	addwf	??_floorf^0,w,c
  4263  00253A  6E36               	movwf	floorf@e^0,c
  4264  00253C  0E00               	movlw	0
  4265  00253E  202D               	addwfc	(??_floorf+1)^0,w,c
  4266  002540  6E37               	movwf	(floorf@e+1)^0,c
  4267  002542  BE37               	btfsc	(floorf@e+1)^0,7,c
  4268  002544  EFAD  F012         	goto	u3621
  4269  002548  5037               	movf	(floorf@e+1)^0,w,c
  4270  00254A  E109               	bnz	u3620
  4271  00254C  0E17               	movlw	23
  4272  00254E  5C36               	subwf	floorf@e^0,w,c
  4273  002550  A0D8               	btfss	status,0,c
  4274  002552  EFAD  F012         	goto	u3621
  4275  002556  EFAF  F012         	goto	u3620
  4276  00255A                     u3621:
  4277  00255A  EFB9  F012         	goto	l3269
  4278  00255E                     u3620:
  4279  00255E                     l3267:
  4280  00255E  C028  F028         	movff	floorf@x,?_floorf
  4281  002562  C029  F029         	movff	floorf@x+1,?_floorf+1
  4282  002566  C02A  F02A         	movff	floorf@x+2,?_floorf+2
  4283  00256A  C02B  F02B         	movff	floorf@x+3,?_floorf+3
  4284  00256E  EF7C  F013         	goto	l973
  4285  002572                     l3269:
  4286  002572  BE37               	btfsc	(floorf@e+1)^0,7,c
  4287  002574  EFBE  F012         	goto	u3631
  4288  002578  EFC0  F012         	goto	u3630
  4289  00257C                     u3631:
  4290  00257C  EF30  F013         	goto	l3279
  4291  002580                     u3630:
  4292  002580  C036  F02C         	movff	floorf@e,??_floorf
  4293  002584  0EFF               	movlw	255
  4294  002586  6E2D               	movwf	(??_floorf+1)^0,c
  4295  002588  0EFF               	movlw	255
  4296  00258A  6E2E               	movwf	(??_floorf+2)^0,c
  4297  00258C  0E7F               	movlw	127
  4298  00258E  6E2F               	movwf	(??_floorf+3)^0,c
  4299  002590  0E00               	movlw	0
  4300  002592  6E30               	movwf	(??_floorf+4)^0,c
  4301  002594                     u3645:
  4302  002594  662C               	tstfsz	??_floorf^0,c
  4303  002596  EFCF  F012         	goto	u3646
  4304  00259A  EFD7  F012         	goto	u3647
  4305  00259E                     u3646:
  4306  00259E  3430               	rlcf	(??_floorf+4)^0,w,c
  4307  0025A0  3230               	rrcf	(??_floorf+4)^0,f,c
  4308  0025A2  322F               	rrcf	(??_floorf+3)^0,f,c
  4309  0025A4  322E               	rrcf	(??_floorf+2)^0,f,c
  4310  0025A6  322D               	rrcf	(??_floorf+1)^0,f,c
  4311  0025A8  2E2C               	decfsz	??_floorf^0,f,c
  4312  0025AA  EFCA  F012         	goto	u3645
  4313  0025AE                     u3647:
  4314  0025AE  C02D  F032         	movff	??_floorf+1,floorf@m
  4315  0025B2  C02E  F033         	movff	??_floorf+2,floorf@m+1
  4316  0025B6  C02F  F034         	movff	??_floorf+3,floorf@m+2
  4317  0025BA  C030  F035         	movff	??_floorf+4,floorf@m+3
  4318  0025BE  5032               	movf	floorf@m^0,w,c
  4319  0025C0  1438               	andwf	floorf@u^0,w,c
  4320  0025C2  6E2C               	movwf	??_floorf^0,c
  4321  0025C4  5033               	movf	(floorf@m+1)^0,w,c
  4322  0025C6  1439               	andwf	(floorf@u+1)^0,w,c
  4323  0025C8  6E2D               	movwf	(??_floorf+1)^0,c
  4324  0025CA  5034               	movf	(floorf@m+2)^0,w,c
  4325  0025CC  143A               	andwf	(floorf@u+2)^0,w,c
  4326  0025CE  6E2E               	movwf	(??_floorf+2)^0,c
  4327  0025D0  5035               	movf	(floorf@m+3)^0,w,c
  4328  0025D2  143B               	andwf	(floorf@u+3)^0,w,c
  4329  0025D4  6E2F               	movwf	(??_floorf+3)^0,c
  4330  0025D6  502C               	movf	??_floorf^0,w,c
  4331  0025D8  102D               	iorwf	(??_floorf+1)^0,w,c
  4332  0025DA  102E               	iorwf	(??_floorf+2)^0,w,c
  4333  0025DC  102F               	iorwf	(??_floorf+3)^0,w,c
  4334  0025DE  A4D8               	btfss	status,2,c
  4335  0025E0  EFF4  F012         	goto	u3651
  4336  0025E4  EFF6  F012         	goto	u3650
  4337  0025E8                     u3651:
  4338  0025E8  EFF8  F012         	goto	l3275
  4339  0025EC                     u3650:
  4340  0025EC  EFAF  F012         	goto	l3267
  4341  0025F0                     l3275:
  4342  0025F0  C038  F02C         	movff	floorf@u,??_floorf
  4343  0025F4  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4344  0025F8  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4345  0025FC  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4346  002600  0E20               	movlw	32
  4347  002602  EF08  F013         	goto	u3660
  4348  002606                     u3665:
  4349  002606  90D8               	bcf	status,0,c
  4350  002608  322F               	rrcf	(??_floorf+3)^0,f,c
  4351  00260A  322E               	rrcf	(??_floorf+2)^0,f,c
  4352  00260C  322D               	rrcf	(??_floorf+1)^0,f,c
  4353  00260E  322C               	rrcf	??_floorf^0,f,c
  4354  002610                     u3660:
  4355  002610  2EE8               	decfsz	wreg,f,c
  4356  002612  EF03  F013         	goto	u3665
  4357  002616  502C               	movf	??_floorf^0,w,c
  4358  002618  102D               	iorwf	(??_floorf+1)^0,w,c
  4359  00261A  102E               	iorwf	(??_floorf+2)^0,w,c
  4360  00261C  102F               	iorwf	(??_floorf+3)^0,w,c
  4361  00261E  B4D8               	btfsc	status,2,c
  4362  002620  EF14  F013         	goto	u3671
  4363  002624  EF16  F013         	goto	u3670
  4364  002628                     u3671:
  4365  002628  EF1E  F013         	goto	l976
  4366  00262C                     u3670:
  4367  00262C  5032               	movf	floorf@m^0,w,c
  4368  00262E  2638               	addwf	floorf@u^0,f,c
  4369  002630  5033               	movf	(floorf@m+1)^0,w,c
  4370  002632  2239               	addwfc	(floorf@u+1)^0,f,c
  4371  002634  5034               	movf	(floorf@m+2)^0,w,c
  4372  002636  223A               	addwfc	(floorf@u+2)^0,f,c
  4373  002638  5035               	movf	(floorf@m+3)^0,w,c
  4374  00263A  223B               	addwfc	(floorf@u+3)^0,f,c
  4375  00263C                     l976:
  4376  00263C  1C32               	comf	floorf@m^0,w,c
  4377  00263E  6E2C               	movwf	??_floorf^0,c
  4378  002640  1C33               	comf	(floorf@m+1)^0,w,c
  4379  002642  6E2D               	movwf	(??_floorf+1)^0,c
  4380  002644  1C34               	comf	(floorf@m+2)^0,w,c
  4381  002646  6E2E               	movwf	(??_floorf+2)^0,c
  4382  002648  1C35               	comf	(floorf@m+3)^0,w,c
  4383  00264A  6E2F               	movwf	(??_floorf+3)^0,c
  4384  00264C  502C               	movf	??_floorf^0,w,c
  4385  00264E  1638               	andwf	floorf@u^0,f,c
  4386  002650  502D               	movf	(??_floorf+1)^0,w,c
  4387  002652  1639               	andwf	(floorf@u+1)^0,f,c
  4388  002654  502E               	movf	(??_floorf+2)^0,w,c
  4389  002656  163A               	andwf	(floorf@u+2)^0,f,c
  4390  002658  502F               	movf	(??_floorf+3)^0,w,c
  4391  00265A  163B               	andwf	(floorf@u+3)^0,f,c
  4392  00265C  EF74  F013         	goto	l3287
  4393  002660                     l3279:
  4394  002660  C038  F02C         	movff	floorf@u,??_floorf
  4395  002664  C039  F02D         	movff	floorf@u+1,??_floorf+1
  4396  002668  C03A  F02E         	movff	floorf@u+2,??_floorf+2
  4397  00266C  C03B  F02F         	movff	floorf@u+3,??_floorf+3
  4398  002670  0E20               	movlw	32
  4399  002672  EF40  F013         	goto	u3680
  4400  002676                     u3685:
  4401  002676  90D8               	bcf	status,0,c
  4402  002678  322F               	rrcf	(??_floorf+3)^0,f,c
  4403  00267A  322E               	rrcf	(??_floorf+2)^0,f,c
  4404  00267C  322D               	rrcf	(??_floorf+1)^0,f,c
  4405  00267E  322C               	rrcf	??_floorf^0,f,c
  4406  002680                     u3680:
  4407  002680  2EE8               	decfsz	wreg,f,c
  4408  002682  EF3B  F013         	goto	u3685
  4409  002686  502C               	movf	??_floorf^0,w,c
  4410  002688  102D               	iorwf	(??_floorf+1)^0,w,c
  4411  00268A  102E               	iorwf	(??_floorf+2)^0,w,c
  4412  00268C  102F               	iorwf	(??_floorf+3)^0,w,c
  4413  00268E  A4D8               	btfss	status,2,c
  4414  002690  EF4C  F013         	goto	u3691
  4415  002694  EF4E  F013         	goto	u3690
  4416  002698                     u3691:
  4417  002698  EF58  F013         	goto	l3283
  4418  00269C                     u3690:
  4419  00269C  0E00               	movlw	0
  4420  00269E  6E38               	movwf	floorf@u^0,c
  4421  0026A0  0E00               	movlw	0
  4422  0026A2  6E39               	movwf	(floorf@u+1)^0,c
  4423  0026A4  0E00               	movlw	0
  4424  0026A6  6E3A               	movwf	(floorf@u+2)^0,c
  4425  0026A8  0E00               	movlw	0
  4426  0026AA  6E3B               	movwf	(floorf@u+3)^0,c
  4427  0026AC  EF74  F013         	goto	l3287
  4428  0026B0                     l3283:
  4429  0026B0  90D8               	bcf	status,0,c
  4430  0026B2  3438               	rlcf	floorf@u^0,w,c
  4431  0026B4  6E2C               	movwf	??_floorf^0,c
  4432  0026B6  3439               	rlcf	(floorf@u+1)^0,w,c
  4433  0026B8  6E2D               	movwf	(??_floorf+1)^0,c
  4434  0026BA  343A               	rlcf	(floorf@u+2)^0,w,c
  4435  0026BC  6E2E               	movwf	(??_floorf+2)^0,c
  4436  0026BE  343B               	rlcf	(floorf@u+3)^0,w,c
  4437  0026C0  6E2F               	movwf	(??_floorf+3)^0,c
  4438  0026C2  502C               	movf	??_floorf^0,w,c
  4439  0026C4  102D               	iorwf	(??_floorf+1)^0,w,c
  4440  0026C6  102E               	iorwf	(??_floorf+2)^0,w,c
  4441  0026C8  102F               	iorwf	(??_floorf+3)^0,w,c
  4442  0026CA  B4D8               	btfsc	status,2,c
  4443  0026CC  EF6A  F013         	goto	u3701
  4444  0026D0  EF6C  F013         	goto	u3700
  4445  0026D4                     u3701:
  4446  0026D4  EF74  F013         	goto	l3287
  4447  0026D8                     u3700:
  4448  0026D8  0E00               	movlw	0
  4449  0026DA  6E38               	movwf	floorf@u^0,c
  4450  0026DC  0E00               	movlw	0
  4451  0026DE  6E39               	movwf	(floorf@u+1)^0,c
  4452  0026E0  0E80               	movlw	128
  4453  0026E2  6E3A               	movwf	(floorf@u+2)^0,c
  4454  0026E4  0EBF               	movlw	191
  4455  0026E6  6E3B               	movwf	(floorf@u+3)^0,c
  4456  0026E8                     l3287:
  4457  0026E8  C038  F028         	movff	floorf@u,?_floorf
  4458  0026EC  C039  F029         	movff	floorf@u+1,?_floorf+1
  4459  0026F0  C03A  F02A         	movff	floorf@u+2,?_floorf+2
  4460  0026F4  C03B  F02B         	movff	floorf@u+3,?_floorf+3
  4461  0026F8                     l973:
  4462  0026F8  0012               	return		;funcret
  4463  0026FA                     __end_of_floorf:
  4464                           	callstack 0
  4465                           
  4466 ;; *************** function ___fpclassifyf *****************
  4467 ;; Defined at:
  4468 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  x               4    0[COMRAM] float 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  u               4   10[COMRAM] struct .
  4473 ;;  e               2    8[COMRAM] int 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  2    0[COMRAM] int 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4483 ;;      Params:         4       0       0       0       0       0       0       0       0
  4484 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4485 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4486 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4487 ;;Total ram usage:       14 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_efgtoa
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text15
  4497  002C0E                     __ptext15:
  4498                           	callstack 0
  4499  002C0E                     ___fpclassifyf:
  4500                           	callstack 26
  4501  002C0E  C0C3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4502  002C12  C0C4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4503  002C16  C0C5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4504  002C1A  C0C6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4505  002C1E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4506  002C22  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4507  002C26  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4508  002C2A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4509  002C2E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4510  002C32  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4511  002C36  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4512  002C3A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4513  002C3E  0E18               	movlw	24
  4514  002C40  EF27  F016         	goto	u3510
  4515  002C44                     u3515:
  4516  002C44  90D8               	bcf	status,0,c
  4517  002C46  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4518  002C48  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4519  002C4A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4520  002C4C  3205               	rrcf	??___fpclassifyf^0,f,c
  4521  002C4E                     u3510:
  4522  002C4E  2EE8               	decfsz	wreg,f,c
  4523  002C50  EF22  F016         	goto	u3515
  4524  002C54  5005               	movf	??___fpclassifyf^0,w,c
  4525  002C56  6E09               	movwf	___fpclassifyf@e^0,c
  4526  002C58  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4527  002C5A  5009               	movf	___fpclassifyf@e^0,w,c
  4528  002C5C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4529  002C5E  A4D8               	btfss	status,2,c
  4530  002C60  EF34  F016         	goto	u3521
  4531  002C64  EF36  F016         	goto	u3520
  4532  002C68                     u3521:
  4533  002C68  EF56  F016         	goto	l3239
  4534  002C6C                     u3520:
  4535  002C6C  90D8               	bcf	status,0,c
  4536  002C6E  340B               	rlcf	___fpclassifyf@u^0,w,c
  4537  002C70  6E05               	movwf	??___fpclassifyf^0,c
  4538  002C72  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4539  002C74  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4540  002C76  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4541  002C78  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4542  002C7A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4543  002C7C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4544  002C7E  5005               	movf	??___fpclassifyf^0,w,c
  4545  002C80  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4546  002C82  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4547  002C84  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4548  002C86  A4D8               	btfss	status,2,c
  4549  002C88  EF48  F016         	goto	u3531
  4550  002C8C  EF4A  F016         	goto	u3530
  4551  002C90                     u3531:
  4552  002C90  EF50  F016         	goto	l3235
  4553  002C94                     u3530:
  4554  002C94  0E00               	movlw	0
  4555  002C96  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4556  002C98  0E02               	movlw	2
  4557  002C9A  6E01               	movwf	?___fpclassifyf^0,c
  4558  002C9C  EF85  F016         	goto	l941
  4559  002CA0                     l3235:
  4560  002CA0  0E00               	movlw	0
  4561  002CA2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4562  002CA4  0E03               	movlw	3
  4563  002CA6  6E01               	movwf	?___fpclassifyf^0,c
  4564  002CA8  EF85  F016         	goto	l941
  4565  002CAC                     l3239:
  4566  002CAC  2809               	incf	___fpclassifyf@e^0,w,c
  4567  002CAE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4568  002CB0  A4D8               	btfss	status,2,c
  4569  002CB2  EF5D  F016         	goto	u3541
  4570  002CB6  EF5F  F016         	goto	u3540
  4571  002CBA                     u3541:
  4572  002CBA  EF81  F016         	goto	l3245
  4573  002CBE                     u3540:
  4574  002CBE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4575  002CC2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4576  002CC6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4577  002CCA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4578  002CCE  0E09               	movlw	9
  4579  002CD0                     u3555:
  4580  002CD0  90D8               	bcf	status,0,c
  4581  002CD2  3605               	rlcf	??___fpclassifyf^0,f,c
  4582  002CD4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4583  002CD6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4584  002CD8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4585  002CDA  2EE8               	decfsz	wreg,f,c
  4586  002CDC  EF68  F016         	goto	u3555
  4587  002CE0  5005               	movf	??___fpclassifyf^0,w,c
  4588  002CE2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4589  002CE4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4590  002CE6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4591  002CE8  B4D8               	btfsc	status,2,c
  4592  002CEA  EF79  F016         	goto	u3561
  4593  002CEE  EF7C  F016         	goto	u3560
  4594  002CF2                     u3561:
  4595  002CF2  0E01               	movlw	1
  4596  002CF4  EF7D  F016         	goto	u3570
  4597  002CF8                     u3560:
  4598  002CF8  0E00               	movlw	0
  4599  002CFA                     u3570:
  4600  002CFA  6E01               	movwf	?___fpclassifyf^0,c
  4601  002CFC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4602  002CFE  EF85  F016         	goto	l941
  4603  002D02                     l3245:
  4604  002D02  0E00               	movlw	0
  4605  002D04  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4606  002D06  0E04               	movlw	4
  4607  002D08  6E01               	movwf	?___fpclassifyf^0,c
  4608  002D0A                     l941:
  4609  002D0A  0012               	return		;funcret
  4610  002D0C                     __end_of___fpclassifyf:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function ___fltol *****************
  4614 ;; Defined at:
  4615 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  f1              4    0[COMRAM] int 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  exp1            1    9[COMRAM] unsigned char 
  4620 ;;  sign1           1    8[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  4    0[COMRAM] long 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4630 ;;      Params:         4       0       0       0       0       0       0       0       0
  4631 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4632 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4633 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4634 ;;Total ram usage:       10 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_efgtoa
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text16
  4644  002A04                     __ptext16:
  4645                           	callstack 0
  4646  002A04                     ___fltol:
  4647                           	callstack 26
  4648  002A04  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4649  002A06  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4650  002A08  6E0A               	movwf	___fltol@exp1^0,c
  4651  002A0A  500A               	movf	___fltol@exp1^0,w,c
  4652  002A0C  A4D8               	btfss	status,2,c
  4653  002A0E  EF0B  F015         	goto	u3401
  4654  002A12  EF0D  F015         	goto	u3400
  4655  002A16                     u3401:
  4656  002A16  EF17  F015         	goto	l3167
  4657  002A1A                     u3400:
  4658  002A1A                     l3163:
  4659  002A1A  0E00               	movlw	0
  4660  002A1C  6E01               	movwf	?___fltol^0,c
  4661  002A1E  0E00               	movlw	0
  4662  002A20  6E02               	movwf	(?___fltol+1)^0,c
  4663  002A22  0E00               	movlw	0
  4664  002A24  6E03               	movwf	(?___fltol+2)^0,c
  4665  002A26  0E00               	movlw	0
  4666  002A28  6E04               	movwf	(?___fltol+3)^0,c
  4667  002A2A  EF84  F015         	goto	l390
  4668  002A2E                     l3167:
  4669  002A2E  C001  F005         	movff	___fltol@f1,??___fltol
  4670  002A32  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4671  002A36  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4672  002A3A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4673  002A3E  0E20               	movlw	32
  4674  002A40  EF27  F015         	goto	u3410
  4675  002A44                     u3415:
  4676  002A44  90D8               	bcf	status,0,c
  4677  002A46  3208               	rrcf	(??___fltol+3)^0,f,c
  4678  002A48  3207               	rrcf	(??___fltol+2)^0,f,c
  4679  002A4A  3206               	rrcf	(??___fltol+1)^0,f,c
  4680  002A4C  3205               	rrcf	??___fltol^0,f,c
  4681  002A4E                     u3410:
  4682  002A4E  2EE8               	decfsz	wreg,f,c
  4683  002A50  EF22  F015         	goto	u3415
  4684  002A54  5005               	movf	??___fltol^0,w,c
  4685  002A56  6E09               	movwf	___fltol@sign1^0,c
  4686  002A58  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4687  002A5A  0EFF               	movlw	255
  4688  002A5C  1601               	andwf	___fltol@f1^0,f,c
  4689  002A5E  0EFF               	movlw	255
  4690  002A60  1602               	andwf	(___fltol@f1+1)^0,f,c
  4691  002A62  0EFF               	movlw	255
  4692  002A64  1603               	andwf	(___fltol@f1+2)^0,f,c
  4693  002A66  0E00               	movlw	0
  4694  002A68  1604               	andwf	(___fltol@f1+3)^0,f,c
  4695  002A6A  0E96               	movlw	150
  4696  002A6C  5E0A               	subwf	___fltol@exp1^0,f,c
  4697  002A6E  BE0A               	btfsc	___fltol@exp1^0,7,c
  4698  002A70  EF3E  F015         	goto	u3420
  4699  002A74  EF3C  F015         	goto	u3421
  4700  002A78                     u3421:
  4701  002A78  EF54  F015         	goto	l3187
  4702  002A7C                     u3420:
  4703  002A7C  500A               	movf	___fltol@exp1^0,w,c
  4704  002A7E  0A80               	xorlw	128
  4705  002A80  0F97               	addlw	151
  4706  002A82  B0D8               	btfsc	status,0,c
  4707  002A84  EF46  F015         	goto	u3431
  4708  002A88  EF48  F015         	goto	u3430
  4709  002A8C                     u3431:
  4710  002A8C  EF4A  F015         	goto	l3183
  4711  002A90                     u3430:
  4712  002A90  EF0D  F015         	goto	l3163
  4713  002A94                     l3183:
  4714  002A94  90D8               	bcf	status,0,c
  4715  002A96  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4716  002A98  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4717  002A9A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4718  002A9C  3201               	rrcf	___fltol@f1^0,f,c
  4719  002A9E  3E0A               	incfsz	___fltol@exp1^0,f,c
  4720  002AA0  EF4A  F015         	goto	l3183
  4721  002AA4  EF6C  F015         	goto	l3197
  4722  002AA8                     l3187:
  4723  002AA8  0E1F               	movlw	31
  4724  002AAA  640A               	cpfsgt	___fltol@exp1^0,c
  4725  002AAC  EF5A  F015         	goto	u3441
  4726  002AB0  EF5C  F015         	goto	u3440
  4727  002AB4                     u3441:
  4728  002AB4  EF64  F015         	goto	l3195
  4729  002AB8                     u3440:
  4730  002AB8  EF0D  F015         	goto	l3163
  4731  002ABC                     l3193:
  4732  002ABC  90D8               	bcf	status,0,c
  4733  002ABE  3601               	rlcf	___fltol@f1^0,f,c
  4734  002AC0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4735  002AC2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4736  002AC4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4737  002AC6  060A               	decf	___fltol@exp1^0,f,c
  4738  002AC8                     l3195:
  4739  002AC8  500A               	movf	___fltol@exp1^0,w,c
  4740  002ACA  A4D8               	btfss	status,2,c
  4741  002ACC  EF6A  F015         	goto	u3451
  4742  002AD0  EF6C  F015         	goto	u3450
  4743  002AD4                     u3451:
  4744  002AD4  EF5E  F015         	goto	l3193
  4745  002AD8                     u3450:
  4746  002AD8                     l3197:
  4747  002AD8  5009               	movf	___fltol@sign1^0,w,c
  4748  002ADA  B4D8               	btfsc	status,2,c
  4749  002ADC  EF72  F015         	goto	u3461
  4750  002AE0  EF74  F015         	goto	u3460
  4751  002AE4                     u3461:
  4752  002AE4  EF7C  F015         	goto	l3201
  4753  002AE8                     u3460:
  4754  002AE8  1E04               	comf	(___fltol@f1+3)^0,f,c
  4755  002AEA  1E03               	comf	(___fltol@f1+2)^0,f,c
  4756  002AEC  1E02               	comf	(___fltol@f1+1)^0,f,c
  4757  002AEE  6C01               	negf	___fltol@f1^0,c
  4758  002AF0  0E00               	movlw	0
  4759  002AF2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4760  002AF4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4761  002AF6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4762  002AF8                     l3201:
  4763  002AF8  C001  F001         	movff	___fltol@f1,?___fltol
  4764  002AFC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4765  002B00  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4766  002B04  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4767  002B08                     l390:
  4768  002B08  0012               	return		;funcret
  4769  002B0A                     __end_of___fltol:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function ___flsub *****************
  4773 ;; Defined at:
  4774 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  b               4   25[COMRAM] long 
  4777 ;;  a               4   29[COMRAM] long 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  4   25[COMRAM] long 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4789 ;;      Params:         8       0       0       0       0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4792 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4793 ;;Total ram usage:        8 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 1
  4796 ;; This function calls:
  4797 ;;		___fladd
  4798 ;; This function is called by:
  4799 ;;		_efgtoa
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text17
  4804  003586                     __ptext17:
  4805                           	callstack 0
  4806  003586                     ___flsub:
  4807                           	callstack 25
  4808  003586  0E00               	movlw	0
  4809  003588  1A1E               	xorwf	___flsub@a^0,f,c
  4810  00358A  0E00               	movlw	0
  4811  00358C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4812  00358E  0E00               	movlw	0
  4813  003590  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4814  003592  0E80               	movlw	128
  4815  003594  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4816  003596  C01A  F001         	movff	___flsub@b,___fladd@b
  4817  00359A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4818  00359E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4819  0035A2  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4820  0035A6  C01E  F005         	movff	___flsub@a,___fladd@a
  4821  0035AA  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4822  0035AE  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4823  0035B2  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4824  0035B6  EC1C  F00A         	call	___fladd	;wreg free
  4825  0035BA  C001  F01A         	movff	?___fladd,?___flsub
  4826  0035BE  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4827  0035C2  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4828  0035C6  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4829  0035CA  0012               	return		;funcret
  4830  0035CC                     __end_of___flsub:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function ___fladd *****************
  4834 ;; Defined at:
  4835 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  b               4    0[COMRAM] long 
  4838 ;;  a               4    4[COMRAM] long 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  grs             1   15[COMRAM] unsigned char 
  4841 ;;  bexp            1   14[COMRAM] unsigned char 
  4842 ;;  aexp            1   13[COMRAM] unsigned char 
  4843 ;;  signs           1   12[COMRAM] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  4    0[COMRAM] unsigned char 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4853 ;;      Params:         8       0       0       0       0       0       0       0       0
  4854 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4855 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4856 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4857 ;;Total ram usage:       16 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		___flsub
  4863 ;;		_efgtoa
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text18
  4868  001438                     __ptext18:
  4869                           	callstack 0
  4870  001438                     ___fladd:
  4871                           	callstack 25
  4872  001438  5004               	movf	(___fladd@b+3)^0,w,c
  4873  00143A  0B80               	andlw	128
  4874  00143C  6E0D               	movwf	___fladd@signs^0,c
  4875  00143E  5004               	movf	(___fladd@b+3)^0,w,c
  4876  001440  2404               	addwf	(___fladd@b+3)^0,w,c
  4877  001442  6E0F               	movwf	___fladd@bexp^0,c
  4878  001444  AE03               	btfss	(___fladd@b+2)^0,7,c
  4879  001446  EF27  F00A         	goto	u2341
  4880  00144A  EF29  F00A         	goto	u2340
  4881  00144E                     u2341:
  4882  00144E  EF2A  F00A         	goto	l2537
  4883  001452                     u2340:
  4884  001452  800F               	bsf	___fladd@bexp^0,0,c
  4885  001454                     l2537:
  4886  001454  500F               	movf	___fladd@bexp^0,w,c
  4887  001456  B4D8               	btfsc	status,2,c
  4888  001458  EF30  F00A         	goto	u2351
  4889  00145C  EF32  F00A         	goto	u2350
  4890  001460                     u2351:
  4891  001460  EF47  F00A         	goto	l2547
  4892  001464                     u2350:
  4893  001464  280F               	incf	___fladd@bexp^0,w,c
  4894  001466  A4D8               	btfss	status,2,c
  4895  001468  EF38  F00A         	goto	u2361
  4896  00146C  EF3A  F00A         	goto	u2360
  4897  001470                     u2361:
  4898  001470  EF42  F00A         	goto	l2543
  4899  001474                     u2360:
  4900  001474  0E00               	movlw	0
  4901  001476  6E01               	movwf	___fladd@b^0,c
  4902  001478  0E00               	movlw	0
  4903  00147A  6E02               	movwf	(___fladd@b+1)^0,c
  4904  00147C  0E00               	movlw	0
  4905  00147E  6E03               	movwf	(___fladd@b+2)^0,c
  4906  001480  0E00               	movlw	0
  4907  001482  6E04               	movwf	(___fladd@b+3)^0,c
  4908  001484                     l2543:
  4909  001484  8E03               	bsf	(___fladd@b+2)^0,7,c
  4910  001486  0E00               	movlw	0
  4911  001488  6E04               	movwf	(___fladd@b+3)^0,c
  4912  00148A  EF4F  F00A         	goto	l2549
  4913  00148E                     l2547:
  4914  00148E  0E00               	movlw	0
  4915  001490  6E01               	movwf	___fladd@b^0,c
  4916  001492  0E00               	movlw	0
  4917  001494  6E02               	movwf	(___fladd@b+1)^0,c
  4918  001496  0E00               	movlw	0
  4919  001498  6E03               	movwf	(___fladd@b+2)^0,c
  4920  00149A  0E00               	movlw	0
  4921  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  4922  00149E                     l2549:
  4923  00149E  5008               	movf	(___fladd@a+3)^0,w,c
  4924  0014A0  0B80               	andlw	128
  4925  0014A2  6E0E               	movwf	___fladd@aexp^0,c
  4926  0014A4  500D               	movf	___fladd@signs^0,w,c
  4927  0014A6  180E               	xorwf	___fladd@aexp^0,w,c
  4928  0014A8  B4D8               	btfsc	status,2,c
  4929  0014AA  EF59  F00A         	goto	u2371
  4930  0014AE  EF5B  F00A         	goto	u2370
  4931  0014B2                     u2371:
  4932  0014B2  EF5C  F00A         	goto	l2555
  4933  0014B6                     u2370:
  4934  0014B6  8C0D               	bsf	___fladd@signs^0,6,c
  4935  0014B8                     l2555:
  4936  0014B8  5008               	movf	(___fladd@a+3)^0,w,c
  4937  0014BA  2408               	addwf	(___fladd@a+3)^0,w,c
  4938  0014BC  6E0E               	movwf	___fladd@aexp^0,c
  4939  0014BE  AE07               	btfss	(___fladd@a+2)^0,7,c
  4940  0014C0  EF64  F00A         	goto	u2381
  4941  0014C4  EF66  F00A         	goto	u2380
  4942  0014C8                     u2381:
  4943  0014C8  EF67  F00A         	goto	l2561
  4944  0014CC                     u2380:
  4945  0014CC  800E               	bsf	___fladd@aexp^0,0,c
  4946  0014CE                     l2561:
  4947  0014CE  500E               	movf	___fladd@aexp^0,w,c
  4948  0014D0  B4D8               	btfsc	status,2,c
  4949  0014D2  EF6D  F00A         	goto	u2391
  4950  0014D6  EF6F  F00A         	goto	u2390
  4951  0014DA                     u2391:
  4952  0014DA  EF84  F00A         	goto	l2571
  4953  0014DE                     u2390:
  4954  0014DE  280E               	incf	___fladd@aexp^0,w,c
  4955  0014E0  A4D8               	btfss	status,2,c
  4956  0014E2  EF75  F00A         	goto	u2401
  4957  0014E6  EF77  F00A         	goto	u2400
  4958  0014EA                     u2401:
  4959  0014EA  EF7F  F00A         	goto	l2567
  4960  0014EE                     u2400:
  4961  0014EE  0E00               	movlw	0
  4962  0014F0  6E05               	movwf	___fladd@a^0,c
  4963  0014F2  0E00               	movlw	0
  4964  0014F4  6E06               	movwf	(___fladd@a+1)^0,c
  4965  0014F6  0E00               	movlw	0
  4966  0014F8  6E07               	movwf	(___fladd@a+2)^0,c
  4967  0014FA  0E00               	movlw	0
  4968  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  4969  0014FE                     l2567:
  4970  0014FE  8E07               	bsf	(___fladd@a+2)^0,7,c
  4971  001500  0E00               	movlw	0
  4972  001502  6E08               	movwf	(___fladd@a+3)^0,c
  4973  001504  EF8C  F00A         	goto	l2573
  4974  001508                     l2571:
  4975  001508  0E00               	movlw	0
  4976  00150A  6E05               	movwf	___fladd@a^0,c
  4977  00150C  0E00               	movlw	0
  4978  00150E  6E06               	movwf	(___fladd@a+1)^0,c
  4979  001510  0E00               	movlw	0
  4980  001512  6E07               	movwf	(___fladd@a+2)^0,c
  4981  001514  0E00               	movlw	0
  4982  001516  6E08               	movwf	(___fladd@a+3)^0,c
  4983  001518                     l2573:
  4984  001518  500F               	movf	___fladd@bexp^0,w,c
  4985  00151A  5C0E               	subwf	___fladd@aexp^0,w,c
  4986  00151C  B0D8               	btfsc	status,0,c
  4987  00151E  EF93  F00A         	goto	u2411
  4988  001522  EF95  F00A         	goto	u2410
  4989  001526                     u2411:
  4990  001526  EFBC  F00A         	goto	l2609
  4991  00152A                     u2410:
  4992  00152A  AC0D               	btfss	___fladd@signs^0,6,c
  4993  00152C  EF9A  F00A         	goto	u2421
  4994  001530  EF9C  F00A         	goto	u2420
  4995  001534                     u2421:
  4996  001534  EF9E  F00A         	goto	l2579
  4997  001538                     u2420:
  4998  001538  0E80               	movlw	128
  4999  00153A  1A0D               	xorwf	___fladd@signs^0,f,c
  5000  00153C                     l2579:
  5001  00153C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5002  001540  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5003  001544  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5004  001548  C001  F010         	movff	___fladd@b,___fladd@grs
  5005  00154C  C005  F001         	movff	___fladd@a,___fladd@b
  5006  001550  C010  F005         	movff	___fladd@grs,___fladd@a
  5007  001554  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5008  001558  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5009  00155C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5010  001560  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5011  001564  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5012  001568  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5013  00156C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5014  001570  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5015  001574  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5016  001578                     l2609:
  5017  001578  0E00               	movlw	0
  5018  00157A  6E10               	movwf	___fladd@grs^0,c
  5019  00157C  500F               	movf	___fladd@bexp^0,w,c
  5020  00157E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5021  001582  6A0A               	clrf	(??___fladd+1)^0,c
  5022  001584  5E09               	subwf	??___fladd^0,f,c
  5023  001586  0E00               	movlw	0
  5024  001588  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5025  00158A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5026  00158C  EFD1  F00A         	goto	u2431
  5027  001590  500A               	movf	(??___fladd+1)^0,w,c
  5028  001592  E109               	bnz	u2430
  5029  001594  0E1A               	movlw	26
  5030  001596  5C09               	subwf	??___fladd^0,w,c
  5031  001598  A0D8               	btfss	status,0,c
  5032  00159A  EFD1  F00A         	goto	u2431
  5033  00159E  EFD3  F00A         	goto	u2430
  5034  0015A2                     u2431:
  5035  0015A2  EF0A  F00B         	goto	l622
  5036  0015A6                     u2430:
  5037  0015A6  5001               	movf	___fladd@b^0,w,c
  5038  0015A8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5039  0015AA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5040  0015AC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5041  0015AE  A4D8               	btfss	status,2,c
  5042  0015B0  EFDC  F00A         	goto	u2441
  5043  0015B4  EFDF  F00A         	goto	u2440
  5044  0015B8                     u2441:
  5045  0015B8  0E01               	movlw	1
  5046  0015BA  EFE0  F00A         	goto	u2450
  5047  0015BE                     u2440:
  5048  0015BE  0E00               	movlw	0
  5049  0015C0                     u2450:
  5050  0015C0  6E10               	movwf	___fladd@grs^0,c
  5051  0015C2  0E00               	movlw	0
  5052  0015C4  6E01               	movwf	___fladd@b^0,c
  5053  0015C6  0E00               	movlw	0
  5054  0015C8  6E02               	movwf	(___fladd@b+1)^0,c
  5055  0015CA  0E00               	movlw	0
  5056  0015CC  6E03               	movwf	(___fladd@b+2)^0,c
  5057  0015CE  0E00               	movlw	0
  5058  0015D0  6E04               	movwf	(___fladd@b+3)^0,c
  5059  0015D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5060  0015D6  EF13  F00B         	goto	l621
  5061  0015DA                     l623:
  5062  0015DA  A010               	btfss	___fladd@grs^0,0,c
  5063  0015DC  EFF2  F00A         	goto	u2461
  5064  0015E0  EFF4  F00A         	goto	u2460
  5065  0015E4                     u2461:
  5066  0015E4  EFFA  F00A         	goto	l2621
  5067  0015E8                     u2460:
  5068  0015E8  90D8               	bcf	status,0,c
  5069  0015EA  3010               	rrcf	___fladd@grs^0,w,c
  5070  0015EC  0901               	iorlw	1
  5071  0015EE  6E10               	movwf	___fladd@grs^0,c
  5072  0015F0  EFFC  F00A         	goto	l2623
  5073  0015F4                     l2621:
  5074  0015F4  90D8               	bcf	status,0,c
  5075  0015F6  3210               	rrcf	___fladd@grs^0,f,c
  5076  0015F8                     l2623:
  5077  0015F8  A001               	btfss	___fladd@b^0,0,c
  5078  0015FA  EF01  F00B         	goto	u2471
  5079  0015FE  EF03  F00B         	goto	u2470
  5080  001602                     u2471:
  5081  001602  EF04  F00B         	goto	l2627
  5082  001606                     u2470:
  5083  001606  8E10               	bsf	___fladd@grs^0,7,c
  5084  001608                     l2627:
  5085  001608  3404               	rlcf	(___fladd@b+3)^0,w,c
  5086  00160A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5087  00160C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5088  00160E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5089  001610  3201               	rrcf	___fladd@b^0,f,c
  5090  001612  2A0F               	incf	___fladd@bexp^0,f,c
  5091  001614                     l622:
  5092  001614  500E               	movf	___fladd@aexp^0,w,c
  5093  001616  5C0F               	subwf	___fladd@bexp^0,w,c
  5094  001618  A0D8               	btfss	status,0,c
  5095  00161A  EF11  F00B         	goto	u2481
  5096  00161E  EF13  F00B         	goto	u2480
  5097  001622                     u2481:
  5098  001622  EFED  F00A         	goto	l623
  5099  001626                     u2480:
  5100  001626                     l621:
  5101  001626  BC0D               	btfsc	___fladd@signs^0,6,c
  5102  001628  EF18  F00B         	goto	u2491
  5103  00162C  EF1A  F00B         	goto	u2490
  5104  001630                     u2491:
  5105  001630  EF5A  F00B         	goto	l2655
  5106  001634                     u2490:
  5107  001634  500F               	movf	___fladd@bexp^0,w,c
  5108  001636  A4D8               	btfss	status,2,c
  5109  001638  EF20  F00B         	goto	u2501
  5110  00163C  EF22  F00B         	goto	u2500
  5111  001640                     u2501:
  5112  001640  EF2C  F00B         	goto	l2637
  5113  001644                     u2500:
  5114  001644  0E00               	movlw	0
  5115  001646  6E01               	movwf	?___fladd^0,c
  5116  001648  0E00               	movlw	0
  5117  00164A  6E02               	movwf	(?___fladd+1)^0,c
  5118  00164C  0E00               	movlw	0
  5119  00164E  6E03               	movwf	(?___fladd+2)^0,c
  5120  001650  0E00               	movlw	0
  5121  001652  6E04               	movwf	(?___fladd+3)^0,c
  5122  001654  EF7B  F00C         	goto	l630
  5123  001658                     l2637:
  5124  001658  5005               	movf	___fladd@a^0,w,c
  5125  00165A  2601               	addwf	___fladd@b^0,f,c
  5126  00165C  5006               	movf	(___fladd@a+1)^0,w,c
  5127  00165E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5128  001660  5007               	movf	(___fladd@a+2)^0,w,c
  5129  001662  2203               	addwfc	(___fladd@b+2)^0,f,c
  5130  001664  5008               	movf	(___fladd@a+3)^0,w,c
  5131  001666  2204               	addwfc	(___fladd@b+3)^0,f,c
  5132  001668  A004               	btfss	(___fladd@b+3)^0,0,c
  5133  00166A  EF39  F00B         	goto	u2511
  5134  00166E  EF3B  F00B         	goto	u2510
  5135  001672                     u2511:
  5136  001672  EFE7  F00B         	goto	l2691
  5137  001676                     u2510:
  5138  001676  A010               	btfss	___fladd@grs^0,0,c
  5139  001678  EF40  F00B         	goto	u2521
  5140  00167C  EF42  F00B         	goto	u2520
  5141  001680                     u2521:
  5142  001680  EF48  F00B         	goto	l2645
  5143  001684                     u2520:
  5144  001684  90D8               	bcf	status,0,c
  5145  001686  3010               	rrcf	___fladd@grs^0,w,c
  5146  001688  0901               	iorlw	1
  5147  00168A  6E10               	movwf	___fladd@grs^0,c
  5148  00168C  EF4A  F00B         	goto	l2647
  5149  001690                     l2645:
  5150  001690  90D8               	bcf	status,0,c
  5151  001692  3210               	rrcf	___fladd@grs^0,f,c
  5152  001694                     l2647:
  5153  001694  A001               	btfss	___fladd@b^0,0,c
  5154  001696  EF4F  F00B         	goto	u2531
  5155  00169A  EF51  F00B         	goto	u2530
  5156  00169E                     u2531:
  5157  00169E  EF52  F00B         	goto	l2651
  5158  0016A2                     u2530:
  5159  0016A2  8E10               	bsf	___fladd@grs^0,7,c
  5160  0016A4                     l2651:
  5161  0016A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5162  0016A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5163  0016A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5164  0016AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5165  0016AC  3201               	rrcf	___fladd@b^0,f,c
  5166  0016AE  2A0F               	incf	___fladd@bexp^0,f,c
  5167  0016B0  EFE7  F00B         	goto	l2691
  5168  0016B4                     l2655:
  5169  0016B4  5005               	movf	___fladd@a^0,w,c
  5170  0016B6  5C01               	subwf	___fladd@b^0,w,c
  5171  0016B8  5006               	movf	(___fladd@a+1)^0,w,c
  5172  0016BA  5802               	subwfb	(___fladd@b+1)^0,w,c
  5173  0016BC  5007               	movf	(___fladd@a+2)^0,w,c
  5174  0016BE  5803               	subwfb	(___fladd@b+2)^0,w,c
  5175  0016C0  5004               	movf	(___fladd@b+3)^0,w,c
  5176  0016C2  0A80               	xorlw	128
  5177  0016C4  6E09               	movwf	??___fladd^0,c
  5178  0016C6  5008               	movf	(___fladd@a+3)^0,w,c
  5179  0016C8  0A80               	xorlw	128
  5180  0016CA  5809               	subwfb	??___fladd^0,w,c
  5181  0016CC  B0D8               	btfsc	status,0,c
  5182  0016CE  EF6B  F00B         	goto	u2541
  5183  0016D2  EF6D  F00B         	goto	u2540
  5184  0016D6                     u2541:
  5185  0016D6  EF98  F00B         	goto	l2665
  5186  0016DA                     u2540:
  5187  0016DA  5001               	movf	___fladd@b^0,w,c
  5188  0016DC  5C05               	subwf	___fladd@a^0,w,c
  5189  0016DE  6E09               	movwf	??___fladd^0,c
  5190  0016E0  5002               	movf	(___fladd@b+1)^0,w,c
  5191  0016E2  5806               	subwfb	(___fladd@a+1)^0,w,c
  5192  0016E4  6E0A               	movwf	(??___fladd+1)^0,c
  5193  0016E6  5003               	movf	(___fladd@b+2)^0,w,c
  5194  0016E8  5807               	subwfb	(___fladd@a+2)^0,w,c
  5195  0016EA  6E0B               	movwf	(??___fladd+2)^0,c
  5196  0016EC  5004               	movf	(___fladd@b+3)^0,w,c
  5197  0016EE  5808               	subwfb	(___fladd@a+3)^0,w,c
  5198  0016F0  6E0C               	movwf	(??___fladd+3)^0,c
  5199  0016F2  0EFF               	movlw	255
  5200  0016F4  2409               	addwf	??___fladd^0,w,c
  5201  0016F6  6E01               	movwf	___fladd@b^0,c
  5202  0016F8  0EFF               	movlw	255
  5203  0016FA  200A               	addwfc	(??___fladd+1)^0,w,c
  5204  0016FC  6E02               	movwf	(___fladd@b+1)^0,c
  5205  0016FE  0EFF               	movlw	255
  5206  001700  200B               	addwfc	(??___fladd+2)^0,w,c
  5207  001702  6E03               	movwf	(___fladd@b+2)^0,c
  5208  001704  0EFF               	movlw	255
  5209  001706  200C               	addwfc	(??___fladd+3)^0,w,c
  5210  001708  6E04               	movwf	(___fladd@b+3)^0,c
  5211  00170A  0E80               	movlw	128
  5212  00170C  1A0D               	xorwf	___fladd@signs^0,f,c
  5213  00170E  6C10               	negf	___fladd@grs^0,c
  5214  001710  5010               	movf	___fladd@grs^0,w,c
  5215  001712  A4D8               	btfss	status,2,c
  5216  001714  EF8E  F00B         	goto	u2551
  5217  001718  EF90  F00B         	goto	u2550
  5218  00171C                     u2551:
  5219  00171C  EFA0  F00B         	goto	l638
  5220  001720                     u2550:
  5221  001720  0E01               	movlw	1
  5222  001722  2601               	addwf	___fladd@b^0,f,c
  5223  001724  0E00               	movlw	0
  5224  001726  2202               	addwfc	(___fladd@b+1)^0,f,c
  5225  001728  2203               	addwfc	(___fladd@b+2)^0,f,c
  5226  00172A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5227  00172C  EFA0  F00B         	goto	l638
  5228  001730                     l2665:
  5229  001730  5005               	movf	___fladd@a^0,w,c
  5230  001732  5E01               	subwf	___fladd@b^0,f,c
  5231  001734  5006               	movf	(___fladd@a+1)^0,w,c
  5232  001736  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5233  001738  5007               	movf	(___fladd@a+2)^0,w,c
  5234  00173A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5235  00173C  5008               	movf	(___fladd@a+3)^0,w,c
  5236  00173E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5237  001740                     l638:
  5238  001740  5001               	movf	___fladd@b^0,w,c
  5239  001742  1002               	iorwf	(___fladd@b+1)^0,w,c
  5240  001744  1003               	iorwf	(___fladd@b+2)^0,w,c
  5241  001746  1004               	iorwf	(___fladd@b+3)^0,w,c
  5242  001748  A4D8               	btfss	status,2,c
  5243  00174A  EFA9  F00B         	goto	u2561
  5244  00174E  EFAB  F00B         	goto	u2560
  5245  001752                     u2561:
  5246  001752  EFE0  F00B         	goto	l2689
  5247  001756                     u2560:
  5248  001756  5010               	movf	___fladd@grs^0,w,c
  5249  001758  A4D8               	btfss	status,2,c
  5250  00175A  EFB1  F00B         	goto	u2571
  5251  00175E  EFB3  F00B         	goto	u2570
  5252  001762                     u2571:
  5253  001762  EFE0  F00B         	goto	l2689
  5254  001766                     u2570:
  5255  001766  0E00               	movlw	0
  5256  001768  6E01               	movwf	?___fladd^0,c
  5257  00176A  0E00               	movlw	0
  5258  00176C  6E02               	movwf	(?___fladd+1)^0,c
  5259  00176E  0E00               	movlw	0
  5260  001770  6E03               	movwf	(?___fladd+2)^0,c
  5261  001772  0E00               	movlw	0
  5262  001774  6E04               	movwf	(?___fladd+3)^0,c
  5263  001776  EF7B  F00C         	goto	l630
  5264  00177A                     l2673:
  5265  00177A  90D8               	bcf	status,0,c
  5266  00177C  3601               	rlcf	___fladd@b^0,f,c
  5267  00177E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5268  001780  3603               	rlcf	(___fladd@b+2)^0,f,c
  5269  001782  3604               	rlcf	(___fladd@b+3)^0,f,c
  5270  001784  AE10               	btfss	___fladd@grs^0,7,c
  5271  001786  EFC7  F00B         	goto	u2581
  5272  00178A  EFC9  F00B         	goto	u2580
  5273  00178E                     u2581:
  5274  00178E  EFCA  F00B         	goto	l2679
  5275  001792                     u2580:
  5276  001792  8001               	bsf	___fladd@b^0,0,c
  5277  001794                     l2679:
  5278  001794  A010               	btfss	___fladd@grs^0,0,c
  5279  001796  EFCF  F00B         	goto	u2591
  5280  00179A  EFD1  F00B         	goto	u2590
  5281  00179E                     u2591:
  5282  00179E  EFD5  F00B         	goto	l2683
  5283  0017A2                     u2590:
  5284  0017A2  80D8               	bsf	status,0,c
  5285  0017A4  3610               	rlcf	___fladd@grs^0,f,c
  5286  0017A6  EFD7  F00B         	goto	l2685
  5287  0017AA                     l2683:
  5288  0017AA  90D8               	bcf	status,0,c
  5289  0017AC  3610               	rlcf	___fladd@grs^0,f,c
  5290  0017AE                     l2685:
  5291  0017AE  500F               	movf	___fladd@bexp^0,w,c
  5292  0017B0  B4D8               	btfsc	status,2,c
  5293  0017B2  EFDD  F00B         	goto	u2601
  5294  0017B6  EFDF  F00B         	goto	u2600
  5295  0017BA                     u2601:
  5296  0017BA  EFE0  F00B         	goto	l2689
  5297  0017BE                     u2600:
  5298  0017BE  060F               	decf	___fladd@bexp^0,f,c
  5299  0017C0                     l2689:
  5300  0017C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5301  0017C2  EFE5  F00B         	goto	u2611
  5302  0017C6  EFE7  F00B         	goto	u2610
  5303  0017CA                     u2611:
  5304  0017CA  EFBD  F00B         	goto	l2673
  5305  0017CE                     u2610:
  5306  0017CE                     l2691:
  5307  0017CE  0E00               	movlw	0
  5308  0017D0  6E0E               	movwf	___fladd@aexp^0,c
  5309  0017D2  AE10               	btfss	___fladd@grs^0,7,c
  5310  0017D4  EFEE  F00B         	goto	u2621
  5311  0017D8  EFF0  F00B         	goto	u2620
  5312  0017DC                     u2621:
  5313  0017DC  EF08  F00C         	goto	l647
  5314  0017E0                     u2620:
  5315  0017E0  C010  F009         	movff	___fladd@grs,??___fladd
  5316  0017E4  0E7F               	movlw	127
  5317  0017E6  1609               	andwf	??___fladd^0,f,c
  5318  0017E8  B4D8               	btfsc	status,2,c
  5319  0017EA  EFF9  F00B         	goto	u2631
  5320  0017EE  EFFB  F00B         	goto	u2630
  5321  0017F2                     u2631:
  5322  0017F2  EFFF  F00B         	goto	l648
  5323  0017F6                     u2630:
  5324  0017F6                     l2697:
  5325  0017F6  0E01               	movlw	1
  5326  0017F8  6E0E               	movwf	___fladd@aexp^0,c
  5327  0017FA  EF08  F00C         	goto	l647
  5328  0017FE                     l648:
  5329  0017FE  A001               	btfss	___fladd@b^0,0,c
  5330  001800  EF04  F00C         	goto	u2641
  5331  001804  EF06  F00C         	goto	u2640
  5332  001808                     u2641:
  5333  001808  EF08  F00C         	goto	l647
  5334  00180C                     u2640:
  5335  00180C  EFFB  F00B         	goto	l2697
  5336  001810                     l647:
  5337  001810  500E               	movf	___fladd@aexp^0,w,c
  5338  001812  B4D8               	btfsc	status,2,c
  5339  001814  EF0E  F00C         	goto	u2651
  5340  001818  EF10  F00C         	goto	u2650
  5341  00181C                     u2651:
  5342  00181C  EF3B  F00C         	goto	l2709
  5343  001820                     u2650:
  5344  001820  0E01               	movlw	1
  5345  001822  2601               	addwf	___fladd@b^0,f,c
  5346  001824  0E00               	movlw	0
  5347  001826  2202               	addwfc	(___fladd@b+1)^0,f,c
  5348  001828  2203               	addwfc	(___fladd@b+2)^0,f,c
  5349  00182A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5350  00182C  A004               	btfss	(___fladd@b+3)^0,0,c
  5351  00182E  EF1B  F00C         	goto	u2661
  5352  001832  EF1D  F00C         	goto	u2660
  5353  001836                     u2661:
  5354  001836  EF3B  F00C         	goto	l2709
  5355  00183A                     u2660:
  5356  00183A  C001  F009         	movff	___fladd@b,??___fladd
  5357  00183E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5358  001842  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5359  001846  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5360  00184A  340C               	rlcf	(??___fladd+3)^0,w,c
  5361  00184C  320C               	rrcf	(??___fladd+3)^0,f,c
  5362  00184E  320B               	rrcf	(??___fladd+2)^0,f,c
  5363  001850  320A               	rrcf	(??___fladd+1)^0,f,c
  5364  001852  3209               	rrcf	??___fladd^0,f,c
  5365  001854  C009  F001         	movff	??___fladd,___fladd@b
  5366  001858  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5367  00185C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5368  001860  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5369  001864  280F               	incf	___fladd@bexp^0,w,c
  5370  001866  B4D8               	btfsc	status,2,c
  5371  001868  EF38  F00C         	goto	u2671
  5372  00186C  EF3A  F00C         	goto	u2670
  5373  001870                     u2671:
  5374  001870  EF3B  F00C         	goto	l2709
  5375  001874                     u2670:
  5376  001874  2A0F               	incf	___fladd@bexp^0,f,c
  5377  001876                     l2709:
  5378  001876  280F               	incf	___fladd@bexp^0,w,c
  5379  001878  B4D8               	btfsc	status,2,c
  5380  00187A  EF41  F00C         	goto	u2681
  5381  00187E  EF43  F00C         	goto	u2680
  5382  001882                     u2681:
  5383  001882  EF4B  F00C         	goto	l2713
  5384  001886                     u2680:
  5385  001886  500F               	movf	___fladd@bexp^0,w,c
  5386  001888  A4D8               	btfss	status,2,c
  5387  00188A  EF49  F00C         	goto	u2691
  5388  00188E  EF4B  F00C         	goto	u2690
  5389  001892                     u2691:
  5390  001892  EF5D  F00C         	goto	l2717
  5391  001896                     u2690:
  5392  001896                     l2713:
  5393  001896  0E00               	movlw	0
  5394  001898  6E01               	movwf	___fladd@b^0,c
  5395  00189A  0E00               	movlw	0
  5396  00189C  6E02               	movwf	(___fladd@b+1)^0,c
  5397  00189E  0E00               	movlw	0
  5398  0018A0  6E03               	movwf	(___fladd@b+2)^0,c
  5399  0018A2  0E00               	movlw	0
  5400  0018A4  6E04               	movwf	(___fladd@b+3)^0,c
  5401  0018A6  500F               	movf	___fladd@bexp^0,w,c
  5402  0018A8  A4D8               	btfss	status,2,c
  5403  0018AA  EF59  F00C         	goto	u2701
  5404  0018AE  EF5B  F00C         	goto	u2700
  5405  0018B2                     u2701:
  5406  0018B2  EF5D  F00C         	goto	l2717
  5407  0018B6                     u2700:
  5408  0018B6  0E00               	movlw	0
  5409  0018B8  6E0D               	movwf	___fladd@signs^0,c
  5410  0018BA                     l2717:
  5411  0018BA  A00F               	btfss	___fladd@bexp^0,0,c
  5412  0018BC  EF62  F00C         	goto	u2711
  5413  0018C0  EF64  F00C         	goto	u2710
  5414  0018C4                     u2711:
  5415  0018C4  EF67  F00C         	goto	l2721
  5416  0018C8                     u2710:
  5417  0018C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5418  0018CA  EF68  F00C         	goto	l2723
  5419  0018CE                     l2721:
  5420  0018CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  5421  0018D0                     l2723:
  5422  0018D0  90D8               	bcf	status,0,c
  5423  0018D2  300F               	rrcf	___fladd@bexp^0,w,c
  5424  0018D4  6E04               	movwf	(___fladd@b+3)^0,c
  5425  0018D6  AE0D               	btfss	___fladd@signs^0,7,c
  5426  0018D8  EF70  F00C         	goto	u2721
  5427  0018DC  EF72  F00C         	goto	u2720
  5428  0018E0                     u2721:
  5429  0018E0  EF73  F00C         	goto	l2729
  5430  0018E4                     u2720:
  5431  0018E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  5432  0018E6                     l2729:
  5433  0018E6  C001  F001         	movff	___fladd@b,?___fladd
  5434  0018EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5435  0018EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5436  0018F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5437  0018F6                     l630:
  5438  0018F6  0012               	return		;funcret
  5439  0018F8                     __end_of___fladd:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function ___flneg *****************
  5443 ;; Defined at:
  5444 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  f1              4    0[COMRAM] unsigned char 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  4    0[COMRAM] unsigned char 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5458 ;;      Params:         4       0       0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5461 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5462 ;;Total ram usage:        4 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_efgtoa
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text19
  5472  00368A                     __ptext19:
  5473                           	callstack 0
  5474  00368A                     ___flneg:
  5475                           	callstack 26
  5476  00368A  5001               	movf	___flneg@f1^0,w,c
  5477  00368C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5478  00368E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5479  003690  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5480  003692  B4D8               	btfsc	status,2,c
  5481  003694  EF4E  F01B         	goto	u3391
  5482  003698  EF50  F01B         	goto	u3390
  5483  00369C                     u3391:
  5484  00369C  EF58  F01B         	goto	l3157
  5485  0036A0                     u3390:
  5486  0036A0  0E00               	movlw	0
  5487  0036A2  1A01               	xorwf	___flneg@f1^0,f,c
  5488  0036A4  0E00               	movlw	0
  5489  0036A6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5490  0036A8  0E00               	movlw	0
  5491  0036AA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5492  0036AC  0E80               	movlw	128
  5493  0036AE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5494  0036B0                     l3157:
  5495  0036B0  C001  F001         	movff	___flneg@f1,?___flneg
  5496  0036B4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5497  0036B8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5498  0036BC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5499  0036C0  0012               	return		;funcret
  5500  0036C2                     __end_of___flneg:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function ___flmul *****************
  5504 ;; Defined at:
  5505 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  b               4    0[COMRAM] unsigned char 
  5508 ;;  a               4    4[COMRAM] unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  prod            4   19[COMRAM] struct .
  5511 ;;  grs             4   13[COMRAM] unsigned long 
  5512 ;;  temp            2   23[COMRAM] struct .
  5513 ;;  bexp            1   18[COMRAM] unsigned char 
  5514 ;;  aexp            1   17[COMRAM] unsigned char 
  5515 ;;  sign            1   12[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4    0[COMRAM] unsigned char 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, prodl, prodh
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5525 ;;      Params:         8       0       0       0       0       0       0       0       0
  5526 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5528 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:       25 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_efgtoa
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text20
  5539  001D24                     __ptext20:
  5540                           	callstack 0
  5541  001D24                     ___flmul:
  5542                           	callstack 26
  5543  001D24  5004               	movf	(___flmul@b+3)^0,w,c
  5544  001D26  0B80               	andlw	128
  5545  001D28  6E0D               	movwf	___flmul@sign^0,c
  5546  001D2A  5004               	movf	(___flmul@b+3)^0,w,c
  5547  001D2C  2404               	addwf	(___flmul@b+3)^0,w,c
  5548  001D2E  6E13               	movwf	___flmul@bexp^0,c
  5549  001D30  AE03               	btfss	(___flmul@b+2)^0,7,c
  5550  001D32  EF9D  F00E         	goto	u3001
  5551  001D36  EF9F  F00E         	goto	u3000
  5552  001D3A                     u3001:
  5553  001D3A  EFA0  F00E         	goto	l2905
  5554  001D3E                     u3000:
  5555  001D3E  8013               	bsf	___flmul@bexp^0,0,c
  5556  001D40                     l2905:
  5557  001D40  5013               	movf	___flmul@bexp^0,w,c
  5558  001D42  B4D8               	btfsc	status,2,c
  5559  001D44  EFA6  F00E         	goto	u3011
  5560  001D48  EFA8  F00E         	goto	u3010
  5561  001D4C                     u3011:
  5562  001D4C  EFBB  F00E         	goto	l2913
  5563  001D50                     u3010:
  5564  001D50  2813               	incf	___flmul@bexp^0,w,c
  5565  001D52  A4D8               	btfss	status,2,c
  5566  001D54  EFAE  F00E         	goto	u3021
  5567  001D58  EFB0  F00E         	goto	u3020
  5568  001D5C                     u3021:
  5569  001D5C  EFB8  F00E         	goto	l2911
  5570  001D60                     u3020:
  5571  001D60  0E00               	movlw	0
  5572  001D62  6E01               	movwf	___flmul@b^0,c
  5573  001D64  0E00               	movlw	0
  5574  001D66  6E02               	movwf	(___flmul@b+1)^0,c
  5575  001D68  0E00               	movlw	0
  5576  001D6A  6E03               	movwf	(___flmul@b+2)^0,c
  5577  001D6C  0E00               	movlw	0
  5578  001D6E  6E04               	movwf	(___flmul@b+3)^0,c
  5579  001D70                     l2911:
  5580  001D70  8E03               	bsf	(___flmul@b+2)^0,7,c
  5581  001D72  EFC3  F00E         	goto	l2915
  5582  001D76                     l2913:
  5583  001D76  0E00               	movlw	0
  5584  001D78  6E01               	movwf	___flmul@b^0,c
  5585  001D7A  0E00               	movlw	0
  5586  001D7C  6E02               	movwf	(___flmul@b+1)^0,c
  5587  001D7E  0E00               	movlw	0
  5588  001D80  6E03               	movwf	(___flmul@b+2)^0,c
  5589  001D82  0E00               	movlw	0
  5590  001D84  6E04               	movwf	(___flmul@b+3)^0,c
  5591  001D86                     l2915:
  5592  001D86  5008               	movf	(___flmul@a+3)^0,w,c
  5593  001D88  0B80               	andlw	128
  5594  001D8A  1A0D               	xorwf	___flmul@sign^0,f,c
  5595  001D8C  5008               	movf	(___flmul@a+3)^0,w,c
  5596  001D8E  2408               	addwf	(___flmul@a+3)^0,w,c
  5597  001D90  6E12               	movwf	___flmul@aexp^0,c
  5598  001D92  AE07               	btfss	(___flmul@a+2)^0,7,c
  5599  001D94  EFCE  F00E         	goto	u3031
  5600  001D98  EFD0  F00E         	goto	u3030
  5601  001D9C                     u3031:
  5602  001D9C  EFD1  F00E         	goto	l2923
  5603  001DA0                     u3030:
  5604  001DA0  8012               	bsf	___flmul@aexp^0,0,c
  5605  001DA2                     l2923:
  5606  001DA2  5012               	movf	___flmul@aexp^0,w,c
  5607  001DA4  B4D8               	btfsc	status,2,c
  5608  001DA6  EFD7  F00E         	goto	u3041
  5609  001DAA  EFD9  F00E         	goto	u3040
  5610  001DAE                     u3041:
  5611  001DAE  EFEC  F00E         	goto	l2931
  5612  001DB2                     u3040:
  5613  001DB2  2812               	incf	___flmul@aexp^0,w,c
  5614  001DB4  A4D8               	btfss	status,2,c
  5615  001DB6  EFDF  F00E         	goto	u3051
  5616  001DBA  EFE1  F00E         	goto	u3050
  5617  001DBE                     u3051:
  5618  001DBE  EFE9  F00E         	goto	l2929
  5619  001DC2                     u3050:
  5620  001DC2  0E00               	movlw	0
  5621  001DC4  6E05               	movwf	___flmul@a^0,c
  5622  001DC6  0E00               	movlw	0
  5623  001DC8  6E06               	movwf	(___flmul@a+1)^0,c
  5624  001DCA  0E00               	movlw	0
  5625  001DCC  6E07               	movwf	(___flmul@a+2)^0,c
  5626  001DCE  0E00               	movlw	0
  5627  001DD0  6E08               	movwf	(___flmul@a+3)^0,c
  5628  001DD2                     l2929:
  5629  001DD2  8E07               	bsf	(___flmul@a+2)^0,7,c
  5630  001DD4  EFF4  F00E         	goto	l707
  5631  001DD8                     l2931:
  5632  001DD8  0E00               	movlw	0
  5633  001DDA  6E05               	movwf	___flmul@a^0,c
  5634  001DDC  0E00               	movlw	0
  5635  001DDE  6E06               	movwf	(___flmul@a+1)^0,c
  5636  001DE0  0E00               	movlw	0
  5637  001DE2  6E07               	movwf	(___flmul@a+2)^0,c
  5638  001DE4  0E00               	movlw	0
  5639  001DE6  6E08               	movwf	(___flmul@a+3)^0,c
  5640  001DE8                     l707:
  5641  001DE8  5012               	movf	___flmul@aexp^0,w,c
  5642  001DEA  B4D8               	btfsc	status,2,c
  5643  001DEC  EFFA  F00E         	goto	u3061
  5644  001DF0  EFFC  F00E         	goto	u3060
  5645  001DF4                     u3061:
  5646  001DF4  EF04  F00F         	goto	l2935
  5647  001DF8                     u3060:
  5648  001DF8  5013               	movf	___flmul@bexp^0,w,c
  5649  001DFA  A4D8               	btfss	status,2,c
  5650  001DFC  EF02  F00F         	goto	u3071
  5651  001E00  EF04  F00F         	goto	u3070
  5652  001E04                     u3071:
  5653  001E04  EF0E  F00F         	goto	l2939
  5654  001E08                     u3070:
  5655  001E08                     l2935:
  5656  001E08  0E00               	movlw	0
  5657  001E0A  6E01               	movwf	?___flmul^0,c
  5658  001E0C  0E00               	movlw	0
  5659  001E0E  6E02               	movwf	(?___flmul+1)^0,c
  5660  001E10  0E00               	movlw	0
  5661  001E12  6E03               	movwf	(?___flmul+2)^0,c
  5662  001E14  0E00               	movlw	0
  5663  001E16  6E04               	movwf	(?___flmul+3)^0,c
  5664  001E18  EFA6  F010         	goto	l711
  5665  001E1C                     l2939:
  5666  001E1C  5007               	movf	(___flmul@a+2)^0,w,c
  5667  001E1E  0201               	mulwf	___flmul@b^0,c
  5668  001E20  CFF3 F018          	movff	prodl,___flmul@temp
  5669  001E24  CFF4 F019          	movff	prodh,___flmul@temp+1
  5670  001E28  5018               	movf	___flmul@temp^0,w,c
  5671  001E2A  6E0E               	movwf	___flmul@grs^0,c
  5672  001E2C  6A0F               	clrf	(___flmul@grs+1)^0,c
  5673  001E2E  6A10               	clrf	(___flmul@grs+2)^0,c
  5674  001E30  6A11               	clrf	(___flmul@grs+3)^0,c
  5675  001E32  5019               	movf	(___flmul@temp+1)^0,w,c
  5676  001E34  6E14               	movwf	___flmul@prod^0,c
  5677  001E36  6A15               	clrf	(___flmul@prod+1)^0,c
  5678  001E38  6A16               	clrf	(___flmul@prod+2)^0,c
  5679  001E3A  6A17               	clrf	(___flmul@prod+3)^0,c
  5680  001E3C  5006               	movf	(___flmul@a+1)^0,w,c
  5681  001E3E  0202               	mulwf	(___flmul@b+1)^0,c
  5682  001E40  CFF3 F018          	movff	prodl,___flmul@temp
  5683  001E44  CFF4 F019          	movff	prodh,___flmul@temp+1
  5684  001E48  5018               	movf	___flmul@temp^0,w,c
  5685  001E4A  260E               	addwf	___flmul@grs^0,f,c
  5686  001E4C  0E00               	movlw	0
  5687  001E4E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5688  001E50  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5689  001E52  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5690  001E54  5019               	movf	(___flmul@temp+1)^0,w,c
  5691  001E56  2614               	addwf	___flmul@prod^0,f,c
  5692  001E58  0E00               	movlw	0
  5693  001E5A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5694  001E5C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5695  001E5E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5696  001E60  5005               	movf	___flmul@a^0,w,c
  5697  001E62  0203               	mulwf	(___flmul@b+2)^0,c
  5698  001E64  CFF3 F018          	movff	prodl,___flmul@temp
  5699  001E68  CFF4 F019          	movff	prodh,___flmul@temp+1
  5700  001E6C  5018               	movf	___flmul@temp^0,w,c
  5701  001E6E  260E               	addwf	___flmul@grs^0,f,c
  5702  001E70  0E00               	movlw	0
  5703  001E72  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5704  001E74  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5705  001E76  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5706  001E78  5019               	movf	(___flmul@temp+1)^0,w,c
  5707  001E7A  2614               	addwf	___flmul@prod^0,f,c
  5708  001E7C  0E00               	movlw	0
  5709  001E7E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5710  001E80  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5711  001E82  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5712  001E84  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5713  001E88  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5714  001E8C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5715  001E90  6A0E               	clrf	___flmul@grs^0,c
  5716  001E92  5005               	movf	___flmul@a^0,w,c
  5717  001E94  0202               	mulwf	(___flmul@b+1)^0,c
  5718  001E96  CFF3 F018          	movff	prodl,___flmul@temp
  5719  001E9A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5720  001E9E  5018               	movf	___flmul@temp^0,w,c
  5721  001EA0  260E               	addwf	___flmul@grs^0,f,c
  5722  001EA2  5019               	movf	(___flmul@temp+1)^0,w,c
  5723  001EA4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5724  001EA6  0E00               	movlw	0
  5725  001EA8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5726  001EAA  0E00               	movlw	0
  5727  001EAC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5728  001EAE  5006               	movf	(___flmul@a+1)^0,w,c
  5729  001EB0  0201               	mulwf	___flmul@b^0,c
  5730  001EB2  CFF3 F018          	movff	prodl,___flmul@temp
  5731  001EB6  CFF4 F019          	movff	prodh,___flmul@temp+1
  5732  001EBA  5018               	movf	___flmul@temp^0,w,c
  5733  001EBC  260E               	addwf	___flmul@grs^0,f,c
  5734  001EBE  5019               	movf	(___flmul@temp+1)^0,w,c
  5735  001EC0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5736  001EC2  0E00               	movlw	0
  5737  001EC4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5738  001EC6  0E00               	movlw	0
  5739  001EC8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5740  001ECA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5741  001ECE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5742  001ED2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5743  001ED6  6A0E               	clrf	___flmul@grs^0,c
  5744  001ED8  5005               	movf	___flmul@a^0,w,c
  5745  001EDA  0201               	mulwf	___flmul@b^0,c
  5746  001EDC  CFF3 F018          	movff	prodl,___flmul@temp
  5747  001EE0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5748  001EE4  5018               	movf	___flmul@temp^0,w,c
  5749  001EE6  260E               	addwf	___flmul@grs^0,f,c
  5750  001EE8  5019               	movf	(___flmul@temp+1)^0,w,c
  5751  001EEA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5752  001EEC  0E00               	movlw	0
  5753  001EEE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5754  001EF0  0E00               	movlw	0
  5755  001EF2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5756  001EF4  5007               	movf	(___flmul@a+2)^0,w,c
  5757  001EF6  0202               	mulwf	(___flmul@b+1)^0,c
  5758  001EF8  CFF3 F018          	movff	prodl,___flmul@temp
  5759  001EFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5760  001F00  5018               	movf	___flmul@temp^0,w,c
  5761  001F02  2614               	addwf	___flmul@prod^0,f,c
  5762  001F04  5019               	movf	(___flmul@temp+1)^0,w,c
  5763  001F06  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5764  001F08  0E00               	movlw	0
  5765  001F0A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5766  001F0C  0E00               	movlw	0
  5767  001F0E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5768  001F10  5006               	movf	(___flmul@a+1)^0,w,c
  5769  001F12  0203               	mulwf	(___flmul@b+2)^0,c
  5770  001F14  CFF3 F018          	movff	prodl,___flmul@temp
  5771  001F18  CFF4 F019          	movff	prodh,___flmul@temp+1
  5772  001F1C  5018               	movf	___flmul@temp^0,w,c
  5773  001F1E  2614               	addwf	___flmul@prod^0,f,c
  5774  001F20  5019               	movf	(___flmul@temp+1)^0,w,c
  5775  001F22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5776  001F24  0E00               	movlw	0
  5777  001F26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5778  001F28  0E00               	movlw	0
  5779  001F2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5780  001F2C  5007               	movf	(___flmul@a+2)^0,w,c
  5781  001F2E  0203               	mulwf	(___flmul@b+2)^0,c
  5782  001F30  CFF3 F018          	movff	prodl,___flmul@temp
  5783  001F34  CFF4 F019          	movff	prodh,___flmul@temp+1
  5784  001F38  5018               	movf	___flmul@temp^0,w,c
  5785  001F3A  6E09               	movwf	??___flmul^0,c
  5786  001F3C  5019               	movf	(___flmul@temp+1)^0,w,c
  5787  001F3E  6E0A               	movwf	(??___flmul+1)^0,c
  5788  001F40  6A0B               	clrf	(??___flmul+2)^0,c
  5789  001F42  6A0C               	clrf	(??___flmul+3)^0,c
  5790  001F44  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5791  001F48  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5792  001F4C  C009  F00A         	movff	??___flmul,??___flmul+1
  5793  001F50  6A09               	clrf	??___flmul^0,c
  5794  001F52  5009               	movf	??___flmul^0,w,c
  5795  001F54  2614               	addwf	___flmul@prod^0,f,c
  5796  001F56  500A               	movf	(??___flmul+1)^0,w,c
  5797  001F58  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5798  001F5A  500B               	movf	(??___flmul+2)^0,w,c
  5799  001F5C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5800  001F5E  500C               	movf	(??___flmul+3)^0,w,c
  5801  001F60  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5802  001F62  C00E  F009         	movff	___flmul@grs,??___flmul
  5803  001F66  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5804  001F6A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5805  001F6E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5806  001F72  0E19               	movlw	25
  5807  001F74  EFC1  F00F         	goto	u3080
  5808  001F78                     u3085:
  5809  001F78  90D8               	bcf	status,0,c
  5810  001F7A  320C               	rrcf	(??___flmul+3)^0,f,c
  5811  001F7C  320B               	rrcf	(??___flmul+2)^0,f,c
  5812  001F7E  320A               	rrcf	(??___flmul+1)^0,f,c
  5813  001F80  3209               	rrcf	??___flmul^0,f,c
  5814  001F82                     u3080:
  5815  001F82  2EE8               	decfsz	wreg,f,c
  5816  001F84  EFBC  F00F         	goto	u3085
  5817  001F88  5009               	movf	??___flmul^0,w,c
  5818  001F8A  2614               	addwf	___flmul@prod^0,f,c
  5819  001F8C  500A               	movf	(??___flmul+1)^0,w,c
  5820  001F8E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5821  001F90  500B               	movf	(??___flmul+2)^0,w,c
  5822  001F92  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5823  001F94  500C               	movf	(??___flmul+3)^0,w,c
  5824  001F96  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5825  001F98  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5826  001F9C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5827  001FA0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5828  001FA4  6A0E               	clrf	___flmul@grs^0,c
  5829  001FA6  5012               	movf	___flmul@aexp^0,w,c
  5830  001FA8  C013  F009         	movff	___flmul@bexp,??___flmul
  5831  001FAC  6A0A               	clrf	(??___flmul+1)^0,c
  5832  001FAE  2609               	addwf	??___flmul^0,f,c
  5833  001FB0  0E00               	movlw	0
  5834  001FB2  220A               	addwfc	(??___flmul+1)^0,f,c
  5835  001FB4  0E82               	movlw	130
  5836  001FB6  2409               	addwf	??___flmul^0,w,c
  5837  001FB8  6E18               	movwf	___flmul@temp^0,c
  5838  001FBA  0EFF               	movlw	255
  5839  001FBC  200A               	addwfc	(??___flmul+1)^0,w,c
  5840  001FBE  6E19               	movwf	(___flmul@temp+1)^0,c
  5841  001FC0  EFF7  F00F         	goto	l2987
  5842  001FC4                     l2981:
  5843  001FC4  90D8               	bcf	status,0,c
  5844  001FC6  3614               	rlcf	___flmul@prod^0,f,c
  5845  001FC8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5846  001FCA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5847  001FCC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5848  001FCE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5849  001FD0  EFEC  F00F         	goto	u3091
  5850  001FD4  EFEE  F00F         	goto	u3090
  5851  001FD8                     u3091:
  5852  001FD8  EFEF  F00F         	goto	l714
  5853  001FDC                     u3090:
  5854  001FDC  8014               	bsf	___flmul@prod^0,0,c
  5855  001FDE                     l714:
  5856  001FDE  90D8               	bcf	status,0,c
  5857  001FE0  360E               	rlcf	___flmul@grs^0,f,c
  5858  001FE2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5859  001FE4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5860  001FE6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5861  001FE8  0618               	decf	___flmul@temp^0,f,c
  5862  001FEA  A0D8               	btfss	status,0,c
  5863  001FEC  0619               	decf	(___flmul@temp+1)^0,f,c
  5864  001FEE                     l2987:
  5865  001FEE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5866  001FF0  EFFC  F00F         	goto	u3101
  5867  001FF4  EFFE  F00F         	goto	u3100
  5868  001FF8                     u3101:
  5869  001FF8  EFE2  F00F         	goto	l2981
  5870  001FFC                     u3100:
  5871  001FFC  0E00               	movlw	0
  5872  001FFE  6E12               	movwf	___flmul@aexp^0,c
  5873  002000  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5874  002002  EF05  F010         	goto	u3111
  5875  002006  EF07  F010         	goto	u3110
  5876  00200A                     u3111:
  5877  00200A  EF2B  F010         	goto	l716
  5878  00200E                     u3110:
  5879  00200E  0EFF               	movlw	255
  5880  002010  140E               	andwf	___flmul@grs^0,w,c
  5881  002012  6E09               	movwf	??___flmul^0,c
  5882  002014  0EFF               	movlw	255
  5883  002016  140F               	andwf	(___flmul@grs+1)^0,w,c
  5884  002018  6E0A               	movwf	(??___flmul+1)^0,c
  5885  00201A  0EFF               	movlw	255
  5886  00201C  1410               	andwf	(___flmul@grs+2)^0,w,c
  5887  00201E  6E0B               	movwf	(??___flmul+2)^0,c
  5888  002020  0E7F               	movlw	127
  5889  002022  1411               	andwf	(___flmul@grs+3)^0,w,c
  5890  002024  6E0C               	movwf	(??___flmul+3)^0,c
  5891  002026  5009               	movf	??___flmul^0,w,c
  5892  002028  100A               	iorwf	(??___flmul+1)^0,w,c
  5893  00202A  100B               	iorwf	(??___flmul+2)^0,w,c
  5894  00202C  100C               	iorwf	(??___flmul+3)^0,w,c
  5895  00202E  B4D8               	btfsc	status,2,c
  5896  002030  EF1C  F010         	goto	u3121
  5897  002034  EF1E  F010         	goto	u3120
  5898  002038                     u3121:
  5899  002038  EF22  F010         	goto	l717
  5900  00203C                     u3120:
  5901  00203C                     l2995:
  5902  00203C  0E01               	movlw	1
  5903  00203E  6E12               	movwf	___flmul@aexp^0,c
  5904  002040  EF2B  F010         	goto	l716
  5905  002044                     l717:
  5906  002044  A014               	btfss	___flmul@prod^0,0,c
  5907  002046  EF27  F010         	goto	u3131
  5908  00204A  EF29  F010         	goto	u3130
  5909  00204E                     u3131:
  5910  00204E  EF2B  F010         	goto	l716
  5911  002052                     u3130:
  5912  002052  EF1E  F010         	goto	l2995
  5913  002056                     l716:
  5914  002056  5012               	movf	___flmul@aexp^0,w,c
  5915  002058  B4D8               	btfsc	status,2,c
  5916  00205A  EF31  F010         	goto	u3141
  5917  00205E  EF33  F010         	goto	u3140
  5918  002062                     u3141:
  5919  002062  EF57  F010         	goto	l3007
  5920  002066                     u3140:
  5921  002066  0E01               	movlw	1
  5922  002068  2614               	addwf	___flmul@prod^0,f,c
  5923  00206A  0E00               	movlw	0
  5924  00206C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5925  00206E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5926  002070  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5927  002072  A017               	btfss	(___flmul@prod+3)^0,0,c
  5928  002074  EF3E  F010         	goto	u3151
  5929  002078  EF40  F010         	goto	u3150
  5930  00207C                     u3151:
  5931  00207C  EF57  F010         	goto	l3007
  5932  002080                     u3150:
  5933  002080  C014  F009         	movff	___flmul@prod,??___flmul
  5934  002084  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5935  002088  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5936  00208C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5937  002090  340C               	rlcf	(??___flmul+3)^0,w,c
  5938  002092  320C               	rrcf	(??___flmul+3)^0,f,c
  5939  002094  320B               	rrcf	(??___flmul+2)^0,f,c
  5940  002096  320A               	rrcf	(??___flmul+1)^0,f,c
  5941  002098  3209               	rrcf	??___flmul^0,f,c
  5942  00209A  C009  F014         	movff	??___flmul,___flmul@prod
  5943  00209E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5944  0020A2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5945  0020A6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5946  0020AA  4A18               	infsnz	___flmul@temp^0,f,c
  5947  0020AC  2A19               	incf	(___flmul@temp+1)^0,f,c
  5948  0020AE                     l3007:
  5949  0020AE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5950  0020B0  EF62  F010         	goto	u3161
  5951  0020B4  5019               	movf	(___flmul@temp+1)^0,w,c
  5952  0020B6  E108               	bnz	u3160
  5953  0020B8  2818               	incf	___flmul@temp^0,w,c
  5954  0020BA  A0D8               	btfss	status,0,c
  5955  0020BC  EF62  F010         	goto	u3161
  5956  0020C0  EF64  F010         	goto	u3160
  5957  0020C4                     u3161:
  5958  0020C4  EF6E  F010         	goto	l3011
  5959  0020C8                     u3160:
  5960  0020C8  0E00               	movlw	0
  5961  0020CA  6E14               	movwf	___flmul@prod^0,c
  5962  0020CC  0E00               	movlw	0
  5963  0020CE  6E15               	movwf	(___flmul@prod+1)^0,c
  5964  0020D0  0E80               	movlw	128
  5965  0020D2  6E16               	movwf	(___flmul@prod+2)^0,c
  5966  0020D4  0E7F               	movlw	127
  5967  0020D6  6E17               	movwf	(___flmul@prod+3)^0,c
  5968  0020D8  EF9C  F010         	goto	l3023
  5969  0020DC                     l3011:
  5970  0020DC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5971  0020DE  EF7B  F010         	goto	u3170
  5972  0020E2  5019               	movf	(___flmul@temp+1)^0,w,c
  5973  0020E4  E106               	bnz	u3171
  5974  0020E6  0418               	decf	___flmul@temp^0,w,c
  5975  0020E8  B0D8               	btfsc	status,0,c
  5976  0020EA  EF79  F010         	goto	u3171
  5977  0020EE  EF7B  F010         	goto	u3170
  5978  0020F2                     u3171:
  5979  0020F2  EF87  F010         	goto	l724
  5980  0020F6                     u3170:
  5981  0020F6  0E00               	movlw	0
  5982  0020F8  6E14               	movwf	___flmul@prod^0,c
  5983  0020FA  0E00               	movlw	0
  5984  0020FC  6E15               	movwf	(___flmul@prod+1)^0,c
  5985  0020FE  0E00               	movlw	0
  5986  002100  6E16               	movwf	(___flmul@prod+2)^0,c
  5987  002102  0E00               	movlw	0
  5988  002104  6E17               	movwf	(___flmul@prod+3)^0,c
  5989  002106  0E00               	movlw	0
  5990  002108  6E0D               	movwf	___flmul@sign^0,c
  5991  00210A  EF9C  F010         	goto	l3023
  5992  00210E                     l724:
  5993  00210E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5994  002112  0EFF               	movlw	255
  5995  002114  1614               	andwf	___flmul@prod^0,f,c
  5996  002116  0EFF               	movlw	255
  5997  002118  1615               	andwf	(___flmul@prod+1)^0,f,c
  5998  00211A  0E7F               	movlw	127
  5999  00211C  1616               	andwf	(___flmul@prod+2)^0,f,c
  6000  00211E  0E00               	movlw	0
  6001  002120  1617               	andwf	(___flmul@prod+3)^0,f,c
  6002  002122  A013               	btfss	___flmul@bexp^0,0,c
  6003  002124  EF96  F010         	goto	u3181
  6004  002128  EF98  F010         	goto	u3180
  6005  00212C                     u3181:
  6006  00212C  EF99  F010         	goto	l3021
  6007  002130                     u3180:
  6008  002130  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6009  002132                     l3021:
  6010  002132  90D8               	bcf	status,0,c
  6011  002134  3013               	rrcf	___flmul@bexp^0,w,c
  6012  002136  6E17               	movwf	(___flmul@prod+3)^0,c
  6013  002138                     l3023:
  6014  002138  500D               	movf	___flmul@sign^0,w,c
  6015  00213A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6016  00213C  C014  F001         	movff	___flmul@prod,?___flmul
  6017  002140  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6018  002144  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6019  002148  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6020  00214C                     l711:
  6021  00214C  0012               	return		;funcret
  6022  00214E                     __end_of___flmul:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function ___flge *****************
  6026 ;; Defined at:
  6027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  ff1             4   25[COMRAM] unsigned char 
  6030 ;;  ff2             4   29[COMRAM] unsigned char 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;		None               void
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6042 ;;      Params:         8       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6045 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:       12 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_efgtoa
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text21
  6056  002B0A                     __ptext21:
  6057                           	callstack 0
  6058  002B0A                     ___flge:
  6059                           	callstack 26
  6060  002B0A  0E00               	movlw	0
  6061  002B0C  141A               	andwf	___flge@ff1^0,w,c
  6062  002B0E  6E22               	movwf	??___flge^0,c
  6063  002B10  0E00               	movlw	0
  6064  002B12  141B               	andwf	(___flge@ff1+1)^0,w,c
  6065  002B14  6E23               	movwf	(??___flge+1)^0,c
  6066  002B16  0E80               	movlw	128
  6067  002B18  141C               	andwf	(___flge@ff1+2)^0,w,c
  6068  002B1A  6E24               	movwf	(??___flge+2)^0,c
  6069  002B1C  0E7F               	movlw	127
  6070  002B1E  141D               	andwf	(___flge@ff1+3)^0,w,c
  6071  002B20  6E25               	movwf	(??___flge+3)^0,c
  6072  002B22  5022               	movf	??___flge^0,w,c
  6073  002B24  1023               	iorwf	(??___flge+1)^0,w,c
  6074  002B26  1024               	iorwf	(??___flge+2)^0,w,c
  6075  002B28  1025               	iorwf	(??___flge+3)^0,w,c
  6076  002B2A  A4D8               	btfss	status,2,c
  6077  002B2C  EF9A  F015         	goto	u3341
  6078  002B30  EF9C  F015         	goto	u3340
  6079  002B34                     u3341:
  6080  002B34  EFA4  F015         	goto	l3135
  6081  002B38                     u3340:
  6082  002B38  0E00               	movlw	0
  6083  002B3A  6E1A               	movwf	___flge@ff1^0,c
  6084  002B3C  0E00               	movlw	0
  6085  002B3E  6E1B               	movwf	(___flge@ff1+1)^0,c
  6086  002B40  0E00               	movlw	0
  6087  002B42  6E1C               	movwf	(___flge@ff1+2)^0,c
  6088  002B44  0E00               	movlw	0
  6089  002B46  6E1D               	movwf	(___flge@ff1+3)^0,c
  6090  002B48                     l3135:
  6091  002B48  0E00               	movlw	0
  6092  002B4A  141E               	andwf	___flge@ff2^0,w,c
  6093  002B4C  6E22               	movwf	??___flge^0,c
  6094  002B4E  0E00               	movlw	0
  6095  002B50  141F               	andwf	(___flge@ff2+1)^0,w,c
  6096  002B52  6E23               	movwf	(??___flge+1)^0,c
  6097  002B54  0E80               	movlw	128
  6098  002B56  1420               	andwf	(___flge@ff2+2)^0,w,c
  6099  002B58  6E24               	movwf	(??___flge+2)^0,c
  6100  002B5A  0E7F               	movlw	127
  6101  002B5C  1421               	andwf	(___flge@ff2+3)^0,w,c
  6102  002B5E  6E25               	movwf	(??___flge+3)^0,c
  6103  002B60  5022               	movf	??___flge^0,w,c
  6104  002B62  1023               	iorwf	(??___flge+1)^0,w,c
  6105  002B64  1024               	iorwf	(??___flge+2)^0,w,c
  6106  002B66  1025               	iorwf	(??___flge+3)^0,w,c
  6107  002B68  A4D8               	btfss	status,2,c
  6108  002B6A  EFB9  F015         	goto	u3351
  6109  002B6E  EFBB  F015         	goto	u3350
  6110  002B72                     u3351:
  6111  002B72  EFC3  F015         	goto	l3139
  6112  002B76                     u3350:
  6113  002B76  0E00               	movlw	0
  6114  002B78  6E1E               	movwf	___flge@ff2^0,c
  6115  002B7A  0E00               	movlw	0
  6116  002B7C  6E1F               	movwf	(___flge@ff2+1)^0,c
  6117  002B7E  0E00               	movlw	0
  6118  002B80  6E20               	movwf	(___flge@ff2+2)^0,c
  6119  002B82  0E00               	movlw	0
  6120  002B84  6E21               	movwf	(___flge@ff2+3)^0,c
  6121  002B86                     l3139:
  6122  002B86  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6123  002B88  EFC8  F015         	goto	u3361
  6124  002B8C  EFCA  F015         	goto	u3360
  6125  002B90                     u3361:
  6126  002B90  EFD3  F015         	goto	l3143
  6127  002B94                     u3360:
  6128  002B94  6C1A               	negf	___flge@ff1^0,c
  6129  002B96  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6130  002B98  B0D8               	btfsc	status,0,c
  6131  002B9A  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6132  002B9C  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6133  002B9E  B0D8               	btfsc	status,0,c
  6134  002BA0  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6135  002BA2  0E80               	movlw	128
  6136  002BA4  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6137  002BA6                     l3143:
  6138  002BA6  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6139  002BA8  EFD8  F015         	goto	u3371
  6140  002BAC  EFDA  F015         	goto	u3370
  6141  002BB0                     u3371:
  6142  002BB0  EFE3  F015         	goto	l358
  6143  002BB4                     u3370:
  6144  002BB4  6C1E               	negf	___flge@ff2^0,c
  6145  002BB6  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6146  002BB8  B0D8               	btfsc	status,0,c
  6147  002BBA  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6148  002BBC  1E20               	comf	(___flge@ff2+2)^0,f,c
  6149  002BBE  B0D8               	btfsc	status,0,c
  6150  002BC0  2A20               	incf	(___flge@ff2+2)^0,f,c
  6151  002BC2  0E80               	movlw	128
  6152  002BC4  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6153  002BC6                     l358:
  6154  002BC6  0E00               	movlw	0
  6155  002BC8  1A1A               	xorwf	___flge@ff1^0,f,c
  6156  002BCA  0E00               	movlw	0
  6157  002BCC  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6158  002BCE  0E00               	movlw	0
  6159  002BD0  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6160  002BD2  0E80               	movlw	128
  6161  002BD4  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6162  002BD6  0E00               	movlw	0
  6163  002BD8  1A1E               	xorwf	___flge@ff2^0,f,c
  6164  002BDA  0E00               	movlw	0
  6165  002BDC  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6166  002BDE  0E00               	movlw	0
  6167  002BE0  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6168  002BE2  0E80               	movlw	128
  6169  002BE4  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6170  002BE6  501E               	movf	___flge@ff2^0,w,c
  6171  002BE8  5C1A               	subwf	___flge@ff1^0,w,c
  6172  002BEA  501F               	movf	(___flge@ff2+1)^0,w,c
  6173  002BEC  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6174  002BEE  5020               	movf	(___flge@ff2+2)^0,w,c
  6175  002BF0  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6176  002BF2  5021               	movf	(___flge@ff2+3)^0,w,c
  6177  002BF4  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6178  002BF6  B0D8               	btfsc	status,0,c
  6179  002BF8  EF00  F016         	goto	u3381
  6180  002BFC  EF02  F016         	goto	u3380
  6181  002C00                     u3381:
  6182  002C00  EF05  F016         	goto	l3149
  6183  002C04                     u3380:
  6184  002C04  90D8               	bcf	status,0,c
  6185  002C06  EF06  F016         	goto	l363
  6186  002C0A                     l3149:
  6187  002C0A  80D8               	bsf	status,0,c
  6188  002C0C                     l363:
  6189  002C0C  0012               	return		;funcret
  6190  002C0E                     __end_of___flge:
  6191                           	callstack 0
  6192                           
  6193 ;; *************** function ___fleq *****************
  6194 ;; Defined at:
  6195 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  ff1             4    0[COMRAM] unsigned char 
  6198 ;;  ff2             4    4[COMRAM] unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;		None               void
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         8       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6213 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:       12 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_efgtoa
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text22
  6224  00319C                     __ptext22:
  6225                           	callstack 0
  6226  00319C                     ___fleq:
  6227                           	callstack 26
  6228  00319C  0E00               	movlw	0
  6229  00319E  1401               	andwf	___fleq@ff1^0,w,c
  6230  0031A0  6E09               	movwf	??___fleq^0,c
  6231  0031A2  0E00               	movlw	0
  6232  0031A4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6233  0031A6  6E0A               	movwf	(??___fleq+1)^0,c
  6234  0031A8  0E80               	movlw	128
  6235  0031AA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6236  0031AC  6E0B               	movwf	(??___fleq+2)^0,c
  6237  0031AE  0E7F               	movlw	127
  6238  0031B0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6239  0031B2  6E0C               	movwf	(??___fleq+3)^0,c
  6240  0031B4  5009               	movf	??___fleq^0,w,c
  6241  0031B6  100A               	iorwf	(??___fleq+1)^0,w,c
  6242  0031B8  100B               	iorwf	(??___fleq+2)^0,w,c
  6243  0031BA  100C               	iorwf	(??___fleq+3)^0,w,c
  6244  0031BC  A4D8               	btfss	status,2,c
  6245  0031BE  EFE3  F018         	goto	u3311
  6246  0031C2  EFE5  F018         	goto	u3310
  6247  0031C6                     u3311:
  6248  0031C6  EFED  F018         	goto	l3119
  6249  0031CA                     u3310:
  6250  0031CA  0E00               	movlw	0
  6251  0031CC  6E01               	movwf	___fleq@ff1^0,c
  6252  0031CE  0E00               	movlw	0
  6253  0031D0  6E02               	movwf	(___fleq@ff1+1)^0,c
  6254  0031D2  0E00               	movlw	0
  6255  0031D4  6E03               	movwf	(___fleq@ff1+2)^0,c
  6256  0031D6  0E00               	movlw	0
  6257  0031D8  6E04               	movwf	(___fleq@ff1+3)^0,c
  6258  0031DA                     l3119:
  6259  0031DA  0E00               	movlw	0
  6260  0031DC  1405               	andwf	___fleq@ff2^0,w,c
  6261  0031DE  6E09               	movwf	??___fleq^0,c
  6262  0031E0  0E00               	movlw	0
  6263  0031E2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6264  0031E4  6E0A               	movwf	(??___fleq+1)^0,c
  6265  0031E6  0E80               	movlw	128
  6266  0031E8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6267  0031EA  6E0B               	movwf	(??___fleq+2)^0,c
  6268  0031EC  0E7F               	movlw	127
  6269  0031EE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6270  0031F0  6E0C               	movwf	(??___fleq+3)^0,c
  6271  0031F2  5009               	movf	??___fleq^0,w,c
  6272  0031F4  100A               	iorwf	(??___fleq+1)^0,w,c
  6273  0031F6  100B               	iorwf	(??___fleq+2)^0,w,c
  6274  0031F8  100C               	iorwf	(??___fleq+3)^0,w,c
  6275  0031FA  A4D8               	btfss	status,2,c
  6276  0031FC  EF02  F019         	goto	u3321
  6277  003200  EF04  F019         	goto	u3320
  6278  003204                     u3321:
  6279  003204  EF0C  F019         	goto	l3123
  6280  003208                     u3320:
  6281  003208  0E00               	movlw	0
  6282  00320A  6E05               	movwf	___fleq@ff2^0,c
  6283  00320C  0E00               	movlw	0
  6284  00320E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6285  003210  0E00               	movlw	0
  6286  003212  6E07               	movwf	(___fleq@ff2+2)^0,c
  6287  003214  0E00               	movlw	0
  6288  003216  6E08               	movwf	(___fleq@ff2+3)^0,c
  6289  003218                     l3123:
  6290  003218  5005               	movf	___fleq@ff2^0,w,c
  6291  00321A  1801               	xorwf	___fleq@ff1^0,w,c
  6292  00321C  E10F               	bnz	u3330
  6293  00321E  5006               	movf	(___fleq@ff2+1)^0,w,c
  6294  003220  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6295  003222  E10C               	bnz	u3330
  6296  003224  5007               	movf	(___fleq@ff2+2)^0,w,c
  6297  003226  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6298  003228  E109               	bnz	u3330
  6299  00322A  5008               	movf	(___fleq@ff2+3)^0,w,c
  6300  00322C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6301  00322E  B4D8               	btfsc	status,2,c
  6302  003230  EF1C  F019         	goto	u3331
  6303  003234  EF1E  F019         	goto	u3330
  6304  003238                     u3331:
  6305  003238  EF21  F019         	goto	l3127
  6306  00323C                     u3330:
  6307  00323C  90D8               	bcf	status,0,c
  6308  00323E  EF22  F019         	goto	l352
  6309  003242                     l3127:
  6310  003242  80D8               	bsf	status,0,c
  6311  003244                     l352:
  6312  003244  0012               	return		;funcret
  6313  003246                     __end_of___fleq:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function ___awmod *****************
  6317 ;; Defined at:
  6318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  dividend        2    0[COMRAM] int 
  6321 ;;  divisor         2    2[COMRAM] int 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  sign            1    5[COMRAM] unsigned char 
  6324 ;;  counter         1    4[COMRAM] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  2    0[COMRAM] int 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6334 ;;      Params:         4       0       0       0       0       0       0       0       0
  6335 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6337 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6338 ;;Total ram usage:        6 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_efgtoa
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text23
  6348  0030EC                     __ptext23:
  6349                           	callstack 0
  6350  0030EC                     ___awmod:
  6351                           	callstack 26
  6352  0030EC  0E00               	movlw	0
  6353  0030EE  6E06               	movwf	___awmod@sign^0,c
  6354  0030F0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6355  0030F2  EF7F  F018         	goto	u3250
  6356  0030F6  EF7D  F018         	goto	u3251
  6357  0030FA                     u3251:
  6358  0030FA  EF85  F018         	goto	l3087
  6359  0030FE                     u3250:
  6360  0030FE  6C01               	negf	___awmod@dividend^0,c
  6361  003100  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6362  003102  B0D8               	btfsc	status,0,c
  6363  003104  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6364  003106  0E01               	movlw	1
  6365  003108  6E06               	movwf	___awmod@sign^0,c
  6366  00310A                     l3087:
  6367  00310A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6368  00310C  EF8C  F018         	goto	u3260
  6369  003110  EF8A  F018         	goto	u3261
  6370  003114                     u3261:
  6371  003114  EF90  F018         	goto	l3091
  6372  003118                     u3260:
  6373  003118  6C03               	negf	___awmod@divisor^0,c
  6374  00311A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6375  00311C  B0D8               	btfsc	status,0,c
  6376  00311E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6377  003120                     l3091:
  6378  003120  5003               	movf	___awmod@divisor^0,w,c
  6379  003122  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6380  003124  B4D8               	btfsc	status,2,c
  6381  003126  EF97  F018         	goto	u3271
  6382  00312A  EF99  F018         	goto	u3270
  6383  00312E                     u3271:
  6384  00312E  EFBD  F018         	goto	l3107
  6385  003132                     u3270:
  6386  003132  0E01               	movlw	1
  6387  003134  6E05               	movwf	___awmod@counter^0,c
  6388  003136  EFA1  F018         	goto	l3097
  6389  00313A                     l3095:
  6390  00313A  90D8               	bcf	status,0,c
  6391  00313C  3603               	rlcf	___awmod@divisor^0,f,c
  6392  00313E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6393  003140  2A05               	incf	___awmod@counter^0,f,c
  6394  003142                     l3097:
  6395  003142  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6396  003144  EFA6  F018         	goto	u3281
  6397  003148  EFA8  F018         	goto	u3280
  6398  00314C                     u3281:
  6399  00314C  EF9D  F018         	goto	l3095
  6400  003150                     u3280:
  6401  003150                     l3099:
  6402  003150  5003               	movf	___awmod@divisor^0,w,c
  6403  003152  5C01               	subwf	___awmod@dividend^0,w,c
  6404  003154  5004               	movf	(___awmod@divisor+1)^0,w,c
  6405  003156  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6406  003158  A0D8               	btfss	status,0,c
  6407  00315A  EFB1  F018         	goto	u3291
  6408  00315E  EFB3  F018         	goto	u3290
  6409  003162                     u3291:
  6410  003162  EFB7  F018         	goto	l3103
  6411  003166                     u3290:
  6412  003166  5003               	movf	___awmod@divisor^0,w,c
  6413  003168  5E01               	subwf	___awmod@dividend^0,f,c
  6414  00316A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6415  00316C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6416  00316E                     l3103:
  6417  00316E  90D8               	bcf	status,0,c
  6418  003170  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6419  003172  3203               	rrcf	___awmod@divisor^0,f,c
  6420  003174  2E05               	decfsz	___awmod@counter^0,f,c
  6421  003176  EFA8  F018         	goto	l3099
  6422  00317A                     l3107:
  6423  00317A  5006               	movf	___awmod@sign^0,w,c
  6424  00317C  B4D8               	btfsc	status,2,c
  6425  00317E  EFC3  F018         	goto	u3301
  6426  003182  EFC5  F018         	goto	u3300
  6427  003186                     u3301:
  6428  003186  EFC9  F018         	goto	l3111
  6429  00318A                     u3300:
  6430  00318A  6C01               	negf	___awmod@dividend^0,c
  6431  00318C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6432  00318E  B0D8               	btfsc	status,0,c
  6433  003190  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6434  003192                     l3111:
  6435  003192  C001  F001         	movff	___awmod@dividend,?___awmod
  6436  003196  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6437  00319A  0012               	return		;funcret
  6438  00319C                     __end_of___awmod:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function ___awdiv *****************
  6442 ;; Defined at:
  6443 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  dividend        2    0[COMRAM] int 
  6446 ;;  divisor         2    2[COMRAM] int 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  quotient        2    6[COMRAM] int 
  6449 ;;  sign            1    5[COMRAM] unsigned char 
  6450 ;;  counter         1    4[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  2    0[COMRAM] int 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6460 ;;      Params:         4       0       0       0       0       0       0       0       0
  6461 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6463 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6464 ;;Total ram usage:        8 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_efgtoa
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text24
  6474  002F72                     __ptext24:
  6475                           	callstack 0
  6476  002F72                     ___awdiv:
  6477                           	callstack 26
  6478  002F72  0E00               	movlw	0
  6479  002F74  6E06               	movwf	___awdiv@sign^0,c
  6480  002F76  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6481  002F78  EFC2  F017         	goto	u3190
  6482  002F7C  EFC0  F017         	goto	u3191
  6483  002F80                     u3191:
  6484  002F80  EFC8  F017         	goto	l3043
  6485  002F84                     u3190:
  6486  002F84  6C03               	negf	___awdiv@divisor^0,c
  6487  002F86  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6488  002F88  B0D8               	btfsc	status,0,c
  6489  002F8A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6490  002F8C  0E01               	movlw	1
  6491  002F8E  6E06               	movwf	___awdiv@sign^0,c
  6492  002F90                     l3043:
  6493  002F90  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6494  002F92  EFCF  F017         	goto	u3200
  6495  002F96  EFCD  F017         	goto	u3201
  6496  002F9A                     u3201:
  6497  002F9A  EFD5  F017         	goto	l3049
  6498  002F9E                     u3200:
  6499  002F9E  6C01               	negf	___awdiv@dividend^0,c
  6500  002FA0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6501  002FA2  B0D8               	btfsc	status,0,c
  6502  002FA4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6503  002FA6  0E01               	movlw	1
  6504  002FA8  1A06               	xorwf	___awdiv@sign^0,f,c
  6505  002FAA                     l3049:
  6506  002FAA  0E00               	movlw	0
  6507  002FAC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6508  002FAE  0E00               	movlw	0
  6509  002FB0  6E07               	movwf	___awdiv@quotient^0,c
  6510  002FB2  5003               	movf	___awdiv@divisor^0,w,c
  6511  002FB4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6512  002FB6  B4D8               	btfsc	status,2,c
  6513  002FB8  EFE0  F017         	goto	u3211
  6514  002FBC  EFE2  F017         	goto	u3210
  6515  002FC0                     u3211:
  6516  002FC0  EF0A  F018         	goto	l3071
  6517  002FC4                     u3210:
  6518  002FC4  0E01               	movlw	1
  6519  002FC6  6E05               	movwf	___awdiv@counter^0,c
  6520  002FC8  EFEA  F017         	goto	l3057
  6521  002FCC                     l3055:
  6522  002FCC  90D8               	bcf	status,0,c
  6523  002FCE  3603               	rlcf	___awdiv@divisor^0,f,c
  6524  002FD0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6525  002FD2  2A05               	incf	___awdiv@counter^0,f,c
  6526  002FD4                     l3057:
  6527  002FD4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6528  002FD6  EFEF  F017         	goto	u3221
  6529  002FDA  EFF1  F017         	goto	u3220
  6530  002FDE                     u3221:
  6531  002FDE  EFE6  F017         	goto	l3055
  6532  002FE2                     u3220:
  6533  002FE2                     l3059:
  6534  002FE2  90D8               	bcf	status,0,c
  6535  002FE4  3607               	rlcf	___awdiv@quotient^0,f,c
  6536  002FE6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6537  002FE8  5003               	movf	___awdiv@divisor^0,w,c
  6538  002FEA  5C01               	subwf	___awdiv@dividend^0,w,c
  6539  002FEC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6540  002FEE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6541  002FF0  A0D8               	btfss	status,0,c
  6542  002FF2  EFFD  F017         	goto	u3231
  6543  002FF6  EFFF  F017         	goto	u3230
  6544  002FFA                     u3231:
  6545  002FFA  EF04  F018         	goto	l3067
  6546  002FFE                     u3230:
  6547  002FFE  5003               	movf	___awdiv@divisor^0,w,c
  6548  003000  5E01               	subwf	___awdiv@dividend^0,f,c
  6549  003002  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6550  003004  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6551  003006  8007               	bsf	___awdiv@quotient^0,0,c
  6552  003008                     l3067:
  6553  003008  90D8               	bcf	status,0,c
  6554  00300A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6555  00300C  3203               	rrcf	___awdiv@divisor^0,f,c
  6556  00300E  2E05               	decfsz	___awdiv@counter^0,f,c
  6557  003010  EFF1  F017         	goto	l3059
  6558  003014                     l3071:
  6559  003014  5006               	movf	___awdiv@sign^0,w,c
  6560  003016  B4D8               	btfsc	status,2,c
  6561  003018  EF10  F018         	goto	u3241
  6562  00301C  EF12  F018         	goto	u3240
  6563  003020                     u3241:
  6564  003020  EF16  F018         	goto	l3075
  6565  003024                     u3240:
  6566  003024  6C07               	negf	___awdiv@quotient^0,c
  6567  003026  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6568  003028  B0D8               	btfsc	status,0,c
  6569  00302A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6570  00302C                     l3075:
  6571  00302C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6572  003030  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6573  003034  0012               	return		;funcret
  6574  003036                     __end_of___awdiv:
  6575                           	callstack 0
  6576                           
  6577 ;; *************** function _atoi *****************
  6578 ;; Defined at:
  6579 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6582 ;;		 -> STR_2(5), 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;  n               2   15[COMRAM] int 
  6585 ;;  neg             2   13[COMRAM] int 
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  2    7[COMRAM] int 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6595 ;;      Params:         2       0       0       0       0       0       0       0       0
  6596 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6598 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6599 ;;Total ram usage:       10 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 1
  6602 ;; This function calls:
  6603 ;;		___wmul
  6604 ;;		_isdigit
  6605 ;;		_isspace
  6606 ;; This function is called by:
  6607 ;;		_vfpfcnvrt
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text25
  6612  0028AE                     __ptext25:
  6613                           	callstack 0
  6614  0028AE                     _atoi:
  6615                           	callstack 26
  6616  0028AE  0E00               	movlw	0
  6617  0028B0  6E11               	movwf	(atoi@n+1)^0,c
  6618  0028B2  0E00               	movlw	0
  6619  0028B4  6E10               	movwf	atoi@n^0,c
  6620  0028B6  0E00               	movlw	0
  6621  0028B8  6E0F               	movwf	(atoi@neg+1)^0,c
  6622  0028BA  0E00               	movlw	0
  6623  0028BC  6E0E               	movwf	atoi@neg^0,c
  6624  0028BE  EF63  F014         	goto	l3619
  6625  0028C2                     l3615:
  6626  0028C2  4A08               	infsnz	atoi@s^0,f,c
  6627  0028C4  2A09               	incf	(atoi@s+1)^0,f,c
  6628  0028C6                     l3619:
  6629  0028C6  C008  FFF6         	movff	atoi@s,tblptrl
  6630  0028CA  C009  FFF7         	movff	atoi@s+1,tblptrh
  6631  0028CE                     	if	0	;tblptru may be non-zero
  6632  0028CE                     	endif
  6633  0028CE                     	if	0	;tblptru may be non-zero
  6634  0028CE                     	endif
  6635  0028CE  0008               	tblrd		*
  6636  0028D0  50F5               	movf	tablat,w,c
  6637  0028D2  0A20               	xorlw	32
  6638  0028D4  B4D8               	btfsc	status,2,c
  6639  0028D6  EF6F  F014         	goto	u4231
  6640  0028DA  EF71  F014         	goto	u4230
  6641  0028DE                     u4231:
  6642  0028DE  EF61  F014         	goto	l3615
  6643  0028E2                     u4230:
  6644  0028E2  0EF7               	movlw	247
  6645  0028E4  6E0A               	movwf	??_atoi^0,c
  6646  0028E6  0EFF               	movlw	255
  6647  0028E8  6E0B               	movwf	(??_atoi+1)^0,c
  6648  0028EA  C008  FFF6         	movff	atoi@s,tblptrl
  6649  0028EE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6650  0028F2                     	if	0	;tblptru may be non-zero
  6651  0028F2                     	endif
  6652  0028F2                     	if	0	;tblptru may be non-zero
  6653  0028F2                     	endif
  6654  0028F2  0008               	tblrd		*
  6655  0028F4  50F5               	movf	tablat,w,c
  6656  0028F6  6E0C               	movwf	(??_atoi+2)^0,c
  6657  0028F8  6A0D               	clrf	(??_atoi+3)^0,c
  6658  0028FA  500A               	movf	??_atoi^0,w,c
  6659  0028FC  260C               	addwf	(??_atoi+2)^0,f,c
  6660  0028FE  500B               	movf	(??_atoi+1)^0,w,c
  6661  002900  220D               	addwfc	(??_atoi+3)^0,f,c
  6662  002902  500D               	movf	(??_atoi+3)^0,w,c
  6663  002904  E109               	bnz	u4240
  6664  002906  0E05               	movlw	5
  6665  002908  5C0C               	subwf	(??_atoi+2)^0,w,c
  6666  00290A  A0D8               	btfss	status,0,c
  6667  00290C  EF8A  F014         	goto	u4241
  6668  002910  EF8C  F014         	goto	u4240
  6669  002914                     u4241:
  6670  002914  EF61  F014         	goto	l3615
  6671  002918                     u4240:
  6672  002918  EF96  F014         	goto	l3627
  6673  00291C                     l3623:
  6674  00291C  0E00               	movlw	0
  6675  00291E  6E0F               	movwf	(atoi@neg+1)^0,c
  6676  002920  0E01               	movlw	1
  6677  002922  6E0E               	movwf	atoi@neg^0,c
  6678  002924                     l3625:
  6679  002924  4A08               	infsnz	atoi@s^0,f,c
  6680  002926  2A09               	incf	(atoi@s+1)^0,f,c
  6681  002928  EFCB  F014         	goto	l3635
  6682  00292C                     l3627:
  6683  00292C  C008  FFF6         	movff	atoi@s,tblptrl
  6684  002930  C009  FFF7         	movff	atoi@s+1,tblptrh
  6685  002934                     	if	0	;tblptru may be non-zero
  6686  002934                     	endif
  6687  002934                     	if	0	;tblptru may be non-zero
  6688  002934                     	endif
  6689  002934  0008               	tblrd		*
  6690  002936  50F5               	movf	tablat,w,c
  6691  002938  6E0A               	movwf	??_atoi^0,c
  6692  00293A  6A0B               	clrf	(??_atoi+1)^0,c
  6693                           
  6694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6695                           ; Switch size 1, requested type "simple"
  6696                           ; Number of cases is 1, Range of values is 0 to 0
  6697                           ; switch strategies available:
  6698                           ; Name         Instructions Cycles
  6699                           ; simple_byte            4     3 (average)
  6700                           ;	Chosen strategy is simple_byte
  6701  00293C  500B               	movf	(??_atoi+1)^0,w,c
  6702  00293E  0A00               	xorlw	0	; case 0
  6703  002940  B4D8               	btfsc	status,2,c
  6704  002942  EFA5  F014         	goto	l3977
  6705  002946  EFCB  F014         	goto	l3635
  6706  00294A                     l3977:
  6707                           
  6708                           ; Switch size 1, requested type "simple"
  6709                           ; Number of cases is 2, Range of values is 43 to 45
  6710                           ; switch strategies available:
  6711                           ; Name         Instructions Cycles
  6712                           ; simple_byte            7     4 (average)
  6713                           ;	Chosen strategy is simple_byte
  6714  00294A  500A               	movf	??_atoi^0,w,c
  6715  00294C  0A2B               	xorlw	43	; case 43
  6716  00294E  B4D8               	btfsc	status,2,c
  6717  002950  EF92  F014         	goto	l3625
  6718  002954  0A06               	xorlw	6	; case 45
  6719  002956  B4D8               	btfsc	status,2,c
  6720  002958  EF8E  F014         	goto	l3623
  6721  00295C  EFCB  F014         	goto	l3635
  6722  002960                     l3629:
  6723  002960  C010  F001         	movff	atoi@n,___wmul@multiplier
  6724  002964  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6725  002968  0E00               	movlw	0
  6726  00296A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6727  00296C  0E0A               	movlw	10
  6728  00296E  6E03               	movwf	___wmul@multiplicand^0,c
  6729  002970  ECB2  F01B         	call	___wmul	;wreg free
  6730  002974  C008  FFF6         	movff	atoi@s,tblptrl
  6731  002978  C009  FFF7         	movff	atoi@s+1,tblptrh
  6732  00297C                     	if	0	;tblptru may be non-zero
  6733  00297C                     	endif
  6734  00297C                     	if	0	;tblptru may be non-zero
  6735  00297C                     	endif
  6736  00297C  0008               	tblrd		*
  6737  00297E  50F5               	movf	tablat,w,c
  6738  002980  5E01               	subwf	?___wmul^0,f,c
  6739  002982  0E00               	movlw	0
  6740  002984  5A02               	subwfb	(?___wmul+1)^0,f,c
  6741  002986  0E30               	movlw	48
  6742  002988  2401               	addwf	?___wmul^0,w,c
  6743  00298A  6E10               	movwf	atoi@n^0,c
  6744  00298C  0E00               	movlw	0
  6745  00298E  2002               	addwfc	(?___wmul+1)^0,w,c
  6746  002990  6E11               	movwf	(atoi@n+1)^0,c
  6747  002992  EF92  F014         	goto	l3625
  6748  002996                     l3635:
  6749  002996  0ED0               	movlw	208
  6750  002998  6E0A               	movwf	??_atoi^0,c
  6751  00299A  0EFF               	movlw	255
  6752  00299C  6E0B               	movwf	(??_atoi+1)^0,c
  6753  00299E  C008  FFF6         	movff	atoi@s,tblptrl
  6754  0029A2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6755  0029A6                     	if	0	;tblptru may be non-zero
  6756  0029A6                     	endif
  6757  0029A6                     	if	0	;tblptru may be non-zero
  6758  0029A6                     	endif
  6759  0029A6  0008               	tblrd		*
  6760  0029A8  50F5               	movf	tablat,w,c
  6761  0029AA  6E0C               	movwf	(??_atoi+2)^0,c
  6762  0029AC  6A0D               	clrf	(??_atoi+3)^0,c
  6763  0029AE  500A               	movf	??_atoi^0,w,c
  6764  0029B0  260C               	addwf	(??_atoi+2)^0,f,c
  6765  0029B2  500B               	movf	(??_atoi+1)^0,w,c
  6766  0029B4  220D               	addwfc	(??_atoi+3)^0,f,c
  6767  0029B6  500D               	movf	(??_atoi+3)^0,w,c
  6768  0029B8  E109               	bnz	u4250
  6769  0029BA  0E0A               	movlw	10
  6770  0029BC  5C0C               	subwf	(??_atoi+2)^0,w,c
  6771  0029BE  A0D8               	btfss	status,0,c
  6772  0029C0  EFE4  F014         	goto	u4251
  6773  0029C4  EFE6  F014         	goto	u4250
  6774  0029C8                     u4251:
  6775  0029C8  EFB0  F014         	goto	l3629
  6776  0029CC                     u4250:
  6777  0029CC  500E               	movf	atoi@neg^0,w,c
  6778  0029CE  100F               	iorwf	(atoi@neg+1)^0,w,c
  6779  0029D0  A4D8               	btfss	status,2,c
  6780  0029D2  EFED  F014         	goto	u4261
  6781  0029D6  EFEF  F014         	goto	u4260
  6782  0029DA                     u4261:
  6783  0029DA  EFFD  F014         	goto	l964
  6784  0029DE                     u4260:
  6785  0029DE  C010  F00A         	movff	atoi@n,??_atoi
  6786  0029E2  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6787  0029E6  1E0A               	comf	??_atoi^0,f,c
  6788  0029E8  1E0B               	comf	(??_atoi+1)^0,f,c
  6789  0029EA  4A0A               	infsnz	??_atoi^0,f,c
  6790  0029EC  2A0B               	incf	(??_atoi+1)^0,f,c
  6791  0029EE  C00A  F008         	movff	??_atoi,?_atoi
  6792  0029F2  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6793  0029F6  EF01  F015         	goto	l967
  6794  0029FA                     l964:
  6795  0029FA  C010  F008         	movff	atoi@n,?_atoi
  6796  0029FE  C011  F009         	movff	atoi@n+1,?_atoi+1
  6797  002A02                     l967:
  6798  002A02  0012               	return		;funcret
  6799  002A04                     __end_of_atoi:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _isspace *****************
  6803 ;; Defined at:
  6804 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  c               2    0[COMRAM] int 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  2    0[COMRAM] int 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6818 ;;      Params:         2       0       0       0       0       0       0       0       0
  6819 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6820 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6821 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6822 ;;Total ram usage:        7 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_atoi
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text26
  6832  00349E                     __ptext26:
  6833                           	callstack 0
  6834  00349E                     _isspace:
  6835                           	callstack 26
  6836  00349E  0E01               	movlw	1
  6837  0034A0  6E07               	movwf	_isspace$757^0,c
  6838  0034A2  0E20               	movlw	32
  6839  0034A4  1801               	xorwf	isspace@c^0,w,c
  6840  0034A6  1002               	iorwf	(isspace@c+1)^0,w,c
  6841  0034A8  B4D8               	btfsc	status,2,c
  6842  0034AA  EF59  F01A         	goto	u3731
  6843  0034AE  EF5B  F01A         	goto	u3730
  6844  0034B2                     u3731:
  6845  0034B2  EF74  F01A         	goto	l3303
  6846  0034B6                     u3730:
  6847  0034B6  0EF7               	movlw	247
  6848  0034B8  6E03               	movwf	??_isspace^0,c
  6849  0034BA  0EFF               	movlw	255
  6850  0034BC  6E04               	movwf	(??_isspace+1)^0,c
  6851  0034BE  C001  F005         	movff	isspace@c,??_isspace+2
  6852  0034C2  C002  F006         	movff	isspace@c+1,??_isspace+3
  6853  0034C6  5003               	movf	??_isspace^0,w,c
  6854  0034C8  2605               	addwf	(??_isspace+2)^0,f,c
  6855  0034CA  5004               	movf	(??_isspace+1)^0,w,c
  6856  0034CC  2206               	addwfc	(??_isspace+3)^0,f,c
  6857  0034CE  5006               	movf	(??_isspace+3)^0,w,c
  6858  0034D0  E109               	bnz	u3740
  6859  0034D2  0E05               	movlw	5
  6860  0034D4  5C05               	subwf	(??_isspace+2)^0,w,c
  6861  0034D6  A0D8               	btfss	status,0,c
  6862  0034D8  EF70  F01A         	goto	u3741
  6863  0034DC  EF72  F01A         	goto	u3740
  6864  0034E0                     u3741:
  6865  0034E0  EF74  F01A         	goto	l3303
  6866  0034E4                     u3740:
  6867  0034E4  0E00               	movlw	0
  6868  0034E6  6E07               	movwf	_isspace$757^0,c
  6869  0034E8                     l3303:
  6870  0034E8  C007  F001         	movff	_isspace$757,?_isspace
  6871  0034EC  6A02               	clrf	(?_isspace+1)^0,c
  6872  0034EE  0012               	return		;funcret
  6873  0034F0                     __end_of_isspace:
  6874                           	callstack 0
  6875                           
  6876 ;; *************** function _isdigit *****************
  6877 ;; Defined at:
  6878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  c               2    0[COMRAM] int 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2    0[COMRAM] int 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6892 ;;      Params:         2       0       0       0       0       0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6894 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6895 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6896 ;;Total ram usage:        6 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_vfpfcnvrt
  6902 ;;		_atoi
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text27
  6907  0036C2                     __ptext27:
  6908                           	callstack 0
  6909  0036C2                     _isdigit:
  6910                           	callstack 27
  6911  0036C2  0ED0               	movlw	208
  6912  0036C4  6E03               	movwf	??_isdigit^0,c
  6913  0036C6  0EFF               	movlw	255
  6914  0036C8  6E04               	movwf	(??_isdigit+1)^0,c
  6915  0036CA  C001  F005         	movff	isdigit@c,??_isdigit+2
  6916  0036CE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6917  0036D2  5003               	movf	??_isdigit^0,w,c
  6918  0036D4  2605               	addwf	(??_isdigit+2)^0,f,c
  6919  0036D6  5004               	movf	(??_isdigit+1)^0,w,c
  6920  0036D8  2206               	addwfc	(??_isdigit+3)^0,f,c
  6921  0036DA  5006               	movf	(??_isdigit+3)^0,w,c
  6922  0036DC  E10A               	bnz	u3710
  6923  0036DE  0E0A               	movlw	10
  6924  0036E0  5C05               	subwf	(??_isdigit+2)^0,w,c
  6925  0036E2  A0D8               	btfss	status,0,c
  6926  0036E4  EF76  F01B         	goto	u3711
  6927  0036E8  EF79  F01B         	goto	u3710
  6928  0036EC                     u3711:
  6929  0036EC  0E01               	movlw	1
  6930  0036EE  EF7A  F01B         	goto	u3720
  6931  0036F2                     u3710:
  6932  0036F2  0E00               	movlw	0
  6933  0036F4                     u3720:
  6934  0036F4  6E01               	movwf	?_isdigit^0,c
  6935  0036F6  6A02               	clrf	(?_isdigit+1)^0,c
  6936  0036F8  0012               	return		;funcret
  6937  0036FA                     __end_of_isdigit:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function ___wmul *****************
  6941 ;; Defined at:
  6942 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  multiplier      2    0[COMRAM] unsigned int 
  6945 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  product         2    4[COMRAM] unsigned int 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  2    0[COMRAM] unsigned int 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, prodl, prodh
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6957 ;;      Params:         4       0       0       0       0       0       0       0       0
  6958 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6960 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6961 ;;Total ram usage:        6 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_atoi
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text28
  6971  003764                     __ptext28:
  6972                           	callstack 0
  6973  003764                     ___wmul:
  6974                           	callstack 26
  6975  003764  5001               	movf	___wmul@multiplier^0,w,c
  6976  003766  0203               	mulwf	___wmul@multiplicand^0,c
  6977  003768  CFF3 F005          	movff	prodl,___wmul@product
  6978  00376C  CFF4 F006          	movff	prodh,___wmul@product+1
  6979  003770  5001               	movf	___wmul@multiplier^0,w,c
  6980  003772  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6981  003774  50F3               	movf	243,w,c
  6982  003776  2606               	addwf	(___wmul@product+1)^0,f,c
  6983  003778  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6984  00377A  0203               	mulwf	___wmul@multiplicand^0,c
  6985  00377C  50F3               	movf	243,w,c
  6986  00377E  2606               	addwf	(___wmul@product+1)^0,f,c
  6987  003780  C005  F001         	movff	___wmul@product,?___wmul
  6988  003784  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6989  003788  0012               	return		;funcret
  6990  00378A                     __end_of___wmul:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _LCD_setCursor *****************
  6994 ;; Defined at:
  6995 ;;		line 51 in file "../Frecuenciometro_digital.X/LCD_4bits.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  x               1    wreg     unsigned char 
  6998 ;;  y               1    2[COMRAM] unsigned char 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  x               1    5[COMRAM] unsigned char 
  7001 ;;  location        1    6[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7011 ;;      Params:         1       0       0       0       0       0       0       0       0
  7012 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7013 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7014 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7015 ;;Total ram usage:        5 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 1
  7018 ;; This function calls:
  7019 ;;		_LCD_Command
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text29
  7026  0033F6                     __ptext29:
  7027                           	callstack 0
  7028  0033F6                     _LCD_setCursor:
  7029                           	callstack 29
  7030                           
  7031                           ;incstack = 0
  7032                           ;LCD_setCursor@x stored from wreg
  7033  0033F6  6E06               	movwf	LCD_setCursor@x^0,c
  7034  0033F8                     
  7035                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 53:     switch(y){
  7036  0033F8  EF10  F01A         	goto	l3873
  7037  0033FC                     l3863:
  7038                           
  7039                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 56:         location=(0x80)|((x)&0x0F);
  7040  0033FC  5006               	movf	LCD_setCursor@x^0,w,c
  7041  0033FE  0B0F               	andlw	15
  7042  003400  0980               	iorlw	128
  7043  003402  6E07               	movwf	LCD_setCursor@location^0,c
  7044  003404                     
  7045                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 57:         LCD_Command(location);
  7046  003404  5007               	movf	LCD_setCursor@location^0,w,c
  7047  003406  EC78  F01A         	call	_LCD_Command
  7048                           
  7049                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 58:         break;
  7050  00340A  EF25  F01A         	goto	l35
  7051  00340E                     l3867:
  7052                           
  7053                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 61:         location=(0xC0)|((x)&0x0F);
  7054  00340E  5006               	movf	LCD_setCursor@x^0,w,c
  7055  003410  0B0F               	andlw	15
  7056  003412  09C0               	iorlw	192
  7057  003414  6E07               	movwf	LCD_setCursor@location^0,c
  7058  003416                     
  7059                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 62:         LCD_Command(location);
  7060  003416  5007               	movf	LCD_setCursor@location^0,w,c
  7061  003418  EC78  F01A         	call	_LCD_Command
  7062                           
  7063                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 63:         break;
  7064  00341C  EF25  F01A         	goto	l35
  7065  003420                     l3873:
  7066  003420  5003               	movf	LCD_setCursor@y^0,w,c
  7067  003422  6E04               	movwf	??_LCD_setCursor^0,c
  7068  003424  6A05               	clrf	(??_LCD_setCursor+1)^0,c
  7069                           
  7070                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7071                           ; Switch size 1, requested type "simple"
  7072                           ; Number of cases is 1, Range of values is 0 to 0
  7073                           ; switch strategies available:
  7074                           ; Name         Instructions Cycles
  7075                           ; simple_byte            4     3 (average)
  7076                           ;	Chosen strategy is simple_byte
  7077  003426  5005               	movf	(??_LCD_setCursor+1)^0,w,c
  7078  003428  0A00               	xorlw	0	; case 0
  7079  00342A  B4D8               	btfsc	status,2,c
  7080  00342C  EF1A  F01A         	goto	l3979
  7081  003430  EF25  F01A         	goto	l35
  7082  003434                     l3979:
  7083                           
  7084                           ; Switch size 1, requested type "simple"
  7085                           ; Number of cases is 2, Range of values is 0 to 1
  7086                           ; switch strategies available:
  7087                           ; Name         Instructions Cycles
  7088                           ; simple_byte            7     4 (average)
  7089                           ;	Chosen strategy is simple_byte
  7090  003434  5004               	movf	??_LCD_setCursor^0,w,c
  7091  003436  0A00               	xorlw	0	; case 0
  7092  003438  B4D8               	btfsc	status,2,c
  7093  00343A  EFFE  F019         	goto	l3863
  7094  00343E  0A01               	xorlw	1	; case 1
  7095  003440  B4D8               	btfsc	status,2,c
  7096  003442  EF07  F01A         	goto	l3867
  7097  003446  EF25  F01A         	goto	l35
  7098  00344A                     l35:
  7099  00344A  0012               	return		;funcret
  7100  00344C                     __end_of_LCD_setCursor:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _LCD_Print *****************
  7104 ;; Defined at:
  7105 ;;		line 45 in file "../Frecuenciometro_digital.X/LCD_4bits.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  str             2    2[COMRAM] PTR const unsigned char 
  7108 ;;		 -> main@buffer(16), STR_1(16), 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      void 
  7113 ;; Registers used:
  7114 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7120 ;;      Params:         2       0       0       0       0       0       0       0       0
  7121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7123 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7124 ;;Total ram usage:        2 bytes
  7125 ;; Hardware stack levels used: 1
  7126 ;; Hardware stack levels required when called: 1
  7127 ;; This function calls:
  7128 ;;		_LCD_Char
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text30
  7135  00333C                     __ptext30:
  7136                           	callstack 0
  7137  00333C                     _LCD_Print:
  7138                           	callstack 29
  7139  00333C                     
  7140                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 46:     while((*str)!=0){
  7141  00333C  EFB4  F019         	goto	l3859
  7142  003340                     l3855:
  7143                           
  7144                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 47:         LCD_Char(*str);
  7145  003340  C003  FFF6         	movff	LCD_Print@str,tblptrl
  7146  003344  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  7147  003348  6AF8               	clrf	tblptru,c
  7148  00334A  0E07               	movlw	(high __ramtop+-1)
  7149  00334C  64F7               	cpfsgt	tblptrh,c
  7150  00334E  D003               	bra	u4537
  7151  003350  0008               	tblrd		*
  7152  003352  50F5               	movf	tablat,w,c
  7153  003354  D005               	bra	u4530
  7154  003356                     u4537:
  7155  003356  CFF6 FFE1          	movff	tblptrl,fsr1l
  7156  00335A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7157  00335E  50E7               	movf	indf1,w,c
  7158  003360                     u4530:
  7159  003360  EC08  F01B         	call	_LCD_Char
  7160  003364                     
  7161                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 48:         str++;
  7162  003364  4A03               	infsnz	LCD_Print@str^0,f,c
  7163  003366  2A04               	incf	(LCD_Print@str+1)^0,f,c
  7164  003368                     l3859:
  7165                           
  7166                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 46:     while((*str)!=0){
  7167  003368  C003  FFF6         	movff	LCD_Print@str,tblptrl
  7168  00336C  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  7169  003370  6AF8               	clrf	tblptru,c
  7170  003372  0E07               	movlw	(high __ramtop+-1)
  7171  003374  64F7               	cpfsgt	tblptrh,c
  7172  003376  D003               	bra	u4547
  7173  003378  0008               	tblrd		*
  7174  00337A  50F5               	movf	tablat,w,c
  7175  00337C  D005               	bra	u4540
  7176  00337E                     u4547:
  7177  00337E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7178  003382  CFF7 FFE2          	movff	tblptrh,fsr1h
  7179  003386  50E7               	movf	indf1,w,c
  7180  003388                     u4540:
  7181  003388  0900               	iorlw	0
  7182  00338A  A4D8               	btfss	status,2,c
  7183  00338C  EFCA  F019         	goto	u4551
  7184  003390  EFCC  F019         	goto	u4550
  7185  003394                     u4551:
  7186  003394  EFA0  F019         	goto	l3855
  7187  003398                     u4550:
  7188  003398  0012               	return		;funcret
  7189  00339A                     __end_of_LCD_Print:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _LCD_Char *****************
  7193 ;; Defined at:
  7194 ;;		line 33 in file "../Frecuenciometro_digital.X/LCD_4bits.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  x               1    wreg     unsigned char 
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;  x               1    1[COMRAM] unsigned char 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7208 ;;      Params:         0       0       0       0       0       0       0       0       0
  7209 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7210 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7211 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7212 ;;Total ram usage:        2 bytes
  7213 ;; Hardware stack levels used: 1
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_LCD_Print
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text31
  7222  003610                     __ptext31:
  7223                           	callstack 0
  7224  003610                     _LCD_Char:
  7225                           	callstack 29
  7226                           
  7227                           ;incstack = 0
  7228                           ;LCD_Char@x stored from wreg
  7229  003610  6E02               	movwf	LCD_Char@x^0,c
  7230  003612                     
  7231                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 34:     LATD = (LATD & 0x0F)|(x & 0xF0);
  7232  003612  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  7233  003616  0EF0               	movlw	240
  7234  003618  1601               	andwf	??_LCD_Char^0,f,c
  7235  00361A  508C               	movf	140,w,c	;volatile
  7236  00361C  0B0F               	andlw	15
  7237  00361E  1001               	iorwf	??_LCD_Char^0,w,c
  7238  003620  6E8C               	movwf	140,c	;volatile
  7239  003622                     
  7240                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 35:     LATD |=(1<<2);
  7241  003622  848C               	bsf	140,2,c	;volatile
  7242  003624                     
  7243                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 36:     LATD |=(1<<3);
  7244  003624  868C               	bsf	140,3,c	;volatile
  7245  003626                     
  7246                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 37:     __nop();
  7247  003626  F000               	nop	
  7248  003628                     
  7249                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 38:     LATD &=~(1<<3);
  7250  003628  968C               	bcf	140,3,c	;volatile
  7251  00362A                     
  7252                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 39:     LATD = (LATD & 0x0F)|(x<<4);
  7253  00362A  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  7254  00362E  3A01               	swapf	??_LCD_Char^0,f,c
  7255  003630  0EF0               	movlw	240
  7256  003632  1601               	andwf	??_LCD_Char^0,f,c
  7257  003634  508C               	movf	140,w,c	;volatile
  7258  003636  0B0F               	andlw	15
  7259  003638  1001               	iorwf	??_LCD_Char^0,w,c
  7260  00363A  6E8C               	movwf	140,c	;volatile
  7261                           
  7262                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 40:     LATD |=(1<<3);
  7263  00363C  868C               	bsf	140,3,c	;volatile
  7264  00363E                     
  7265                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 41:     __nop();
  7266  00363E  F000               	nop	
  7267                           
  7268                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 42:     LATD &=~(1<<3);
  7269  003640  968C               	bcf	140,3,c	;volatile
  7270  003642                     
  7271                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 43:     _delay((unsigned long)((3)*(8000000/4
      +                          000.0)));
  7272  003642  0E08               	movlw	8
  7273  003644  6E01               	movwf	??_LCD_Char^0,c
  7274  003646  0ECA               	movlw	202
  7275  003648                     u4607:
  7276  003648  2EE8               	decfsz	wreg,f,c
  7277  00364A  D7FE               	bra	u4607
  7278  00364C  2E01               	decfsz	??_LCD_Char^0,f,c
  7279  00364E  D7FC               	bra	u4607
  7280  003650  0012               	return		;funcret
  7281  003652                     __end_of_LCD_Char:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _LCD_Begin *****************
  7285 ;; Defined at:
  7286 ;;		line 4 in file "../Frecuenciometro_digital.X/LCD_4bits.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7302 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7304 ;;Total ram usage:        1 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 1
  7307 ;; This function calls:
  7308 ;;		_LCD_Command
  7309 ;; This function is called by:
  7310 ;;		_main
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text32
  7315  003730                     __ptext32:
  7316                           	callstack 0
  7317  003730                     _LCD_Begin:
  7318                           	callstack 29
  7319  003730                     
  7320                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 5:     _delay((unsigned long)((15)*(8000000/4
      +                          000.0)));
  7321  003730  0E27               	movlw	39
  7322  003732  6E03               	movwf	??_LCD_Begin^0,c
  7323  003734  0EF5               	movlw	245
  7324  003736                     u4617:
  7325  003736  2EE8               	decfsz	wreg,f,c
  7326  003738  D7FE               	bra	u4617
  7327  00373A  2E03               	decfsz	??_LCD_Begin^0,f,c
  7328  00373C  D7FC               	bra	u4617
  7329  00373E  F000               	nop	
  7330  003740                     
  7331                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 7:     TRISD &=~((1<<2)|(1<<3)|(0b11110000));
  7332  003740  0E03               	movlw	3
  7333  003742  1695               	andwf	149,f,c	;volatile
  7334  003744                     
  7335                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 8:     LCD_Command(0x02);
  7336  003744  0E02               	movlw	2
  7337  003746  EC78  F01A         	call	_LCD_Command
  7338  00374A                     
  7339                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 9:     LCD_Command(0x28);
  7340  00374A  0E28               	movlw	40
  7341  00374C  EC78  F01A         	call	_LCD_Command
  7342  003750                     
  7343                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 10:     LCD_Command(0x01);
  7344  003750  0E01               	movlw	1
  7345  003752  EC78  F01A         	call	_LCD_Command
  7346  003756                     
  7347                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 11:     LCD_Command(0x0C);
  7348  003756  0E0C               	movlw	12
  7349  003758  EC78  F01A         	call	_LCD_Command
  7350  00375C                     
  7351                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 12:     LCD_Command(0x06);
  7352  00375C  0E06               	movlw	6
  7353  00375E  EC78  F01A         	call	_LCD_Command
  7354  003762  0012               	return		;funcret
  7355  003764                     __end_of_LCD_Begin:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _LCD_Command *****************
  7359 ;; Defined at:
  7360 ;;		line 20 in file "../Frecuenciometro_digital.X/LCD_4bits.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  dat             1    wreg     unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  dat             1    1[COMRAM] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0
  7375 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7376 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7377 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7378 ;;Total ram usage:        2 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_LCD_Begin
  7384 ;;		_LCD_setCursor
  7385 ;;		_LCD_Clear
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text33
  7390  0034F0                     __ptext33:
  7391                           	callstack 0
  7392  0034F0                     _LCD_Command:
  7393                           	callstack 29
  7394                           
  7395                           ;incstack = 0
  7396                           ;LCD_Command@dat stored from wreg
  7397  0034F0  6E02               	movwf	LCD_Command@dat^0,c
  7398  0034F2                     
  7399                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 21:     LATD = (LATD & 0x0F)|(dat & 0xF0);
  7400  0034F2  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  7401  0034F6  0EF0               	movlw	240
  7402  0034F8  1601               	andwf	??_LCD_Command^0,f,c
  7403  0034FA  508C               	movf	140,w,c	;volatile
  7404  0034FC  0B0F               	andlw	15
  7405  0034FE  1001               	iorwf	??_LCD_Command^0,w,c
  7406  003500  6E8C               	movwf	140,c	;volatile
  7407  003502                     
  7408                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 22:     LATD &=~(1<<2);
  7409  003502  948C               	bcf	140,2,c	;volatile
  7410  003504                     
  7411                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 23:     LATD |=(1<<3);
  7412  003504  868C               	bsf	140,3,c	;volatile
  7413  003506                     
  7414                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 24:     __nop();
  7415  003506  F000               	nop	
  7416  003508                     
  7417                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 25:     LATD &=~(1<<3);
  7418  003508  968C               	bcf	140,3,c	;volatile
  7419                           
  7420                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 26:     _delay((unsigned long)((1)*(8000000/4
      +                          000.0)));
  7421  00350A  0E03               	movlw	3
  7422  00350C  6E01               	movwf	??_LCD_Command^0,c
  7423  00350E  0E98               	movlw	152
  7424  003510                     u4627:
  7425  003510  2EE8               	decfsz	wreg,f,c
  7426  003512  D7FE               	bra	u4627
  7427  003514  2E01               	decfsz	??_LCD_Command^0,f,c
  7428  003516  D7FC               	bra	u4627
  7429  003518                     
  7430                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 27:     LATD = (LATD & 0x0F)|(dat<<4);
  7431  003518  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  7432  00351C  3A01               	swapf	??_LCD_Command^0,f,c
  7433  00351E  0EF0               	movlw	240
  7434  003520  1601               	andwf	??_LCD_Command^0,f,c
  7435  003522  508C               	movf	140,w,c	;volatile
  7436  003524  0B0F               	andlw	15
  7437  003526  1001               	iorwf	??_LCD_Command^0,w,c
  7438  003528  6E8C               	movwf	140,c	;volatile
  7439                           
  7440                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 28:     LATD |=(1<<3);
  7441  00352A  868C               	bsf	140,3,c	;volatile
  7442  00352C                     
  7443                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 29:     __nop();
  7444  00352C  F000               	nop	
  7445                           
  7446                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 30:     LATD &=~(1<<3);
  7447  00352E  968C               	bcf	140,3,c	;volatile
  7448  003530                     
  7449                           ;../Frecuenciometro_digital.X/LCD_4bits.c: 31:     _delay((unsigned long)((3)*(8000000/4
      +                          000.0)));
  7450  003530  0E08               	movlw	8
  7451  003532  6E01               	movwf	??_LCD_Command^0,c
  7452  003534  0ECA               	movlw	202
  7453  003536                     u4637:
  7454  003536  2EE8               	decfsz	wreg,f,c
  7455  003538  D7FE               	bra	u4637
  7456  00353A  2E01               	decfsz	??_LCD_Command^0,f,c
  7457  00353C  D7FC               	bra	u4637
  7458  00353E  0012               	return		;funcret
  7459  003540                     __end_of_LCD_Command:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _Capture_read *****************
  7463 ;; Defined at:
  7464 ;;		line 53 in file "../Frecuenciometro_digital.X/main.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  data2           2   47[COMRAM] unsigned short 
  7469 ;;  data1           2   45[COMRAM] unsigned short 
  7470 ;;  conteo          2   43[COMRAM] unsigned short 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  4   39[COMRAM] float 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7480 ;;      Params:         4       0       0       0       0       0       0       0       0
  7481 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7483 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7484 ;;Total ram usage:       10 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; Hardware stack levels required when called: 1
  7487 ;; This function calls:
  7488 ;;		___fldiv
  7489 ;;		___xxtofl
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text34
  7496  003036                     __ptext34:
  7497                           	callstack 0
  7498  003036                     _Capture_read:
  7499                           	callstack 29
  7500  003036                     
  7501                           ;../Frecuenciometro_digital.X/main.c: 55:     uint16_t conteo,data1=0,data2=0;
  7502  003036  0E00               	movlw	0
  7503  003038  6E2F               	movwf	(Capture_read@data1+1)^0,c
  7504  00303A  0E00               	movlw	0
  7505  00303C  6E2E               	movwf	Capture_read@data1^0,c
  7506  00303E  0E00               	movlw	0
  7507  003040  6E31               	movwf	(Capture_read@data2+1)^0,c
  7508  003042  0E00               	movlw	0
  7509  003044  6E30               	movwf	Capture_read@data2^0,c
  7510                           
  7511                           ;../Frecuenciometro_digital.X/main.c: 57:     while(data1>=data2){
  7512  003046  EF3D  F018         	goto	l3891
  7513  00304A                     l83:
  7514  00304A  A49E               	btfss	3998,2,c	;volatile
  7515  00304C  EF2A  F018         	goto	u4561
  7516  003050  EF2C  F018         	goto	u4560
  7517  003054                     u4561:
  7518  003054  EF25  F018         	goto	l83
  7519  003058                     u4560:
  7520  003058                     
  7521                           ;../Frecuenciometro_digital.X/main.c: 59:         CCP1IF=0;
  7522  003058  949E               	bcf	3998,2,c	;volatile
  7523                           
  7524                           ;../Frecuenciometro_digital.X/main.c: 60:         data1=CCPR1;
  7525  00305A  CFBE F02E          	movff	4030,Capture_read@data1	;volatile
  7526  00305E  CFBF F02F          	movff	4031,Capture_read@data1+1	;volatile
  7527  003062                     l86:
  7528  003062  A49E               	btfss	3998,2,c	;volatile
  7529  003064  EF36  F018         	goto	u4571
  7530  003068  EF38  F018         	goto	u4570
  7531  00306C                     u4571:
  7532  00306C  EF31  F018         	goto	l86
  7533  003070                     u4570:
  7534  003070                     
  7535                           ;../Frecuenciometro_digital.X/main.c: 63:         CCP1IF=0;
  7536  003070  949E               	bcf	3998,2,c	;volatile
  7537                           
  7538                           ;../Frecuenciometro_digital.X/main.c: 64:         data2=CCPR1;
  7539  003072  CFBE F030          	movff	4030,Capture_read@data2	;volatile
  7540  003076  CFBF F031          	movff	4031,Capture_read@data2+1	;volatile
  7541  00307A                     l3891:
  7542                           
  7543                           ;../Frecuenciometro_digital.X/main.c: 57:     while(data1>=data2){
  7544  00307A  5030               	movf	Capture_read@data2^0,w,c
  7545  00307C  5C2E               	subwf	Capture_read@data1^0,w,c
  7546  00307E  5031               	movf	(Capture_read@data2+1)^0,w,c
  7547  003080  582F               	subwfb	(Capture_read@data1+1)^0,w,c
  7548  003082  B0D8               	btfsc	status,0,c
  7549  003084  EF46  F018         	goto	u4581
  7550  003088  EF48  F018         	goto	u4580
  7551  00308C                     u4581:
  7552  00308C  EF25  F018         	goto	l83
  7553  003090                     u4580:
  7554  003090                     
  7555                           ;../Frecuenciometro_digital.X/main.c: 66:     TMR1=0;
  7556  003090  0E00               	movlw	0
  7557  003092  6ECF               	movwf	207,c	;volatile
  7558  003094  0E00               	movlw	0
  7559  003096  6ECE               	movwf	206,c	;volatile
  7560  003098                     
  7561                           ;../Frecuenciometro_digital.X/main.c: 68:     conteo=data2-data1;
  7562  003098  502E               	movf	Capture_read@data1^0,w,c
  7563  00309A  5C30               	subwf	Capture_read@data2^0,w,c
  7564  00309C  6E2C               	movwf	Capture_read@conteo^0,c
  7565  00309E  502F               	movf	(Capture_read@data1+1)^0,w,c
  7566  0030A0  5831               	subwfb	(Capture_read@data2+1)^0,w,c
  7567  0030A2  6E2D               	movwf	(Capture_read@conteo+1)^0,c
  7568  0030A4                     
  7569                           ;../Frecuenciometro_digital.X/main.c: 70:     return ((float)2000000/(float)conteo);
  7570  0030A4  0E00               	movlw	0
  7571  0030A6  6E0F               	movwf	___fldiv@b^0,c
  7572  0030A8  0E24               	movlw	36
  7573  0030AA  6E10               	movwf	(___fldiv@b+1)^0,c
  7574  0030AC  0EF4               	movlw	244
  7575  0030AE  6E11               	movwf	(___fldiv@b+2)^0,c
  7576  0030B0  0E49               	movlw	73
  7577  0030B2  6E12               	movwf	(___fldiv@b+3)^0,c
  7578  0030B4  C02C  F001         	movff	Capture_read@conteo,___xxtofl@val
  7579  0030B8  C02D  F002         	movff	Capture_read@conteo+1,___xxtofl@val+1
  7580  0030BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  7581  0030BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  7582  0030C0  0E00               	movlw	0
  7583  0030C2  EC7D  F013         	call	___xxtofl
  7584  0030C6  C001  F013         	movff	?___xxtofl,___fldiv@a
  7585  0030CA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  7586  0030CE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  7587  0030D2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  7588  0030D6  ECA7  F010         	call	___fldiv	;wreg free
  7589  0030DA  C00F  F028         	movff	?___fldiv,?_Capture_read
  7590  0030DE  C010  F029         	movff	?___fldiv+1,?_Capture_read+1
  7591  0030E2  C011  F02A         	movff	?___fldiv+2,?_Capture_read+2
  7592  0030E6  C012  F02B         	movff	?___fldiv+3,?_Capture_read+3
  7593  0030EA  0012               	return		;funcret
  7594  0030EC                     __end_of_Capture_read:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function ___xxtofl *****************
  7598 ;; Defined at:
  7599 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  sign            1    wreg     unsigned char 
  7602 ;;  val             4    0[COMRAM] long 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  sign            1    8[COMRAM] unsigned char 
  7605 ;;  arg             4   10[COMRAM] unsigned long 
  7606 ;;  exp             1    9[COMRAM] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  4    0[COMRAM] unsigned char 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7616 ;;      Params:         4       0       0       0       0       0       0       0       0
  7617 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7618 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7619 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7620 ;;Total ram usage:       14 bytes
  7621 ;; Hardware stack levels used: 1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_Capture_read
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text35
  7630  0026FA                     __ptext35:
  7631                           	callstack 0
  7632  0026FA                     ___xxtofl:
  7633                           	callstack 29
  7634                           
  7635                           ;incstack = 0
  7636                           ;___xxtofl@sign stored from wreg
  7637  0026FA  6E09               	movwf	___xxtofl@sign^0,c
  7638  0026FC  5009               	movf	___xxtofl@sign^0,w,c
  7639  0026FE  B4D8               	btfsc	status,2,c
  7640  002700  EF84  F013         	goto	u4421
  7641  002704  EF86  F013         	goto	u4420
  7642  002708                     u4421:
  7643  002708  EFA8  F013         	goto	l748
  7644  00270C                     u4420:
  7645  00270C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7646  00270E  EF8D  F013         	goto	u4430
  7647  002712  EF8B  F013         	goto	u4431
  7648  002716                     u4431:
  7649  002716  EFA8  F013         	goto	l748
  7650  00271A                     u4430:
  7651  00271A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7652  00271E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7653  002722  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7654  002726  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7655  00272A  1E05               	comf	??___xxtofl^0,f,c
  7656  00272C  1E06               	comf	(??___xxtofl+1)^0,f,c
  7657  00272E  1E07               	comf	(??___xxtofl+2)^0,f,c
  7658  002730  1E08               	comf	(??___xxtofl+3)^0,f,c
  7659  002732  2A05               	incf	??___xxtofl^0,f,c
  7660  002734  0E00               	movlw	0
  7661  002736  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7662  002738  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7663  00273A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7664  00273C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7665  002740  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7666  002744  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7667  002748  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7668  00274C  EFB0  F013         	goto	l3791
  7669  002750                     l748:
  7670  002750  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7671  002754  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7672  002758  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7673  00275C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7674  002760                     l3791:
  7675  002760  5001               	movf	___xxtofl@val^0,w,c
  7676  002762  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7677  002764  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7678  002766  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7679  002768  A4D8               	btfss	status,2,c
  7680  00276A  EFB9  F013         	goto	u4441
  7681  00276E  EFBB  F013         	goto	u4440
  7682  002772                     u4441:
  7683  002772  EFC5  F013         	goto	l3797
  7684  002776                     u4440:
  7685  002776  0E00               	movlw	0
  7686  002778  6E01               	movwf	?___xxtofl^0,c
  7687  00277A  0E00               	movlw	0
  7688  00277C  6E02               	movwf	(?___xxtofl+1)^0,c
  7689  00277E  0E00               	movlw	0
  7690  002780  6E03               	movwf	(?___xxtofl+2)^0,c
  7691  002782  0E00               	movlw	0
  7692  002784  6E04               	movwf	(?___xxtofl+3)^0,c
  7693  002786  EF56  F014         	goto	l751
  7694  00278A                     l3797:
  7695  00278A  0E96               	movlw	150
  7696  00278C  6E0A               	movwf	___xxtofl@exp^0,c
  7697  00278E  EFCF  F013         	goto	l3801
  7698  002792                     l3799:
  7699  002792  2A0A               	incf	___xxtofl@exp^0,f,c
  7700  002794  90D8               	bcf	status,0,c
  7701  002796  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7702  002798  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7703  00279A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7704  00279C  320B               	rrcf	___xxtofl@arg^0,f,c
  7705  00279E                     l3801:
  7706  00279E  0E00               	movlw	0
  7707  0027A0  140B               	andwf	___xxtofl@arg^0,w,c
  7708  0027A2  6E05               	movwf	??___xxtofl^0,c
  7709  0027A4  0E00               	movlw	0
  7710  0027A6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7711  0027A8  6E06               	movwf	(??___xxtofl+1)^0,c
  7712  0027AA  0E00               	movlw	0
  7713  0027AC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7714  0027AE  6E07               	movwf	(??___xxtofl+2)^0,c
  7715  0027B0  0EFE               	movlw	254
  7716  0027B2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7717  0027B4  6E08               	movwf	(??___xxtofl+3)^0,c
  7718  0027B6  5005               	movf	??___xxtofl^0,w,c
  7719  0027B8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7720  0027BA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7721  0027BC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7722  0027BE  A4D8               	btfss	status,2,c
  7723  0027C0  EFE4  F013         	goto	u4451
  7724  0027C4  EFE6  F013         	goto	u4450
  7725  0027C8                     u4451:
  7726  0027C8  EFC9  F013         	goto	l3799
  7727  0027CC                     u4450:
  7728  0027CC  EFF4  F013         	goto	l755
  7729  0027D0                     l3803:
  7730  0027D0  2A0A               	incf	___xxtofl@exp^0,f,c
  7731  0027D2  0E01               	movlw	1
  7732  0027D4  260B               	addwf	___xxtofl@arg^0,f,c
  7733  0027D6  0E00               	movlw	0
  7734  0027D8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7735  0027DA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7736  0027DC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7737  0027DE  90D8               	bcf	status,0,c
  7738  0027E0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7739  0027E2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7740  0027E4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7741  0027E6  320B               	rrcf	___xxtofl@arg^0,f,c
  7742  0027E8                     l755:
  7743  0027E8  0E00               	movlw	0
  7744  0027EA  140B               	andwf	___xxtofl@arg^0,w,c
  7745  0027EC  6E05               	movwf	??___xxtofl^0,c
  7746  0027EE  0E00               	movlw	0
  7747  0027F0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7748  0027F2  6E06               	movwf	(??___xxtofl+1)^0,c
  7749  0027F4  0E00               	movlw	0
  7750  0027F6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7751  0027F8  6E07               	movwf	(??___xxtofl+2)^0,c
  7752  0027FA  0EFF               	movlw	255
  7753  0027FC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7754  0027FE  6E08               	movwf	(??___xxtofl+3)^0,c
  7755  002800  5005               	movf	??___xxtofl^0,w,c
  7756  002802  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7757  002804  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7758  002806  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7759  002808  A4D8               	btfss	status,2,c
  7760  00280A  EF09  F014         	goto	u4461
  7761  00280E  EF0B  F014         	goto	u4460
  7762  002812                     u4461:
  7763  002812  EFE8  F013         	goto	l3803
  7764  002816                     u4460:
  7765  002816  EF13  F014         	goto	l3811
  7766  00281A                     l3809:
  7767  00281A  060A               	decf	___xxtofl@exp^0,f,c
  7768  00281C  90D8               	bcf	status,0,c
  7769  00281E  360B               	rlcf	___xxtofl@arg^0,f,c
  7770  002820  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7771  002822  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7772  002824  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7773  002826                     l3811:
  7774  002826  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7775  002828  EF18  F014         	goto	u4471
  7776  00282C  EF1A  F014         	goto	u4470
  7777  002830                     u4471:
  7778  002830  EF22  F014         	goto	l762
  7779  002834                     u4470:
  7780  002834  0E02               	movlw	2
  7781  002836  600A               	cpfslt	___xxtofl@exp^0,c
  7782  002838  EF20  F014         	goto	u4481
  7783  00283C  EF22  F014         	goto	u4480
  7784  002840                     u4481:
  7785  002840  EF0D  F014         	goto	l3809
  7786  002844                     u4480:
  7787  002844                     l762:
  7788  002844  B00A               	btfsc	___xxtofl@exp^0,0,c
  7789  002846  EF27  F014         	goto	u4491
  7790  00284A  EF29  F014         	goto	u4490
  7791  00284E                     u4491:
  7792  00284E  EF2A  F014         	goto	l3817
  7793  002852                     u4490:
  7794  002852  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7795  002854                     l3817:
  7796  002854  90D8               	bcf	status,0,c
  7797  002856  320A               	rrcf	___xxtofl@exp^0,f,c
  7798  002858  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7799  00285C  6A06               	clrf	(??___xxtofl+1)^0,c
  7800  00285E  6A07               	clrf	(??___xxtofl+2)^0,c
  7801  002860  6A08               	clrf	(??___xxtofl+3)^0,c
  7802  002862  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7803  002866  6A07               	clrf	(??___xxtofl+2)^0,c
  7804  002868  6A06               	clrf	(??___xxtofl+1)^0,c
  7805  00286A  6A05               	clrf	??___xxtofl^0,c
  7806  00286C  5005               	movf	??___xxtofl^0,w,c
  7807  00286E  120B               	iorwf	___xxtofl@arg^0,f,c
  7808  002870  5006               	movf	(??___xxtofl+1)^0,w,c
  7809  002872  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7810  002874  5007               	movf	(??___xxtofl+2)^0,w,c
  7811  002876  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7812  002878  5008               	movf	(??___xxtofl+3)^0,w,c
  7813  00287A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7814  00287C  5009               	movf	___xxtofl@sign^0,w,c
  7815  00287E  B4D8               	btfsc	status,2,c
  7816  002880  EF44  F014         	goto	u4501
  7817  002884  EF46  F014         	goto	u4500
  7818  002888                     u4501:
  7819  002888  EF4E  F014         	goto	l3827
  7820  00288C                     u4500:
  7821  00288C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7822  00288E  EF4D  F014         	goto	u4510
  7823  002892  EF4B  F014         	goto	u4511
  7824  002896                     u4511:
  7825  002896  EF4E  F014         	goto	l3827
  7826  00289A                     u4510:
  7827  00289A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7828  00289C                     l3827:
  7829  00289C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7830  0028A0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7831  0028A4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7832  0028A8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7833  0028AC                     l751:
  7834  0028AC  0012               	return		;funcret
  7835  0028AE                     __end_of___xxtofl:
  7836                           	callstack 0
  7837                           
  7838 ;; *************** function ___fldiv *****************
  7839 ;; Defined at:
  7840 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  b               4   14[COMRAM] unsigned char 
  7843 ;;  a               4   18[COMRAM] unsigned char 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  grs             4   33[COMRAM] unsigned long 
  7846 ;;  rem             4   26[COMRAM] unsigned long 
  7847 ;;  new_exp         2   31[COMRAM] short 
  7848 ;;  aexp            1   38[COMRAM] unsigned char 
  7849 ;;  bexp            1   37[COMRAM] unsigned char 
  7850 ;;  sign            1   30[COMRAM] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  4   14[COMRAM] unsigned char 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7860 ;;      Params:         8       0       0       0       0       0       0       0       0
  7861 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7862 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7863 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7864 ;;Total ram usage:       25 bytes
  7865 ;; Hardware stack levels used: 1
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_Capture_read
  7870 ;;		_efgtoa
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text36
  7875  00214E                     __ptext36:
  7876                           	callstack 0
  7877  00214E                     ___fldiv:
  7878                           	callstack 26
  7879  00214E  5012               	movf	(___fldiv@b+3)^0,w,c
  7880  002150  0B80               	andlw	128
  7881  002152  6E1F               	movwf	___fldiv@sign^0,c
  7882  002154  5012               	movf	(___fldiv@b+3)^0,w,c
  7883  002156  2412               	addwf	(___fldiv@b+3)^0,w,c
  7884  002158  6E26               	movwf	___fldiv@bexp^0,c
  7885  00215A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7886  00215C  EFB2  F010         	goto	u2771
  7887  002160  EFB4  F010         	goto	u2770
  7888  002164                     u2771:
  7889  002164  EFB5  F010         	goto	l2767
  7890  002168                     u2770:
  7891  002168  8026               	bsf	___fldiv@bexp^0,0,c
  7892  00216A                     l2767:
  7893  00216A  5026               	movf	___fldiv@bexp^0,w,c
  7894  00216C  B4D8               	btfsc	status,2,c
  7895  00216E  EFBB  F010         	goto	u2781
  7896  002172  EFBD  F010         	goto	u2780
  7897  002176                     u2781:
  7898  002176  EFD2  F010         	goto	l2777
  7899  00217A                     u2780:
  7900  00217A  2826               	incf	___fldiv@bexp^0,w,c
  7901  00217C  A4D8               	btfss	status,2,c
  7902  00217E  EFC3  F010         	goto	u2791
  7903  002182  EFC5  F010         	goto	u2790
  7904  002186                     u2791:
  7905  002186  EFCD  F010         	goto	l2773
  7906  00218A                     u2790:
  7907  00218A  0E00               	movlw	0
  7908  00218C  6E0F               	movwf	___fldiv@b^0,c
  7909  00218E  0E00               	movlw	0
  7910  002190  6E10               	movwf	(___fldiv@b+1)^0,c
  7911  002192  0E00               	movlw	0
  7912  002194  6E11               	movwf	(___fldiv@b+2)^0,c
  7913  002196  0E00               	movlw	0
  7914  002198  6E12               	movwf	(___fldiv@b+3)^0,c
  7915  00219A                     l2773:
  7916  00219A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7917  00219C  0E00               	movlw	0
  7918  00219E  6E12               	movwf	(___fldiv@b+3)^0,c
  7919  0021A0  EFDA  F010         	goto	l2779
  7920  0021A4                     l2777:
  7921  0021A4  0E00               	movlw	0
  7922  0021A6  6E0F               	movwf	___fldiv@b^0,c
  7923  0021A8  0E00               	movlw	0
  7924  0021AA  6E10               	movwf	(___fldiv@b+1)^0,c
  7925  0021AC  0E00               	movlw	0
  7926  0021AE  6E11               	movwf	(___fldiv@b+2)^0,c
  7927  0021B0  0E00               	movlw	0
  7928  0021B2  6E12               	movwf	(___fldiv@b+3)^0,c
  7929  0021B4                     l2779:
  7930  0021B4  5016               	movf	(___fldiv@a+3)^0,w,c
  7931  0021B6  0B80               	andlw	128
  7932  0021B8  1A1F               	xorwf	___fldiv@sign^0,f,c
  7933  0021BA  5016               	movf	(___fldiv@a+3)^0,w,c
  7934  0021BC  2416               	addwf	(___fldiv@a+3)^0,w,c
  7935  0021BE  6E27               	movwf	___fldiv@aexp^0,c
  7936  0021C0  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7937  0021C2  EFE5  F010         	goto	u2801
  7938  0021C6  EFE7  F010         	goto	u2800
  7939  0021CA                     u2801:
  7940  0021CA  EFE8  F010         	goto	l2787
  7941  0021CE                     u2800:
  7942  0021CE  8027               	bsf	___fldiv@aexp^0,0,c
  7943  0021D0                     l2787:
  7944  0021D0  5027               	movf	___fldiv@aexp^0,w,c
  7945  0021D2  B4D8               	btfsc	status,2,c
  7946  0021D4  EFEE  F010         	goto	u2811
  7947  0021D8  EFF0  F010         	goto	u2810
  7948  0021DC                     u2811:
  7949  0021DC  EF05  F011         	goto	l2797
  7950  0021E0                     u2810:
  7951  0021E0  2827               	incf	___fldiv@aexp^0,w,c
  7952  0021E2  A4D8               	btfss	status,2,c
  7953  0021E4  EFF6  F010         	goto	u2821
  7954  0021E8  EFF8  F010         	goto	u2820
  7955  0021EC                     u2821:
  7956  0021EC  EF00  F011         	goto	l2793
  7957  0021F0                     u2820:
  7958  0021F0  0E00               	movlw	0
  7959  0021F2  6E13               	movwf	___fldiv@a^0,c
  7960  0021F4  0E00               	movlw	0
  7961  0021F6  6E14               	movwf	(___fldiv@a+1)^0,c
  7962  0021F8  0E00               	movlw	0
  7963  0021FA  6E15               	movwf	(___fldiv@a+2)^0,c
  7964  0021FC  0E00               	movlw	0
  7965  0021FE  6E16               	movwf	(___fldiv@a+3)^0,c
  7966  002200                     l2793:
  7967  002200  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7968  002202  0E00               	movlw	0
  7969  002204  6E16               	movwf	(___fldiv@a+3)^0,c
  7970  002206  EF0D  F011         	goto	l2799
  7971  00220A                     l2797:
  7972  00220A  0E00               	movlw	0
  7973  00220C  6E13               	movwf	___fldiv@a^0,c
  7974  00220E  0E00               	movlw	0
  7975  002210  6E14               	movwf	(___fldiv@a+1)^0,c
  7976  002212  0E00               	movlw	0
  7977  002214  6E15               	movwf	(___fldiv@a+2)^0,c
  7978  002216  0E00               	movlw	0
  7979  002218  6E16               	movwf	(___fldiv@a+3)^0,c
  7980  00221A                     l2799:
  7981  00221A  5013               	movf	___fldiv@a^0,w,c
  7982  00221C  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7983  00221E  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7984  002220  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7985  002222  A4D8               	btfss	status,2,c
  7986  002224  EF16  F011         	goto	u2831
  7987  002228  EF18  F011         	goto	u2830
  7988  00222C                     u2831:
  7989  00222C  EF30  F011         	goto	l2811
  7990  002230                     u2830:
  7991  002230  0E00               	movlw	0
  7992  002232  6E0F               	movwf	___fldiv@b^0,c
  7993  002234  0E00               	movlw	0
  7994  002236  6E10               	movwf	(___fldiv@b+1)^0,c
  7995  002238  0E00               	movlw	0
  7996  00223A  6E11               	movwf	(___fldiv@b+2)^0,c
  7997  00223C  0E00               	movlw	0
  7998  00223E  6E12               	movwf	(___fldiv@b+3)^0,c
  7999  002240  0E80               	movlw	128
  8000  002242  1211               	iorwf	(___fldiv@b+2)^0,f,c
  8001  002244  0E7F               	movlw	127
  8002  002246  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8003  002248                     l2805:
  8004  002248  501F               	movf	___fldiv@sign^0,w,c
  8005  00224A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  8006  00224C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  8007  002250  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  8008  002254  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  8009  002258  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  8010  00225C  EF73  F012         	goto	l675
  8011  002260                     l2811:
  8012  002260  5026               	movf	___fldiv@bexp^0,w,c
  8013  002262  A4D8               	btfss	status,2,c
  8014  002264  EF36  F011         	goto	u2841
  8015  002268  EF38  F011         	goto	u2840
  8016  00226C                     u2841:
  8017  00226C  EF42  F011         	goto	l2819
  8018  002270                     u2840:
  8019  002270  0E00               	movlw	0
  8020  002272  6E0F               	movwf	?___fldiv^0,c
  8021  002274  0E00               	movlw	0
  8022  002276  6E10               	movwf	(?___fldiv+1)^0,c
  8023  002278  0E00               	movlw	0
  8024  00227A  6E11               	movwf	(?___fldiv+2)^0,c
  8025  00227C  0E00               	movlw	0
  8026  00227E  6E12               	movwf	(?___fldiv+3)^0,c
  8027  002280  EF73  F012         	goto	l675
  8028  002284                     l2819:
  8029  002284  5027               	movf	___fldiv@aexp^0,w,c
  8030  002286  C026  F017         	movff	___fldiv@bexp,??___fldiv
  8031  00228A  6A18               	clrf	(??___fldiv+1)^0,c
  8032  00228C  5E17               	subwf	??___fldiv^0,f,c
  8033  00228E  0E00               	movlw	0
  8034  002290  5A18               	subwfb	(??___fldiv+1)^0,f,c
  8035  002292  0E7F               	movlw	127
  8036  002294  2417               	addwf	??___fldiv^0,w,c
  8037  002296  6E20               	movwf	___fldiv@new_exp^0,c
  8038  002298  0E00               	movlw	0
  8039  00229A  2018               	addwfc	(??___fldiv+1)^0,w,c
  8040  00229C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8041  00229E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  8042  0022A2  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  8043  0022A6  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  8044  0022AA  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  8045  0022AE  0E00               	movlw	0
  8046  0022B0  6E0F               	movwf	___fldiv@b^0,c
  8047  0022B2  0E00               	movlw	0
  8048  0022B4  6E10               	movwf	(___fldiv@b+1)^0,c
  8049  0022B6  0E00               	movlw	0
  8050  0022B8  6E11               	movwf	(___fldiv@b+2)^0,c
  8051  0022BA  0E00               	movlw	0
  8052  0022BC  6E12               	movwf	(___fldiv@b+3)^0,c
  8053  0022BE  0E00               	movlw	0
  8054  0022C0  6E22               	movwf	___fldiv@grs^0,c
  8055  0022C2  0E00               	movlw	0
  8056  0022C4  6E23               	movwf	(___fldiv@grs+1)^0,c
  8057  0022C6  0E00               	movlw	0
  8058  0022C8  6E24               	movwf	(___fldiv@grs+2)^0,c
  8059  0022CA  0E00               	movlw	0
  8060  0022CC  6E25               	movwf	(___fldiv@grs+3)^0,c
  8061  0022CE  0E00               	movlw	0
  8062  0022D0  6E27               	movwf	___fldiv@aexp^0,c
  8063  0022D2  EFA3  F011         	goto	l677
  8064  0022D6                     l2829:
  8065  0022D6  5027               	movf	___fldiv@aexp^0,w,c
  8066  0022D8  B4D8               	btfsc	status,2,c
  8067  0022DA  EF71  F011         	goto	u2851
  8068  0022DE  EF73  F011         	goto	u2850
  8069  0022E2                     u2851:
  8070  0022E2  EF8A  F011         	goto	l2837
  8071  0022E6                     u2850:
  8072  0022E6  90D8               	bcf	status,0,c
  8073  0022E8  361B               	rlcf	___fldiv@rem^0,f,c
  8074  0022EA  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  8075  0022EC  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  8076  0022EE  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  8077  0022F0  90D8               	bcf	status,0,c
  8078  0022F2  360F               	rlcf	___fldiv@b^0,f,c
  8079  0022F4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8080  0022F6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8081  0022F8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8082  0022FA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8083  0022FC  EF82  F011         	goto	u2861
  8084  002300  EF84  F011         	goto	u2860
  8085  002304                     u2861:
  8086  002304  EF85  F011         	goto	l680
  8087  002308                     u2860:
  8088  002308  800F               	bsf	___fldiv@b^0,0,c
  8089  00230A                     l680:
  8090  00230A  90D8               	bcf	status,0,c
  8091  00230C  3622               	rlcf	___fldiv@grs^0,f,c
  8092  00230E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8093  002310  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8094  002312  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8095  002314                     l2837:
  8096  002314  5013               	movf	___fldiv@a^0,w,c
  8097  002316  5C1B               	subwf	___fldiv@rem^0,w,c
  8098  002318  5014               	movf	(___fldiv@a+1)^0,w,c
  8099  00231A  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  8100  00231C  5015               	movf	(___fldiv@a+2)^0,w,c
  8101  00231E  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  8102  002320  5016               	movf	(___fldiv@a+3)^0,w,c
  8103  002322  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  8104  002324  A0D8               	btfss	status,0,c
  8105  002326  EF97  F011         	goto	u2871
  8106  00232A  EF99  F011         	goto	u2870
  8107  00232E                     u2871:
  8108  00232E  EFA2  F011         	goto	l2843
  8109  002332                     u2870:
  8110  002332  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  8111  002334  5013               	movf	___fldiv@a^0,w,c
  8112  002336  5E1B               	subwf	___fldiv@rem^0,f,c
  8113  002338  5014               	movf	(___fldiv@a+1)^0,w,c
  8114  00233A  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  8115  00233C  5015               	movf	(___fldiv@a+2)^0,w,c
  8116  00233E  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  8117  002340  5016               	movf	(___fldiv@a+3)^0,w,c
  8118  002342  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  8119  002344                     l2843:
  8120  002344  2A27               	incf	___fldiv@aexp^0,f,c
  8121  002346                     l677:
  8122  002346  0E19               	movlw	25
  8123  002348  6427               	cpfsgt	___fldiv@aexp^0,c
  8124  00234A  EFA9  F011         	goto	u2881
  8125  00234E  EFAB  F011         	goto	u2880
  8126  002352                     u2881:
  8127  002352  EF6B  F011         	goto	l2829
  8128  002356                     u2880:
  8129  002356  501B               	movf	___fldiv@rem^0,w,c
  8130  002358  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  8131  00235A  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  8132  00235C  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  8133  00235E  B4D8               	btfsc	status,2,c
  8134  002360  EFB4  F011         	goto	u2891
  8135  002364  EFB6  F011         	goto	u2890
  8136  002368                     u2891:
  8137  002368  EFCE  F011         	goto	l2855
  8138  00236C                     u2890:
  8139  00236C  8022               	bsf	___fldiv@grs^0,0,c
  8140  00236E  EFCE  F011         	goto	l2855
  8141  002372                     l2849:
  8142  002372  90D8               	bcf	status,0,c
  8143  002374  360F               	rlcf	___fldiv@b^0,f,c
  8144  002376  3610               	rlcf	(___fldiv@b+1)^0,f,c
  8145  002378  3611               	rlcf	(___fldiv@b+2)^0,f,c
  8146  00237A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  8147  00237C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8148  00237E  EFC3  F011         	goto	u2901
  8149  002382  EFC5  F011         	goto	u2900
  8150  002386                     u2901:
  8151  002386  EFC6  F011         	goto	l686
  8152  00238A                     u2900:
  8153  00238A  800F               	bsf	___fldiv@b^0,0,c
  8154  00238C                     l686:
  8155  00238C  90D8               	bcf	status,0,c
  8156  00238E  3622               	rlcf	___fldiv@grs^0,f,c
  8157  002390  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  8158  002392  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  8159  002394  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  8160  002396  0620               	decf	___fldiv@new_exp^0,f,c
  8161  002398  A0D8               	btfss	status,0,c
  8162  00239A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  8163  00239C                     l2855:
  8164  00239C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  8165  00239E  EFD3  F011         	goto	u2911
  8166  0023A2  EFD5  F011         	goto	u2910
  8167  0023A6                     u2911:
  8168  0023A6  EFB9  F011         	goto	l2849
  8169  0023AA                     u2910:
  8170  0023AA  0E00               	movlw	0
  8171  0023AC  6E27               	movwf	___fldiv@aexp^0,c
  8172  0023AE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  8173  0023B0  EFDC  F011         	goto	u2921
  8174  0023B4  EFDE  F011         	goto	u2920
  8175  0023B8                     u2921:
  8176  0023B8  EF02  F012         	goto	l688
  8177  0023BC                     u2920:
  8178  0023BC  0EFF               	movlw	255
  8179  0023BE  1422               	andwf	___fldiv@grs^0,w,c
  8180  0023C0  6E17               	movwf	??___fldiv^0,c
  8181  0023C2  0EFF               	movlw	255
  8182  0023C4  1423               	andwf	(___fldiv@grs+1)^0,w,c
  8183  0023C6  6E18               	movwf	(??___fldiv+1)^0,c
  8184  0023C8  0EFF               	movlw	255
  8185  0023CA  1424               	andwf	(___fldiv@grs+2)^0,w,c
  8186  0023CC  6E19               	movwf	(??___fldiv+2)^0,c
  8187  0023CE  0E7F               	movlw	127
  8188  0023D0  1425               	andwf	(___fldiv@grs+3)^0,w,c
  8189  0023D2  6E1A               	movwf	(??___fldiv+3)^0,c
  8190  0023D4  5017               	movf	??___fldiv^0,w,c
  8191  0023D6  1018               	iorwf	(??___fldiv+1)^0,w,c
  8192  0023D8  1019               	iorwf	(??___fldiv+2)^0,w,c
  8193  0023DA  101A               	iorwf	(??___fldiv+3)^0,w,c
  8194  0023DC  B4D8               	btfsc	status,2,c
  8195  0023DE  EFF3  F011         	goto	u2931
  8196  0023E2  EFF5  F011         	goto	u2930
  8197  0023E6                     u2931:
  8198  0023E6  EFF9  F011         	goto	l689
  8199  0023EA                     u2930:
  8200  0023EA                     l2863:
  8201  0023EA  0E01               	movlw	1
  8202  0023EC  6E27               	movwf	___fldiv@aexp^0,c
  8203  0023EE  EF02  F012         	goto	l688
  8204  0023F2                     l689:
  8205  0023F2  A00F               	btfss	___fldiv@b^0,0,c
  8206  0023F4  EFFE  F011         	goto	u2941
  8207  0023F8  EF00  F012         	goto	u2940
  8208  0023FC                     u2941:
  8209  0023FC  EF02  F012         	goto	l688
  8210  002400                     u2940:
  8211  002400  EFF5  F011         	goto	l2863
  8212  002404                     l688:
  8213  002404  5027               	movf	___fldiv@aexp^0,w,c
  8214  002406  B4D8               	btfsc	status,2,c
  8215  002408  EF08  F012         	goto	u2951
  8216  00240C  EF0A  F012         	goto	u2950
  8217  002410                     u2951:
  8218  002410  EF2E  F012         	goto	l2875
  8219  002414                     u2950:
  8220  002414  0E01               	movlw	1
  8221  002416  260F               	addwf	___fldiv@b^0,f,c
  8222  002418  0E00               	movlw	0
  8223  00241A  2210               	addwfc	(___fldiv@b+1)^0,f,c
  8224  00241C  2211               	addwfc	(___fldiv@b+2)^0,f,c
  8225  00241E  2212               	addwfc	(___fldiv@b+3)^0,f,c
  8226  002420  A012               	btfss	(___fldiv@b+3)^0,0,c
  8227  002422  EF15  F012         	goto	u2961
  8228  002426  EF17  F012         	goto	u2960
  8229  00242A                     u2961:
  8230  00242A  EF2E  F012         	goto	l2875
  8231  00242E                     u2960:
  8232  00242E  C00F  F017         	movff	___fldiv@b,??___fldiv
  8233  002432  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  8234  002436  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  8235  00243A  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  8236  00243E  341A               	rlcf	(??___fldiv+3)^0,w,c
  8237  002440  321A               	rrcf	(??___fldiv+3)^0,f,c
  8238  002442  3219               	rrcf	(??___fldiv+2)^0,f,c
  8239  002444  3218               	rrcf	(??___fldiv+1)^0,f,c
  8240  002446  3217               	rrcf	??___fldiv^0,f,c
  8241  002448  C017  F00F         	movff	??___fldiv,___fldiv@b
  8242  00244C  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8243  002450  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8244  002454  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8245  002458  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8246  00245A  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8247  00245C                     l2875:
  8248  00245C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8249  00245E  EF39  F012         	goto	u2971
  8250  002462  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8251  002464  E108               	bnz	u2970
  8252  002466  2820               	incf	___fldiv@new_exp^0,w,c
  8253  002468  A0D8               	btfss	status,0,c
  8254  00246A  EF39  F012         	goto	u2971
  8255  00246E  EF3B  F012         	goto	u2970
  8256  002472                     u2971:
  8257  002472  EF46  F012         	goto	l2879
  8258  002476                     u2970:
  8259  002476  0E00               	movlw	0
  8260  002478  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8261  00247A  6820               	setf	___fldiv@new_exp^0,c
  8262  00247C  0E00               	movlw	0
  8263  00247E  6E0F               	movwf	___fldiv@b^0,c
  8264  002480  0E00               	movlw	0
  8265  002482  6E10               	movwf	(___fldiv@b+1)^0,c
  8266  002484  0E00               	movlw	0
  8267  002486  6E11               	movwf	(___fldiv@b+2)^0,c
  8268  002488  0E00               	movlw	0
  8269  00248A  6E12               	movwf	(___fldiv@b+3)^0,c
  8270  00248C                     l2879:
  8271  00248C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8272  00248E  EF53  F012         	goto	u2980
  8273  002492  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8274  002494  E106               	bnz	u2981
  8275  002496  0420               	decf	___fldiv@new_exp^0,w,c
  8276  002498  B0D8               	btfsc	status,0,c
  8277  00249A  EF51  F012         	goto	u2981
  8278  00249E  EF53  F012         	goto	u2980
  8279  0024A2                     u2981:
  8280  0024A2  EF61  F012         	goto	l2883
  8281  0024A6                     u2980:
  8282  0024A6  0E00               	movlw	0
  8283  0024A8  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8284  0024AA  0E00               	movlw	0
  8285  0024AC  6E20               	movwf	___fldiv@new_exp^0,c
  8286  0024AE  0E00               	movlw	0
  8287  0024B0  6E0F               	movwf	___fldiv@b^0,c
  8288  0024B2  0E00               	movlw	0
  8289  0024B4  6E10               	movwf	(___fldiv@b+1)^0,c
  8290  0024B6  0E00               	movlw	0
  8291  0024B8  6E11               	movwf	(___fldiv@b+2)^0,c
  8292  0024BA  0E00               	movlw	0
  8293  0024BC  6E12               	movwf	(___fldiv@b+3)^0,c
  8294  0024BE  0E00               	movlw	0
  8295  0024C0  6E1F               	movwf	___fldiv@sign^0,c
  8296  0024C2                     l2883:
  8297  0024C2  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8298  0024C6  A026               	btfss	___fldiv@bexp^0,0,c
  8299  0024C8  EF68  F012         	goto	u2991
  8300  0024CC  EF6A  F012         	goto	u2990
  8301  0024D0                     u2991:
  8302  0024D0  EF6D  F012         	goto	l2889
  8303  0024D4                     u2990:
  8304  0024D4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8305  0024D6  EF6E  F012         	goto	l2891
  8306  0024DA                     l2889:
  8307  0024DA  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8308  0024DC                     l2891:
  8309  0024DC  90D8               	bcf	status,0,c
  8310  0024DE  3026               	rrcf	___fldiv@bexp^0,w,c
  8311  0024E0  6E12               	movwf	(___fldiv@b+3)^0,c
  8312  0024E2  EF24  F011         	goto	l2805
  8313  0024E6                     l675:
  8314  0024E6  0012               	return		;funcret
  8315  0024E8                     __end_of___fldiv:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function _Capture_Begin *****************
  8319 ;; Defined at:
  8320 ;;		line 41 in file "../Frecuenciometro_digital.X/main.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_main
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text37
  8348  0037AC                     __ptext37:
  8349                           	callstack 0
  8350  0037AC                     _Capture_Begin:
  8351                           	callstack 30
  8352  0037AC                     
  8353                           ;../Frecuenciometro_digital.X/main.c: 43:     TRISC2=1;
  8354  0037AC  8494               	bsf	3988,2,c	;volatile
  8355  0037AE                     
  8356                           ;../Frecuenciometro_digital.X/main.c: 44:     CCP1CON=0x05;
  8357  0037AE  0E05               	movlw	5
  8358  0037B0  6EBD               	movwf	189,c	;volatile
  8359                           
  8360                           ;../Frecuenciometro_digital.X/main.c: 45:     T1CON=0x80;
  8361  0037B2  0E80               	movlw	128
  8362  0037B4  6ECD               	movwf	205,c	;volatile
  8363                           
  8364                           ;../Frecuenciometro_digital.X/main.c: 46:     CCPR1=0;
  8365  0037B6  0E00               	movlw	0
  8366  0037B8  6EBF               	movwf	191,c	;volatile
  8367  0037BA  0E00               	movlw	0
  8368  0037BC  6EBE               	movwf	190,c	;volatile
  8369                           
  8370                           ;../Frecuenciometro_digital.X/main.c: 47:     TMR1=0;
  8371  0037BE  0E00               	movlw	0
  8372  0037C0  6ECF               	movwf	207,c	;volatile
  8373  0037C2  0E00               	movlw	0
  8374  0037C4  6ECE               	movwf	206,c	;volatile
  8375  0037C6                     
  8376                           ;../Frecuenciometro_digital.X/main.c: 48:     CCP1IF=0;
  8377  0037C6  949E               	bcf	3998,2,c	;volatile
  8378  0037C8                     
  8379                           ;../Frecuenciometro_digital.X/main.c: 49:     CCP1IE=1;
  8380  0037C8  849D               	bsf	3997,2,c	;volatile
  8381  0037CA                     
  8382                           ;../Frecuenciometro_digital.X/main.c: 50:     TMR1ON=1;
  8383  0037CA  80CD               	bsf	4045,0,c	;volatile
  8384  0037CC  0012               	return		;funcret
  8385  0037CE                     __end_of_Capture_Begin:
  8386                           	callstack 0
  8387                           
  8388                           	psect	rparam
  8389  0000                     
  8390                           	psect	idloc
  8391                           
  8392                           ;Config register IDLOC0 @ 0x200000
  8393                           ;	unspecified, using default values
  8394  200000                     	org	2097152
  8395  200000  FF                 	db	255
  8396                           
  8397                           ;Config register IDLOC1 @ 0x200001
  8398                           ;	unspecified, using default values
  8399  200001                     	org	2097153
  8400  200001  FF                 	db	255
  8401                           
  8402                           ;Config register IDLOC2 @ 0x200002
  8403                           ;	unspecified, using default values
  8404  200002                     	org	2097154
  8405  200002  FF                 	db	255
  8406                           
  8407                           ;Config register IDLOC3 @ 0x200003
  8408                           ;	unspecified, using default values
  8409  200003                     	org	2097155
  8410  200003  FF                 	db	255
  8411                           
  8412                           ;Config register IDLOC4 @ 0x200004
  8413                           ;	unspecified, using default values
  8414  200004                     	org	2097156
  8415  200004  FF                 	db	255
  8416                           
  8417                           ;Config register IDLOC5 @ 0x200005
  8418                           ;	unspecified, using default values
  8419  200005                     	org	2097157
  8420  200005  FF                 	db	255
  8421                           
  8422                           ;Config register IDLOC6 @ 0x200006
  8423                           ;	unspecified, using default values
  8424  200006                     	org	2097158
  8425  200006  FF                 	db	255
  8426                           
  8427                           ;Config register IDLOC7 @ 0x200007
  8428                           ;	unspecified, using default values
  8429  200007                     	org	2097159
  8430  200007  FF                 	db	255
  8431                           
  8432                           	psect	config
  8433                           
  8434                           ;Config register CONFIG1L @ 0x300000
  8435                           ;	PLL Prescaler Selection bits
  8436                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8437                           ;	System Clock Postscaler Selection bits
  8438                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8439                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8440                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8441  300000                     	org	3145728
  8442  300000  00                 	db	0
  8443                           
  8444                           ;Config register CONFIG1H @ 0x300001
  8445                           ;	Oscillator Selection bits
  8446                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  8447                           ;	Fail-Safe Clock Monitor Enable bit
  8448                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8449                           ;	Internal/External Oscillator Switchover bit
  8450                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8451  300001                     	org	3145729
  8452  300001  08                 	db	8
  8453                           
  8454                           ;Config register CONFIG2L @ 0x300002
  8455                           ;	Power-up Timer Enable bit
  8456                           ;	PWRT = OFF, PWRT disabled
  8457                           ;	Brown-out Reset Enable bits
  8458                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8459                           ;	Brown-out Reset Voltage bits
  8460                           ;	BORV = 3, Minimum setting 2.05V
  8461                           ;	USB Voltage Regulator Enable bit
  8462                           ;	VREGEN = OFF, USB voltage regulator disabled
  8463  300002                     	org	3145730
  8464  300002  1F                 	db	31
  8465                           
  8466                           ;Config register CONFIG2H @ 0x300003
  8467                           ;	Watchdog Timer Enable bit
  8468                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8469                           ;	Watchdog Timer Postscale Select bits
  8470                           ;	WDTPS = 32768, 1:32768
  8471  300003                     	org	3145731
  8472  300003  1E                 	db	30
  8473                           
  8474                           ; Padding undefined space
  8475  300004                     	org	3145732
  8476  300004  FF                 	db	255
  8477                           
  8478                           ;Config register CONFIG3H @ 0x300005
  8479                           ;	CCP2 MUX bit
  8480                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8481                           ;	PORTB A/D Enable bit
  8482                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8483                           ;	Low-Power Timer 1 Oscillator Enable bit
  8484                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8485                           ;	MCLR Pin Enable bit
  8486                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8487  300005                     	org	3145733
  8488  300005  01                 	db	1
  8489                           
  8490                           ;Config register CONFIG4L @ 0x300006
  8491                           ;	Stack Full/Underflow Reset Enable bit
  8492                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8493                           ;	Single-Supply ICSP Enable bit
  8494                           ;	LVP = OFF, Single-Supply ICSP disabled
  8495                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8496                           ;	ICPRT = OFF, ICPORT disabled
  8497                           ;	Extended Instruction Set Enable bit
  8498                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8499                           ;	Background Debugger Enable bit
  8500                           ;	DEBUG = 0x1, unprogrammed default
  8501  300006                     	org	3145734
  8502  300006  81                 	db	129
  8503                           
  8504                           ; Padding undefined space
  8505  300007                     	org	3145735
  8506  300007  FF                 	db	255
  8507                           
  8508                           ;Config register CONFIG5L @ 0x300008
  8509                           ;	Code Protection bit
  8510                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8511                           ;	Code Protection bit
  8512                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8513                           ;	Code Protection bit
  8514                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8515                           ;	Code Protection bit
  8516                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8517  300008                     	org	3145736
  8518  300008  0F                 	db	15
  8519                           
  8520                           ;Config register CONFIG5H @ 0x300009
  8521                           ;	Boot Block Code Protection bit
  8522                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8523                           ;	Data EEPROM Code Protection bit
  8524                           ;	CPD = OFF, Data EEPROM is not code-protected
  8525  300009                     	org	3145737
  8526  300009  C0                 	db	192
  8527                           
  8528                           ;Config register CONFIG6L @ 0x30000A
  8529                           ;	Write Protection bit
  8530                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8531                           ;	Write Protection bit
  8532                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8533                           ;	Write Protection bit
  8534                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8535                           ;	Write Protection bit
  8536                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8537  30000A                     	org	3145738
  8538  30000A  0F                 	db	15
  8539                           
  8540                           ;Config register CONFIG6H @ 0x30000B
  8541                           ;	Configuration Register Write Protection bit
  8542                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8543                           ;	Boot Block Write Protection bit
  8544                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8545                           ;	Data EEPROM Write Protection bit
  8546                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8547  30000B                     	org	3145739
  8548  30000B  E0                 	db	224
  8549                           
  8550                           ;Config register CONFIG7L @ 0x30000C
  8551                           ;	Table Read Protection bit
  8552                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8553                           ;	Table Read Protection bit
  8554                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8555                           ;	Table Read Protection bit
  8556                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8557                           ;	Table Read Protection bit
  8558                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8559  30000C                     	org	3145740
  8560  30000C  0F                 	db	15
  8561                           
  8562                           ;Config register CONFIG7H @ 0x30000D
  8563                           ;	Boot Block Table Read Protection bit
  8564                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8565  30000D                     	org	3145741
  8566  30000D  40                 	db	64
  8567                           tosu	equ	0xFFF
  8568                           tosh	equ	0xFFE
  8569                           tosl	equ	0xFFD
  8570                           stkptr	equ	0xFFC
  8571                           pclatu	equ	0xFFB
  8572                           pclath	equ	0xFFA
  8573                           pcl	equ	0xFF9
  8574                           tblptru	equ	0xFF8
  8575                           tblptrh	equ	0xFF7
  8576                           tblptrl	equ	0xFF6
  8577                           tablat	equ	0xFF5
  8578                           prodh	equ	0xFF4
  8579                           prodl	equ	0xFF3
  8580                           indf0	equ	0xFEF
  8581                           postinc0	equ	0xFEE
  8582                           postdec0	equ	0xFED
  8583                           preinc0	equ	0xFEC
  8584                           plusw0	equ	0xFEB
  8585                           fsr0h	equ	0xFEA
  8586                           fsr0l	equ	0xFE9
  8587                           wreg	equ	0xFE8
  8588                           indf1	equ	0xFE7
  8589                           postinc1	equ	0xFE6
  8590                           postdec1	equ	0xFE5
  8591                           preinc1	equ	0xFE4
  8592                           plusw1	equ	0xFE3
  8593                           fsr1h	equ	0xFE2
  8594                           fsr1l	equ	0xFE1
  8595                           bsr	equ	0xFE0
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           preinc2	equ	0xFDC
  8600                           plusw2	equ	0xFDB
  8601                           fsr2h	equ	0xFDA
  8602                           fsr2l	equ	0xFD9
  8603                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     95     111
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S536$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S536$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_Print@str	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer(BANK0[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_setCursor->_LCD_Command
    _LCD_Print->_LCD_Char
    _LCD_Begin->_LCD_Command
    _Capture_read->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   31367
                                             73 BANK0     22    22      0
                      _Capture_Begin
                       _Capture_read
                          _LCD_Begin
                          _LCD_Print
                      _LCD_setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   28028
                                             52 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27671
                                             89 COMRAM     6     0      6
                                             50 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   27299
                                             71 COMRAM    18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   22144
                                             59 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             39 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     309
                                              2 COMRAM     5     4      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            2     0      2     241
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Capture_read                                        10     6      4    2672
                                             39 COMRAM    10     6      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Capture_Begin                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Capture_Begin
   _Capture_read
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _LCD_Begin
     _LCD_Command
   _LCD_Print
     _LCD_Char
   _LCD_setCursor
     _LCD_Command
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhh         2C      0       0      20        0.0%
BITBIGSFRll         2C      0       0      26        0.0%
BITBIGSFRhllh       1E      0       0      23        0.0%
BITBIGSFRhlhl        D      0       0      22        0.0%
BITBIGSFRlh          7      0       0      25        0.0%
BITBIGSFRhlll        7      0       0      24        0.0%
BITBIGSFRhlhh        3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      27        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 15:45:17 2022

           ___fldiv@aexp 0027             ___fldiv@bexp 0026             ___fldiv@sign 001F  
           ?_LCD_Command 0001                       l13 3762                       l22 3650  
                     l19 353E                       l35 344A                       l28 3398  
                     l90 30EA                       l83 304A                       l85 3058  
                     l93 3788                       l78 37CC                       l86 3062  
                     l88 3070             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
   __end_of_Capture_read 30EC                      l324 3034                      l352 3244  
                    l337 319A                      l363 2C0C                      l621 1626  
                    l358 2BC6                      l630 18F6                      l622 1614  
                    l390 2B08                      l711 214C                      l367 36C0  
                    l623 15DA                      l714 1FDE                      l707 1DE8  
                    l724 210E                      l716 2056                      l812 2EF2  
                    l717 2044                      l638 1740                      l751 28AC  
                    l647 1810                      l663 35CA                      l815 2F34  
                    l680 230A                      l648 17FE                      l817 2F70  
                    l833 1436                      l762 2844                      l930 3332  
                    l675 24E6                      l755 27E8                      l931 333A  
                    l771 349C                      l748 2750                      l924 1C6C  
                    l677 2346                      l941 2D0A                      l686 238C  
                    l919 1D22                      l688 2404                      l689 23F2  
                    l849 0BE6                      l964 29FA                      l973 26F8  
                    l877 1026                      l983 36F8                      l991 34EE  
                    l967 2A02                      l976 263C                      l997 3688  
                    _pad 2EAC             ___awmod@sign 0006                      wreg 000FE8  
  __end_of_Capture_Begin 37CE             ___flmul@aexp 0012             ___flmul@bexp 0013  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
           ___fltol@exp1 000A                     l1012 2EAA                     l1020 360E  
                   l1023 37CE                     l1035 372E                     l1052 3584  
                   l1029 33F4                     l1039 2DE0                     l3001 2072  
                   l1049 357C                     l3011 20DC                     l3003 2080  
                   l3101 3166                     l3021 2132                     l3013 20F6  
                   l3005 20AA                     l3111 3192                     l3103 316E  
                   l3015 2112                     l3023 2138                     l3007 20AE  
                   l3031 3596                     l3041 2F8C                     l3105 3174  
                   l3121 3208                     l3025 213C                     l3017 2122  
                   l3009 20C8                     l3201 2AF8                     l3051 2FB2  
                   l3043 2F90                     l3035 2F72                     l3107 317A  
                   l3123 3218                     l3115 319C                     l3131 2B0A  
                   l3019 2130                     l3211 2EDE                     l3301 34E4  
                   l3061 2FE8                     l3053 2FC4                     l3045 2F9E  
                   l3037 2F76                     l3109 318A                     l3125 323C  
                   l3117 31CA                     l3141 2B94                     l3133 2B38  
                   l3029 3586                     l3221 2F44                     l3213 2EEA  
                   l3205 2EAC                     l3303 34E8                     l3063 2FFE  
                   l3055 2FCC                     l3071 3014                     l3047 2FA6  
                   l3039 2F84                     l3127 3242                     l3119 31DA  
                   l3143 2BA6                     l3135 2B48                     l3231 2C6C  
                   l3223 2F58                     l3215 2EFE                     l3207 2EBC  
                   l3311 0844                     l3073 3024                     l3065 3006  
                   l3057 2FD4                     l3049 2FAA                     l3081 30F0  
                   l3145 2BB4                     l3137 2B76                     l3153 368A  
                   l2601 1568                     l3161 2A04                     l3241 2CBE  
                   l3233 2C94                     l2521 2E06                     l3217 2F12  
                   l3209 2ED0                     l3401 0BC0                     l3321 0890  
                   l3313 0852                     l3075 302C                     l3067 3008  
                   l3059 2FE2                     l3091 3120                     l3083 30FE  
                   l3147 2C04                     l3139 2B86                     l3155 36A0  
                   l2611 157C                     l2603 156C                     l2531 1438  
                   l3171 2A5A                     l3163 2A1A                     l3235 2CA0  
                   l3227 2C0E                     l2523 2E10                     l3219 2F16  
                   l3251 33AA                     l3411 0C04                     l3403 0BDA  
                   l3331 08D6                     l3323 08A2                     l3315 085A  
                   l3307 082A                     l3069 300E                     l3093 3132  
                   l3085 3106                     l3149 2C0A                     l3157 36B0  
                   l2701 1820                     l2621 15F4                     l2613 15A6  
                   l2605 1570                     l2541 1474                     l2533 1444  
                   l3173 2A6A                     l3245 2D02                     l3229 2C2E  
                   l2525 2E2E                     l2517 2DE2                     l3253 3540  
                   l3501 10F0                     l3413 0C16                     l3421 0C74  
                   l3405 0BF2                     l3333 08DA                     l3325 08B0  
                   l3317 087E                     l3309 0834                     l3095 313A  
                   l3087 310A                     l3079 30EC                     l2711 1886  
                   l2703 182C                     l2631 1634                     l2623 15F8  
                   l2615 15C2                     l2607 1574                     l2551 14A4  
                   l2543 1484                     l2535 1452                     l3183 2A94  
                   l3175 2A6E                     l3167 2A2E                     l3239 2CAC  
                   l3271 2580                     l3263 24E8                     l2527 2E64  
                   l2519 2DF4                     l3511 112A                     l3503 1102  
                   l3431 0CB2                     l3423 0C7C                     l3415 0C32  
                   l3351 0978                     l3343 090A                     l3335 08DE  
                   l3327 08C2                     l3319 0888                     l2801 2230  
                   l3097 3142                     l3089 3118                     l2721 18CE  
                   l2713 1896                     l2705 183A                     l2641 1676  
                   l2633 1644                     l2625 1606                     l2617 15D2  
                   l2609 1578                     l2561 14CE                     l2553 14B6  
                   l2545 1486                     l2537 1454                     l3193 2ABC  
                   l3185 2A9E                     l3177 2A7C                     l3169 2A58  
                   l3281 269C                     l3265 2508                     l3249 339A  
                   l3257 3540                     l3601 13F8                     l3513 1136  
                   l3505 1110                     l3521 1156                     l3433 0CC4  
                   l3441 0D04                     l3425 0C8E                     l3417 0C68  
                   l3361 09C6                     l3345 0936                     l3329 08CE  
                   l3337 08E4                     l2803 2240                     l2811 2260  
                   l3291 36C2                     l3099 3150                     l2723 18D0  
                   l2715 18B6                     l2707 1874                     l2651 16A4  
                   l2643 1684                     l2627 1608                     l2619 15E8  
                   l2563 14DE                     l2571 1508                     l2555 14B8  
                   l2539 1464                     l2547 148E                     l3195 2AC8  
                   l3187 2AA8                     l3283 26B0                     l3275 25F0  
                   l3267 255E                     l3259 356E                     l3603 1400  
                   l3531 11DC                     l3523 1168                     l3515 1146  
                   l3507 1120                     l3451 0DEC                     l3443 0D0C  
                   l3435 0CD2                     l3427 0CA0                     l3419 0C70  
                   l3363 09F2                     l3347 0954                     l3355 09A0  
                   l2821 229E                     l2813 2270                     l2805 2248  
                   l3621 28E2                     l3613 28AE                     l2901 1D30  
                   l2725 18D6                     l2717 18BA                     l2709 1876  
                   l2661 1710                     l2653 16AE                     l2645 1690  
                   l2637 1658                     l2629 1612                     l2581 1540  
                   l2573 1518                     l2565 14EE                     l2557 14BE  
                   l2549 149E                     l3197 2AD8                     l3285 26D8  
                   l3277 262C                     l3269 2572                     l2733 35CC  
                   l2741 36FA                     l3605 1410                     l3541 1256  
                   l3533 1210                     l3525 117A                     l3517 114A  
                   l3509 1124                     l3461 0EAA                     l3453 0E20  
                   l3445 0D1C                     l3437 0CEA                     l3429 0CAE  
                   l3381 0AB2                     l3365 0A10                     l3373 0A2E  
                   l3349 096E                     l3701 1AE4                     l2831 22E6  
                   l2823 22AE                     l2815 2270                     l2807 224C  
                   l3295 349E                     l3623 291C                     l3615 28C2  
                   l2911 1D70                     l2903 1D3E                     l2727 18E4  
                   l2719 18C8                     l2663 1720                     l2647 1694  
                   l2639 1668                     l2655 16B4                     l2591 1554  
                   l2583 1544                     l2575 152A                     l2567 14FE  
                   l2559 14CC                     l3199 2AE8                     l3287 26E8  
                   l3279 2660                     l2735 35D8                     l2743 3706  
                   l2751 3652                     l3607 1416                     l3551 129A  
                   l3543 1268                     l3535 1218                     l3527 117E  
                   l3519 1150                     l3471 0F46                     l3463 0EC0  
                   l3447 0D30                     l3455 0E26                     l3439 0CFC  
                   l3383 0AB8                     l3391 0B80                     l3375 0A48  
                   l3703 1AF6                     l2841 2334                     l2833 22FA  
                   l2825 22BE                     l2761 214E                     l3801 279E  
                   l3297 34A2                     l3625 2924                     l2921 1DA0  
                   l2913 1D76                     l2905 1D40                     l2729 18E6  
                   l2681 17A2                     l2673 177A                     l2657 16DA  
                   l2665 1730                     l2649 16A2                     l2593 1558  
                   l2585 1548                     l2577 1538                     l2569 1500  
                   l2737 35EA                     l2745 370A                     l3561 12DA  
                   l3553 12AC                     l3545 1276                     l3529 1184  
                   l3537 121C                     l3473 0F9C                     l3481 0FEE  
                   l3465 0EF2                     l3457 0E44                     l3449 0D94  
                   l3393 0B90                     l3385 0B12                     l3721 1C08  
                   l3705 1B0C                     l3713 1B76                     l2851 237C  
                   l2843 2344                     l2835 2308                     l2827 22CE  
                   l2819 2284                     l2771 218A                     l2763 215A  
                   l3811 2826                     l3803 27D0                     l2755 3764  
                   l3299 34B6                     l3635 2996                     l3627 292C  
                   l3619 28C6                     l2931 1DD8                     l2923 1DA2  
                   l2915 1D86                     l2907 1D50                     l2683 17AA  
                   l2675 1784                     l2667 1756                     l2659 170E  
                   l2691 17CE                     l2595 155C                     l2587 154C  
                   l2579 153C                     l2739 35EE                     l2747 3722  
                   l3571 1322                     l3563 12E2                     l3555 12B4  
                   l3547 1286                     l3539 123A                     l3491 10A6  
                   l3483 0FFE                     l3475 0FA2                     l3467 0F02  
                   l3459 0E78                     l3395 0B94                     l3387 0B46  
                   l3379 0A7E                     l3651 2D42                     l3731 1CA4  
                   l3723 1C3C                     l3715 1BA4                     l3707 1B1A  
                   l2861 23BC                     l2853 238A                     l2845 2356  
                   l2837 2314                     l2829 22D6                     l2781 21BA  
                   l2773 219A                     l2765 2168                     l3821 287C  
                   l3813 2834                     l3805 27D2                     l2757 3780  
                   l3637 29CC                     l3629 2960                     l2941 1E28  
                   l2933 1DF8                     l2925 1DB2                     l2917 1D8C  
                   l2909 1D60                     l2693 17D2                     l2685 17AE  
                   l2677 1792                     l2669 1766                     l2597 1560  
                   l2589 1550                     l3581 1378                     l3573 133E  
                   l3565 12EA                     l3557 12C4                     l3549 128A  
                   l3493 10B6                     l3485 1012                     l3477 0FD6  
                   l3469 0F12                     l3397 0BA6                     l3389 0B4E  
                   l3661 2DBE                     l3653 2D50                     l3645 2D0C  
                   l3741 1CE0                     l3733 1CB2                     l3709 1B4A  
                   l3901 344C                     ?_pad 0011                     l2871 242E  
                   l2863 23EA                     l2847 236C                     l2855 239C  
                   l2839 2332                     l2791 21F0                     l2783 21C0  
                   l2775 219C                     l2767 216A                     l3823 288C  
                   l3815 2852                     l3807 27DE                     l3639 29DE  
                   l2951 1E78                     l2943 1E32                     l2935 1E08  
                   l2927 1DC2                     l2919 1D92                     l2695 17E0  
                   l2687 17BE                     l2679 1794                     l2599 1564  
                   l3591 13B4                     l3583 137E                     l3575 1346  
                   l3567 12F6                     l3559 12CC                     l3495 10C8  
                   l3487 101E                     l3479 0FEA                     l3399 0BB8  
                   l3655 2D68                     l3647 2D36                     l3735 1CC6  
                   l3719 1BCA                     l3671 193C                     l3831 32DA  
                   l3903 345E                     l2881 24A6                     l2873 2458  
                   l2857 23AA                     l2849 2372                     l2793 2200  
                   l2785 21CE                     l2769 217A                     l2777 21A4  
                   l3825 289A                     l3817 2854                     l3809 281A  
                   l3761 3508                     l3753 34F2                     l3841 3740  
                   l2961 1EBA                     l2953 1E84                     l2945 1E48  
                   l2929 1DD2                     l2697 17F6                     l2689 17C0  
                   l3593 13BA                     l3585 1390                     l3569 12FC  
                   l3577 134C                     l3497 10DA                     l3489 1042  
                   l3657 2D84                     l3729 1C80                     l3681 199E  
                   l3673 1940                     l3745 1CEC                     l3665 18F8  
                   l3833 32E2                     l3905 3466                     l3921 324E  
                   l2891 24DC                     l2883 24C2                     l2867 2414  
                   l2875 245C                     l2859 23AE                     l2795 2202  
                   l2787 21D0                     l2779 21B4                     l3827 289C  
                   l3819 2858                     l3763 3518                     l3755 3502  
                   l3851 375C                     l3843 3744                     l3771 3622  
                   l2971 1F1C                     l2963 1ECA                     l2955 1E92  
                   l2947 1E54                     l2939 1E1C                     l3587 139C  
                   l3579 135E                     l3499 10E8                     l3659 2D96  
                   l3747 1D10                     l3739 1CD2                     l3683 19D8  
                   l3675 1964                     l3691 1A44                     l3667 191C  
                   l3835 32F0                     l3907 346E                     l3931 32A2  
                   l3923 3252                     l2885 24C6                     l2877 2476  
                   l2869 2420                     l2789 21E0                     l2797 220A  
                   l3765 352C                     l3757 3504                     l3845 374A  
                   l3781 363E                     l3773 3624                     l3853 333C  
                   l3861 33F8                     l2981 1FC4                     l2973 1F38  
                   l2965 1EE4                     l2957 1E9E                     l2949 1E6C  
                   l3597 13C0                     l3589 13A4                     l3693 1A64  
                   l3685 19F8                     l3677 196C                     l3669 192A  
                   l3837 3316                     l3909 348A                     l3933 32AC  
                   l3925 325C                     l3917 3246                     l2887 24D4  
                   l2879 248C                     l2799 221A                     l3791 2760  
                   l3767 3530                     l3759 3506                     l3847 3750  
                   l3839 3730                     l3783 3642                     l3775 3626  
                   l3855 3340                     l3863 33FC                     l2991 2000  
                   l2983 1FCE                     l2975 1F62                     l2967 1EF4  
                   l2959 1EAE                     l3599 13EC                     l3695 1A74  
                   l3679 197A                     l3935 32B8                     l3927 3268  
                   l3919 324A                     l3881 37AE                     l2889 24DA  
                   l3793 2776                     l3785 26FC                     l3849 3756  
                   l3777 3628                     l3769 3612                     l3857 3364  
                   l3865 3404                     l3873 3420                     l2993 200E  
                   l2985 1FDC                     l2977 1F98                     l2969 1F10  
                   l3697 1AA4                     l3689 1A06                     l3929 327C  
                   l3883 37C6                     l3787 270C                     l3891 307A  
                   l3779 362A                     l3859 3368                     l3867 340E  
                   l2995 203C                     l2987 1FEE                     l2979 1FA6  
                   l2899 1D24                     l3699 1AB4                     l3885 37C8  
                   l3797 278A                     l3789 271A                     l3893 3090  
                   l3869 3416                     l2989 1FFC                     l3887 37CA  
                   l3879 37AC                     l3799 2792                     l3895 3098  
                   l2999 2066                     l3897 30A4                     l3889 3036  
                   l3977 294A                     l3979 3434                     STR_1 0801  
                   STR_2 0811                     STR_3 0816                     STR_4 081E  
                   STR_7 081A                     STR_8 0822                     u3000 1D3E  
                   u3001 1D3A                     u3010 1D50                     u3011 1D4C  
                   u3100 1FFC                     u3020 1D60                     u2300 2DF4  
                   u3101 1FF8                     u3021 1D5C                     u2301 2DF0  
                   u3110 200E                     u3030 1DA0                     u2310 2E06  
                   u3111 200A                     u3031 1D9C                     u2311 2E02  
                   u3200 2F9E                     u3120 203C                     u3040 1DB2  
                   u2400 14EE                     u2320 2E2E                     u4000 0EAA  
                   _LATD 000F8C                     u3201 2F9A                     u3121 2038  
                   u3041 1DAE                     u2401 14EA                     u2321 2E2A  
                   u4001 0EA6                     u3210 2FC4                     u3130 2052  
                   u3050 1DC2                     u2410 152A                     u2330 2E64  
                   u4010 0EF2                     u3211 2FC0                     u3131 204E  
                   u3051 1DBE                     u2411 1526                     u2331 2E60  
                   u4011 0EEE                     u3220 2FE2                     u3300 318A  
                   u3140 2066                     u3060 1DF8                     u2500 1644  
                   u2420 1538                     u2340 1452                     u4100 1102  
                   u4020 0F02                     u3221 2FDE                     u3301 3186  
                   u3141 2062                     u3061 1DF4                     u2501 1640  
                   u2421 1534                     u2341 144E                     u4101 10FE  
                   u4021 0EFE                     u3230 2FFE                     u3310 31CA  
                   u3150 2080                     u3070 1E08                     u2510 1676  
                   u2430 15A6                     u2350 1464                     u4110 1110  
                   u4030 0F9C                     u3231 2FFA                     u3311 31C6  
                   u3151 207C                     u3071 1E04                     u2511 1672  
                   u2431 15A2                     u2351 1460                     u4111 110C  
                   u4031 0F98                     u3240 3024                     u3320 3208  
                   u3160 20C8                     u3080 1F82                     u2600 17BE  
                   u2520 1684                     u2440 15BE                     u2360 1474  
                   u3400 2A1A                     u4200 1378                     u4120 1168  
                   u4040 0FEA                     u3241 3020                     u3321 3204  
                   u3161 20C4                     u2601 17BA                     u2521 1680  
                   u2441 15B8                     u2361 1470                     u3401 2A16  
                   u4201 1374                     u4121 1164                     u4041 0FE6  
                   u3250 30FE                     u3330 323C                     u3170 20F6  
                   u3090 1FDC                     u2610 17CE                     u2530 16A2  
                   u2450 15C0                     u2370 14B6                     u3410 2A4E  
                   u4210 1390                     u4130 123A                     u4050 1012  
                   u3251 30FA                     u3331 3238                     u3171 20F2  
                   u3091 1FD8                     u2611 17CA                     u2531 169E  
                   u2371 14B2                     u4211 138C                     u4131 1236  
                   u4051 100E                     u3260 3118                     u3340 2B38  
                   u3180 2130                     u2700 18B6                     u2620 17E0  
                   u2540 16DA                     u2460 15E8                     u2380 14CC  
                   u3420 2A7C                     u3500 2F44                     u4220 13EC  
                   u4140 1256                     u4060 10B6                     u4300 2D96  
                   u3261 3114                     u3341 2B34                     u3181 212C  
                   u3085 1F78                     u2701 18B2                     u2621 17DC  
                   u2541 16D6                     u2461 15E4                     u2381 14C8  
                   u3421 2A78                     u3501 2F40                     u4221 13E8  
                   u4141 1252                     u4061 10B2                     u4301 2D92  
                   u4230 28E2                     u3190 2F84                     u3270 3132  
                   u3350 2B76                     u2710 18C8                     u2630 17F6  
                   u2550 1720                     u2470 1606                     u2390 14DE  
                   u3430 2A90                     u3510 2C4E                     u4150 1268  
                   u4070 10C8                     u4310 2DBE                     u4231 28DE  
                   u3191 2F80                     u3271 312E                     u3351 2B72  
                   u2711 18C4                     u2631 17F2                     u2551 171C  
                   u2471 1602                     u2391 14DA                     u3431 2A8C  
                   u3415 2A44                     u4151 1264                     u4071 10C4  
                   u4311 2DBA                     u2800 21CE                     u4240 2918  
                   u3280 3150                     u3360 2B94                     u2720 18E4  
                   u2640 180C                     u2560 1756                     u2480 1626  
                   u3440 2AB8                     u3520 2C6C                     u3600 356E  
                   u4160 1276                     u4080 10DA                     u4400 1C08  
                   u4320 191C                     u2801 21CA                     u4241 2914  
                   u3281 314C                     u3361 2B90                     u2721 18E0  
                   u2641 1808                     u2561 1752                     u2481 1622  
                   u3441 2AB4                     u3521 2C68                     u3601 356A  
                   u4161 1272                     u4081 10D6                     u4401 1C04  
                   u4321 1918                     u2810 21E0                     u4250 29CC  
                   u3290 3166                     u3370 2BB4                     u2650 1820  
                   u2570 1766                     u2490 1634                     u3450 2AD8  
                   u3530 2C94                     u3610 2530                     u2730 360E  
                   u4170 12AC                     u4090 10E8                     u4410 1CA4  
                   u4330 1964                     u2811 21DC                     u4251 29C8  
                   u3291 3162                     u3371 2BB0                     u2651 181C  
                   u2571 1762                     u2491 1630                     u3451 2AD4  
                   u3531 2C90                     u3515 2C44                     u2731 360A  
                   u4171 12A8                     u4091 10E4                     u4411 1CA0  
                   u4331 1960                     u2900 238A                     u2820 21F0  
                   u4500 288C                     u4420 270C                     u4260 29DE  
                   u3380 2C04                     u2660 183A                     u2580 1792  
                   u3460 2AE8                     u3540 2CBE                     u3700 26D8  
                   u3620 255E                     u2740 3722                     u4180 12DA  
                   u4340 199E                     u2901 2386                     u2821 21EC  
                   u4501 2888                     u4421 2708                     u4261 29DA  
                   u3381 2C00                     u2661 1836                     u2581 178E  
                   u3461 2AE4                     u3541 2CBA                     u3701 26D4  
                   u3621 255A                     u2741 371E                     u4181 12D6  
                   u4341 199A                     u2910 23AA                     u2830 2230  
                   u4510 289A                     u4430 271A                     u3710 36F2  
                   u3390 36A0                     u2670 1874                     u2590 17A2  
                   u3630 2580                     u3470 2EBC                     u2750 3682  
                   u4190 135E                     u4270 2D36                     u4350 1A44  
                   u2911 23A6                     u2831 222C                     u4511 2896  
                   u4431 2716                     u3711 36EC                     u3391 369C  
                   u2671 1870                     u2591 179E                     u3631 257C  
                   u3615 2526                     u3471 2EB8                     u2751 367C  
                   u4191 135A                     u4271 2D32                     u4351 1A40  
                   u2920 23BC                     u2840 2270                     u4440 2776  
                   u3720 36F4                     u2680 1886                     u3560 2CF8  
                   u3480 2EDE                     u2760 3684                     u3800 0936  
                   u4280 2D68                     u4360 1A74                     u4520 3332  
                   u2921 23B8                     u2841 226C                     u4441 2772  
                   u2681 1882                     u3561 2CF2                     u3481 2EDA  
                   u3801 0932                     u4281 2D64                     u4361 1A70  
                   u4521 332E                     u2930 23EA                     u2850 22E6  
                   u2770 2168                     u4450 27CC                     u4530 3360  
                   u3730 34B6                     u2690 1896                     u3570 2CFA  
                   u3650 25EC                     u3490 2F34                     u3810 09C6  
                   u4290 2D84                     u4370 1AB4                     u2931 23E6  
                   u2851 22E2                     u2771 2164                     u4451 27C8  
                   u3731 34B2                     u2691 1892                     u3555 2CD0  
                   u3651 25E8                     u3491 2F30                     u3811 09C2  
                   u4291 2D80                     u4371 1AB0                     u2940 2400  
                   u2860 2308                     u2780 217A                     u4460 2816  
                   u4540 3388                     u3740 34E4                     u3660 2610  
                   u3580 33E2                     u3900 0C16                     u3820 09F2  
                   u4380 1AF6                     u2941 23FC                     u2861 2304  
                   u2781 2176                     u4461 2812                     u3741 34E0  
                   u3645 2594                     u3901 0C12                     u3821 09EE  
                   u4381 1AF2                     u2950 2414                     u2870 2332  
                   u2790 218A                     u4470 2834                     u4550 3398  
                   u3670 262C                     u3646 259E                     u3590 33F4  
                   u3910 0C32                     u3830 0A7A                     u3750 0852  
                   u4390 1BA4                     u2951 2410                     u2871 232E  
                   u2791 2186                     u4471 2830                     u4607 3648  
                   u4551 3394                     u3671 2628                     u3647 25AE  
                   u3591 33F0                     u3911 0C2E                     u3831 0A76  
                   u3751 084E                     u4391 1BA0                     u2960 242E  
                   u2880 2356                     u4480 2844                     u4560 3058  
                   u3680 2680                     u3920 0C68                     u3840 0B0E  
                   u3760 08A2                     u2961 242A                     u2881 2352  
                   u4481 2840                     u4561 3054                     u4617 3736  
                   u4537 3356                     u3665 2606                     u3921 0C64  
                   u3841 0B0A                     u3761 089E                     u2970 2476  
                   u2890 236C                     u4490 2852                     u4570 3070  
                   u3690 269C                     u3930 0C8E                     u3850 0B80  
                   u3770 08B0                     u2971 2472                     u2891 2368  
                   u4491 284E                     u4571 306C                     u4627 3510  
                   u4547 337E                     u3691 2698                     u3587 33D8  
                   u3931 0C8A                     u3851 0B7C                     u3771 08AC  
                   u2980 24A6                     u4580 3090                     u3940 0CA0  
                   u3860 0BA6                     u3780 08C2                     u2981 24A2  
                   u4581 308C                     u4637 3536                     u3685 2676  
                   u3941 0C9C                     u3861 0BA2                     u3781 08BE  
                   u2990 24D4                     u3950 0CAE                     u3870 0BB8  
                   u3790 090A                     u2991 24D0                     u3951 0CAA  
                   u3871 0BB4                     u3791 0906                     u3960 0CC4  
                   u3880 0BDA                     u3961 0CC0                     u3881 0BD6  
                   u3970 0CD2                     u3890 0C00                     u3971 0CCE  
                   u3891 0BFC                     u3980 0CFC                     u3981 0CF8  
                   u4597 32C4                     u3990 0E44                     u3991 0E40  
                   _TMR1 000FCE                     _dbuf 0100                     _atoi 28AE  
                   _main 3246                     _prec 00CB                     _nout 00C7  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 2C0E                     prodh 000FF4                     prodl 000FF3  
                   start 0000          ___fldiv@new_exp 0020             ___param_bank 000000  
                  ??_pad 0017         __end_of_LCD_Char 3652            ___fltol@sign1 0009  
                  ?_atoi 0008          __end_of___fladd 18F8                    ?_main 0001  
        __end_of___fldiv 24E8          __end_of___awdiv 3036          __end_of___flneg 36C2  
                  _CCPR1 000FBE                    STR_11 0826                    STR_13 0826  
        __end_of___awmod 319C          __end_of___flmul 214E          __end_of___flsub 35CC  
        __end_of___fltol 2B0A          ___awdiv@divisor 0003                    _T1CON 000FCD  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 004A                    _TRISD 000F95  
                  _flags 00CD                    _fputc 2DE2                    _fputs 35CC  
        __end_of_isdigit 36FA                    atoi@n 0010                    pad@fp 0011  
                  atoi@s 0008                    _width 00C9                    _putch 37CE  
        __end_of_isspace 34F0          __end_of_isupper 368A                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 349E           ?___fpclassifyf 0001  
        __end_of_tolower 3586          __end_of_strncmp 2DE2          __initialization 378A  
           __end_of_atoi 2A04             __end_of_main 32DA                   ??_atoi 000A  
                 ??_main 00A9            _LCD_setCursor 33F6           LCD_setCursor@x 0006  
         LCD_setCursor@y 0003        __end_of_LCD_Begin 3764            __activetblptr 000002  
      __end_of_LCD_Print 339A             LCD_Print@str 0003                   _CCP1IE 007CEA  
                 _CCP1IF 007CF2                   ?_fputc 0001                   ?_fputs 000A  
       ___awdiv@dividend 0001                   ?_putch 0001                   _OSCCON 000FD3  
                 _TMR1ON 007E68                   _TRISC2 007CA2         __end_of___xxtofl 28AE  
           vfprintf@cfmt 0092                   ___flge 2B0A                   ___fleq 319C  
              ??___fladd 0009                   ___wmul 3764                ??___fldiv 0017  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0009                ??___flsub 0022                ??___fltol 0005  
                 _efgtoa 082A                   _floorf 24E8                   clear_0 3790  
                 clear_1 379C         ___awdiv@quotient 0007          ___awmod@divisor 0003  
         ?_LCD_setCursor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 339A                   _strlen 36FA  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 333C                ??_sprintf 0060                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 001A               ___flge@ff2 001E  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 37A2  
             ___flneg@f1 0001             _Capture_read 3036            ___rparam_used 000001  
             ___fltol@f1 0001                LCD_Char@x 0002           __pcstackCOMRAM 0001  
          __end_of_fputc 2EAC            __end_of_fputs 3610            __end_of_putch 37D0  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 00BF               __pbssBANK1 0100               ??_LCD_Char 0001  
             _efgtoa$670 0060               _efgtoa$678 0062               _efgtoa$679 0064  
                ?___flge 001A                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 003C          ??_LCD_setCursor 0004                  _CCP1CON 000FBD  
                ?_floorf 0028                  ?_strcpy 0001                  ?_strlen 0001  
         main@frecuencia 00BB                ?___xxtofl 0001                  __Hparam 0000  
                __Lparam 0000                  ___fladd 1438                  ___fldiv 214E  
                ___awdiv 2F72                  ___flneg 368A                  ___awmod 30EC  
                ___flmul 1D24                  ___flsub 3586                  ___fltol 2A04  
              ?_vfprintf 005A             __psmallconst 0800                  __pcinit 378A  
                __ramtop 0800                  __ptext0 3246                  __ptext1 344C  
                __ptext2 32DA                  __ptext3 18F8                  __ptext4 2D0C  
                __ptext5 082A                  __ptext6 3540                  __ptext7 3652  
                __ptext8 339A                  __ptext9 2EAC                  _isdigit 36C2  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _isspace 349E  
                _isupper 3652                  efgtoa@c 0042                  efgtoa@d 0072  
                efgtoa@e 008A                  efgtoa@f 003E                  efgtoa@g 0086  
                efgtoa@h 007C                  efgtoa@i 0084                  efgtoa@l 0080  
                efgtoa@m 006C                  efgtoa@n 008C                  efgtoa@p 0076  
                efgtoa@t 0066                  efgtoa@u 008E                  efgtoa@w 0078  
              _LCD_Begin 3730                  atoi@neg 000E                _LCD_Print 333C  
                _sprintf 344C                  _tolower 3540                  _strncmp 2D0C  
   end_of_initialization 37A2                  floorf@e 0036                  floorf@m 0032  
                floorf@u 0038                  floorf@x 0028                  fputc@fp 0003  
         LCD_Command@dat 0002            __Lmediumconst 0000       Capture_read@conteo 002C  
                fputs@fp 000C        __end_of_vfpfcnvrt 1D24               efgtoa@mode 007B  
             efgtoa@sign 0074                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0060  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001              ___fladd@grs 0010            ___xxtofl@sign 0009  
             ?_LCD_Begin 0001            _Capture_Begin 37AC              ___fldiv@grs 0022  
            ___fldiv@rem 001B               ?_LCD_Print 0003              ___flmul@grs 000E  
             main@buffer 00AB            ??_LCD_Command 0001           __end_of___flge 2C0E  
         __end_of___fleq 3246              vfpfcnvrt@ap 004C              vfpfcnvrt@ct 0056  
            vfpfcnvrt@fp 0048           __end_of___wmul 378A           __end_of_efgtoa 1438  
         __end_of_floorf 26FA               floorf@F526 00BF           __end_of_strcpy 33F6  
         __end_of_strlen 3730      start_initialization 378A           ?_Capture_Begin 0001  
            __end_of_pad 2F72    __end_of___fpclassifyf 2D0C              vfprintf@fmt 005C  
               ??___flge 0022                 ??___fleq 0009                 ??___wmul 0005  
               ??_efgtoa 0043                 ??_floorf 002C                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0005                ___fladd@b 0001  
              ___fldiv@a 0013                ___fldiv@b 000F      __end_of_LCD_Command 3540  
              ___flmul@a 0005                ___flmul@b 0001                ___flsub@a 001E  
              ___flsub@b 001A            __pcstackBANK0 0060              ??_LCD_Begin 0003  
            ??_LCD_Print 0005                 ?___fladd 0001                 ?___fldiv 000F  
               ?___awdiv 0001                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 0001                 ?___flsub 001A                 ?___fltol 0001  
  __end_of_LCD_setCursor 344C          ??_Capture_Begin 0001              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 0094                 ?_tolower 0007                 ?_strncmp 0001  
               _LCD_Char 3610           ___wmul@product 0005        Capture_read@data1 002E  
      Capture_read@data2 0030    LCD_setCursor@location 0007              _LCD_Command 34F0  
              _vfpfcnvrt 18F8        ___wmul@multiplier 0001               vfpfcnvrt@c 0059  
             vfpfcnvrt@f 0052            ?_Capture_read 0028                 __Hrparam 0000  
             vfprintf@ap 005E                 __Lrparam 0000               vfprintf@fp 005A  
             ?_vfpfcnvrt 0048       ___fpclassifyf@F465 00C3               sprintf@fmt 0096  
               ___xxtofl 26FA                 __ptext10 36FA                 __ptext11 35CC  
               __ptext20 1D24                 __ptext12 2DE2                 __ptext21 2B0A  
               __ptext13 37CE                 __ptext30 333C                 __ptext22 319C  
               __ptext14 24E8                 __ptext31 3610                 __ptext23 30EC  
               __ptext15 2C0E                 __ptext32 3730                 __ptext24 2F72  
               __ptext16 2A04                 __ptext33 34F0                 __ptext25 28AE  
               __ptext17 3586                 __ptext34 3036                 __ptext26 349E  
               __ptext18 1438                 __ptext35 26FA                 __ptext27 36C2  
               __ptext19 368A                 __ptext36 214E                 __ptext28 3764  
               __ptext37 37AC                 __ptext29 33F6               strcpy@dest 0001  
         ??_Capture_read 002C                 efgtoa@fp 003C                 efgtoa@ne 006A  
               efgtoa@pp 0068                 efgtoa@ou 006E                 isa$xinst 000000  
               _vfprintf 32DA              _isspace$757 0007                 isdigit@c 0001  
              sprintf@ap 009C                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 007A              ??_vfpfcnvrt 004E                 sprintf@f 009E  
               tolower@c 0007                 sprintf@s 0094                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F  

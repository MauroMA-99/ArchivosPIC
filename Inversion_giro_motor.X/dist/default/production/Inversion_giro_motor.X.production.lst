

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 08 15:17:10 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _INTCON2	set	4081
    53  0000                     _TRISB	set	3987
    54  0000                     _LATD	set	3980
    55  0000                     _TRISD	set	3989
    56  0000                     _OSCCON	set	4051
    57  0000                     _ADCON1	set	4033
    58  0000                     _INT0IE	set	32660
    59  0000                     _GIE	set	32663
    60  0000                     _INT0IF	set	32657
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  000076                     __pcinit:
    66                           	callstack 0
    67  000076                     start_initialization:
    68                           	callstack 0
    69  000076                     __initialization:
    70                           	callstack 0
    71  000076                     end_of_initialization:
    72                           	callstack 0
    73  000076                     __end_of__initialization:
    74                           	callstack 0
    75  000076  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  000078  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  00007A  0100               	movlb	0
    78  00007C  EF1A  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	cstackCOMRAM
    81  000001                     __pcstackCOMRAM:
    82                           	callstack 0
    83  000001                     ??_INT0_ISR:
    84  000001                     
    85                           ; 2 bytes @ 0x0
    86  000001                     	ds	2
    87  000003                     
    88                           ; 1 bytes @ 0x2
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 14 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  2   28[None  ] int 
   101 ;; Registers used:
   102 ;;		wreg, status,2, status,0, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   108 ;;      Params:         0       0       0       0       0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    3
   114 ;; This function calls:
   115 ;;		_INT0_Begin
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  000034                     __ptext0:
   123                           	callstack 0
   124  000034                     _main:
   125                           	callstack 28
   126  000034                     
   127                           ;main.c: 16:     ADCON1=0x0F;
   128  000034  0E0F               	movlw	15
   129  000036  6EC1               	movwf	193,c	;volatile
   130                           
   131                           ;main.c: 17:     OSCCON=0x72;
   132  000038  0E72               	movlw	114
   133  00003A  6ED3               	movwf	211,c	;volatile
   134  00003C                     
   135                           ;main.c: 18:     TRISD &=~((1<<0)|(1<<1));
   136  00003C  0EFC               	movlw	252
   137  00003E  1695               	andwf	149,f,c	;volatile
   138  000040                     
   139                           ;main.c: 19:     LATD &=~(1<<0);
   140  000040  908C               	bcf	140,0,c	;volatile
   141  000042                     
   142                           ;main.c: 20:     LATD |=(1<<1);
   143  000042  828C               	bsf	140,1,c	;volatile
   144  000044                     
   145                           ;main.c: 21:     INT0_Begin();
   146  000044  EC34  F000         	call	_INT0_Begin	;wreg free
   147  000048                     l29:
   148  000048  EF24  F000         	goto	l29
   149  00004C  EF07  F000         	goto	start
   150  000050                     __end_of_main:
   151                           	callstack 0
   152                           
   153 ;; *************** function _INT0_Begin *****************
   154 ;; Defined at:
   155 ;;		line 36 in file "main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, status,0
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   169 ;;      Params:         0       0       0       0       0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels used:    1
   175 ;; Hardware stack levels required when called:    2
   176 ;; This function calls:
   177 ;;		Nothing
   178 ;; This function is called by:
   179 ;;		_main
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text1
   184  000068                     __ptext1:
   185                           	callstack 0
   186  000068                     _INT0_Begin:
   187                           	callstack 28
   188  000068                     
   189                           ;main.c: 38:     TRISB |= (1<<0);
   190  000068  8093               	bsf	147,0,c	;volatile
   191  00006A                     
   192                           ;main.c: 39:     GIE=1;
   193  00006A  8EF2               	bsf	4082,7,c	;volatile
   194  00006C                     
   195                           ;main.c: 40:     INT0IE=1;
   196  00006C  88F2               	bsf	4082,4,c	;volatile
   197  00006E                     
   198                           ;main.c: 41:     INT0IF=0;
   199  00006E  92F2               	bcf	4082,1,c	;volatile
   200  000070                     
   201                           ;main.c: 42:     INTCON2=0x00;
   202  000070  0E00               	movlw	0
   203  000072  6EF1               	movwf	241,c	;volatile
   204  000074  0012               	return		;funcret
   205  000076                     __end_of_INT0_Begin:
   206                           	callstack 0
   207                           
   208 ;; *************** function _ISR *****************
   209 ;; Defined at:
   210 ;;		line 29 in file "main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   224 ;;      Params:         0       0       0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0       0       0
   226 ;;      Temps:          0       0       0       0       0       0       0       0       0
   227 ;;      Totals:         0       0       0       0       0       0       0       0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels used:    1
   230 ;; Hardware stack levels required when called:    1
   231 ;; This function calls:
   232 ;;		_INT0_ISR
   233 ;; This function is called by:
   234 ;;		Interrupt level 2
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	intcode
   239  000008                     __pintcode:
   240                           	callstack 0
   241  000008                     _ISR:
   242                           	callstack 28
   243                           
   244                           ;incstack = 0
   245  000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   246  00000A  ED28  F000         	call	int_func,f	;refresh shadow registers
   247                           
   248                           	psect	intcode_body
   249  000050                     __pintcode_body:
   250                           	callstack 28
   251  000050                     int_func:
   252                           	callstack 28
   253  000050  0006               	pop		; remove dummy address from shadow register refresh
   254  000052                     
   255                           ;main.c: 31:     if(INT0IF){
   256  000052  A2F2               	btfss	4082,1,c	;volatile
   257  000054  EF2E  F000         	goto	i2u1_41
   258  000058  EF30  F000         	goto	i2u1_40
   259  00005C                     i2u1_41:
   260  00005C  EF32  F000         	goto	i2l38
   261  000060                     i2u1_40:
   262  000060                     
   263                           ;main.c: 32:         INT0_ISR();
   264  000060  EC09  F000         	call	_INT0_ISR	;wreg free
   265  000064                     i2l38:
   266  000064  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267  000066  0011               	retfie		f
   268  000068                     __end_of_ISR:
   269                           	callstack 0
   270                           
   271 ;; *************** function _INT0_ISR *****************
   272 ;; Defined at:
   273 ;;		line 45 in file "main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         0       0       0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_ISR
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           	psect	text3
   301  000012                     __ptext3:
   302                           	callstack 0
   303  000012                     _INT0_ISR:
   304                           	callstack 28
   305  000012                     
   306                           ;main.c: 46:     LATD ^=(1<<0);
   307  000012  0E01               	movlw	1
   308  000014  1A8C               	xorwf	140,f,c	;volatile
   309                           
   310                           ;main.c: 47:     LATD ^=(1<<1);
   311  000016  0E02               	movlw	2
   312  000018  1A8C               	xorwf	140,f,c	;volatile
   313  00001A                     
   314                           ;main.c: 48:     _delay((unsigned long)((300)*(8000000/4000.0)));
   315  00001A  0E04               	movlw	4
   316  00001C  6E02               	movwf	(??_INT0_ISR+1)^0,c
   317  00001E  0E0C               	movlw	12
   318  000020  6E01               	movwf	??_INT0_ISR^0,c
   319  000022  0E34               	movlw	52
   320  000024                     i2u2_47:
   321  000024  2EE8               	decfsz	wreg,f,c
   322  000026  D7FE               	bra	i2u2_47
   323  000028  2E01               	decfsz	??_INT0_ISR^0,f,c
   324  00002A  D7FC               	bra	i2u2_47
   325  00002C  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
   326  00002E  D7FA               	bra	i2u2_47
   327  000030                     
   328                           ;main.c: 49:     INT0IF=0;
   329  000030  92F2               	bcf	4082,1,c	;volatile
   330  000032  0012               	return		;funcret
   331  000034                     __end_of_INT0_ISR:
   332                           	callstack 0
   333  0000                     
   334                           	psect	rparam
   335  0000                     
   336                           	psect	temp
   337  000003                     btemp:
   338                           	callstack 0
   339  000003                     	ds	1
   340  0000                     int$flags	set	btemp
   341  0000                     wtemp8	set	btemp+1
   342  0000                     ttemp5	set	btemp+1
   343  0000                     ttemp6	set	btemp+4
   344  0000                     ttemp7	set	btemp+8
   345                           
   346                           	psect	idloc
   347                           
   348                           ;Config register IDLOC0 @ 0x200000
   349                           ;	unspecified, using default values
   350  200000                     	org	2097152
   351  200000  FF                 	db	255
   352                           
   353                           ;Config register IDLOC1 @ 0x200001
   354                           ;	unspecified, using default values
   355  200001                     	org	2097153
   356  200001  FF                 	db	255
   357                           
   358                           ;Config register IDLOC2 @ 0x200002
   359                           ;	unspecified, using default values
   360  200002                     	org	2097154
   361  200002  FF                 	db	255
   362                           
   363                           ;Config register IDLOC3 @ 0x200003
   364                           ;	unspecified, using default values
   365  200003                     	org	2097155
   366  200003  FF                 	db	255
   367                           
   368                           ;Config register IDLOC4 @ 0x200004
   369                           ;	unspecified, using default values
   370  200004                     	org	2097156
   371  200004  FF                 	db	255
   372                           
   373                           ;Config register IDLOC5 @ 0x200005
   374                           ;	unspecified, using default values
   375  200005                     	org	2097157
   376  200005  FF                 	db	255
   377                           
   378                           ;Config register IDLOC6 @ 0x200006
   379                           ;	unspecified, using default values
   380  200006                     	org	2097158
   381  200006  FF                 	db	255
   382                           
   383                           ;Config register IDLOC7 @ 0x200007
   384                           ;	unspecified, using default values
   385  200007                     	org	2097159
   386  200007  FF                 	db	255
   387                           
   388                           	psect	config
   389                           
   390                           ;Config register CONFIG1L @ 0x300000
   391                           ;	PLL Prescaler Selection bits
   392                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   393                           ;	System Clock Postscaler Selection bits
   394                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   395                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   396                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   397  300000                     	org	3145728
   398  300000  00                 	db	0
   399                           
   400                           ;Config register CONFIG1H @ 0x300001
   401                           ;	Oscillator Selection bits
   402                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   403                           ;	Fail-Safe Clock Monitor Enable bit
   404                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   405                           ;	Internal/External Oscillator Switchover bit
   406                           ;	IESO = OFF, Oscillator Switchover mode disabled
   407  300001                     	org	3145729
   408  300001  09                 	db	9
   409                           
   410                           ;Config register CONFIG2L @ 0x300002
   411                           ;	Power-up Timer Enable bit
   412                           ;	PWRT = OFF, PWRT disabled
   413                           ;	Brown-out Reset Enable bits
   414                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   415                           ;	Brown-out Reset Voltage bits
   416                           ;	BORV = 3, Minimum setting 2.05V
   417                           ;	USB Voltage Regulator Enable bit
   418                           ;	VREGEN = OFF, USB voltage regulator disabled
   419  300002                     	org	3145730
   420  300002  1F                 	db	31
   421                           
   422                           ;Config register CONFIG2H @ 0x300003
   423                           ;	Watchdog Timer Enable bit
   424                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   425                           ;	Watchdog Timer Postscale Select bits
   426                           ;	WDTPS = 32768, 1:32768
   427  300003                     	org	3145731
   428  300003  1E                 	db	30
   429                           
   430                           ; Padding undefined space
   431  300004                     	org	3145732
   432  300004  FF                 	db	255
   433                           
   434                           ;Config register CONFIG3H @ 0x300005
   435                           ;	CCP2 MUX bit
   436                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   437                           ;	PORTB A/D Enable bit
   438                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   439                           ;	Low-Power Timer 1 Oscillator Enable bit
   440                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   441                           ;	MCLR Pin Enable bit
   442                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   443  300005                     	org	3145733
   444  300005  01                 	db	1
   445                           
   446                           ;Config register CONFIG4L @ 0x300006
   447                           ;	Stack Full/Underflow Reset Enable bit
   448                           ;	STVREN = ON, Stack full/underflow will cause Reset
   449                           ;	Single-Supply ICSP Enable bit
   450                           ;	LVP = OFF, Single-Supply ICSP disabled
   451                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   452                           ;	ICPRT = OFF, ICPORT disabled
   453                           ;	Extended Instruction Set Enable bit
   454                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   455                           ;	Background Debugger Enable bit
   456                           ;	DEBUG = 0x1, unprogrammed default
   457  300006                     	org	3145734
   458  300006  81                 	db	129
   459                           
   460                           ; Padding undefined space
   461  300007                     	org	3145735
   462  300007  FF                 	db	255
   463                           
   464                           ;Config register CONFIG5L @ 0x300008
   465                           ;	Code Protection bit
   466                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   467                           ;	Code Protection bit
   468                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   469                           ;	Code Protection bit
   470                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   471                           ;	Code Protection bit
   472                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   473  300008                     	org	3145736
   474  300008  0F                 	db	15
   475                           
   476                           ;Config register CONFIG5H @ 0x300009
   477                           ;	Boot Block Code Protection bit
   478                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   479                           ;	Data EEPROM Code Protection bit
   480                           ;	CPD = OFF, Data EEPROM is not code-protected
   481  300009                     	org	3145737
   482  300009  C0                 	db	192
   483                           
   484                           ;Config register CONFIG6L @ 0x30000A
   485                           ;	Write Protection bit
   486                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   487                           ;	Write Protection bit
   488                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   489                           ;	Write Protection bit
   490                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   491                           ;	Write Protection bit
   492                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   493  30000A                     	org	3145738
   494  30000A  0F                 	db	15
   495                           
   496                           ;Config register CONFIG6H @ 0x30000B
   497                           ;	Configuration Register Write Protection bit
   498                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   499                           ;	Boot Block Write Protection bit
   500                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   501                           ;	Data EEPROM Write Protection bit
   502                           ;	WRTD = OFF, Data EEPROM is not write-protected
   503  30000B                     	org	3145739
   504  30000B  E0                 	db	224
   505                           
   506                           ;Config register CONFIG7L @ 0x30000C
   507                           ;	Table Read Protection bit
   508                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   509                           ;	Table Read Protection bit
   510                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   511                           ;	Table Read Protection bit
   512                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   513                           ;	Table Read Protection bit
   514                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   515  30000C                     	org	3145740
   516  30000C  0F                 	db	15
   517                           
   518                           ;Config register CONFIG7H @ 0x30000D
   519                           ;	Boot Block Table Read Protection bit
   520                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   521  30000D                     	org	3145741
   522  30000D  40                 	db	64
   523                           tosu	equ	0xFFF
   524                           tosh	equ	0xFFE
   525                           tosl	equ	0xFFD
   526                           stkptr	equ	0xFFC
   527                           pclatu	equ	0xFFB
   528                           pclath	equ	0xFFA
   529                           pcl	equ	0xFF9
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           prodh	equ	0xFF4
   535                           prodl	equ	0xFF3
   536                           indf0	equ	0xFEF
   537                           postinc0	equ	0xFEE
   538                           postdec0	equ	0xFED
   539                           preinc0	equ	0xFEC
   540                           plusw0	equ	0xFEB
   541                           fsr0h	equ	0xFEA
   542                           fsr0l	equ	0xFE9
   543                           wreg	equ	0xFE8
   544                           indf1	equ	0xFE7
   545                           postinc1	equ	0xFE6
   546                           postdec1	equ	0xFE5
   547                           preinc1	equ	0xFE4
   548                           plusw1	equ	0xFE3
   549                           fsr1h	equ	0xFE2
   550                           fsr1l	equ	0xFE1
   551                           bsr	equ	0xFE0
   552                           indf2	equ	0xFDF
   553                           postinc2	equ	0xFDE
   554                           postdec2	equ	0xFDD
   555                           preinc2	equ	0xFDC
   556                           plusw2	equ	0xFDB
   557                           fsr2h	equ	0xFDA
   558                           fsr2l	equ	0xFD9
   559                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_INT0_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _INT0_Begin
 ---------------------------------------------------------------------------------
 (1) _INT0_Begin                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  0     0      0       0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_Begin

 _ISR (ROOT)
   _INT0_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 08 15:17:10 2022

                     l30 0048                       l41 0074                       l29 0048  
            ?_INT0_Begin 0001                      l720 0068                      l722 006A  
                    l724 006C                      l740 0040                      l726 006E  
                    l742 0042                      l728 0070                      l744 0044  
                    l736 0034                      l738 003C                      _GIE 007F97  
                    _ISR 0008                      wreg 000FE8                     ?_ISR 0001  
                   _LATD 000F8C                     i2l44 0032                     i2l38 0064  
                   _main 0034                     btemp 0003                     start 000E  
           ___param_bank 000000                    ??_ISR 0003         __end_of_INT0_ISR 0034  
                  ?_main 0001                    i2l730 0012                    i2l732 001A  
                  i2l734 0030                    i2l746 0052                    i2l748 0060  
                  _TRISB 000F93                    _TRISD 000F95      __size_of_INT0_Begin 000E  
                  ttemp5 0004                    ttemp6 0007                    ttemp7 000B  
                  wtemp8 0004          __initialization 0076             __end_of_main 0050  
                 ??_main 0003            __activetblptr 000000                   _ADCON1 000FC1  
                 _INT0IE 007F94                   _INT0IF 007F91                   _OSCCON 000FD3  
                 i2u1_40 0060                   i2u1_41 005C                   i2u2_47 0024  
             __accesstop 0060  __end_of__initialization 0076                ?_INT0_ISR 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001             ??_INT0_Begin 0003  
             ??_INT0_ISR 0001       __end_of_INT0_Begin 0076                  _INTCON2 000FF1  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0076  
                __ramtop 0800                  __ptext0 0034                  __ptext1 0068  
                __ptext3 0012             __size_of_ISR 0060           __pintcode_body 0050  
   end_of_initialization 0076                  int_func 0050        __size_of_INT0_ISR 0022  
    start_initialization 0076              __end_of_ISR 0068                __pintcode 0008  
               _INT0_ISR 0012                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 001C                 int$flags 0003               _INT0_Begin 0068  
               intlevel2 0000  

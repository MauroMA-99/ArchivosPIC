

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jun 22 12:26:26 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _ADRES	set	4035
    89  0000                     _LATD	set	3980
    90  0000                     _TRISD	set	3989
    91  0000                     _ADCON0	set	4034
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADCON1	set	4033
    94  0000                     _OSCCON	set	4051
    95  0000                     _GO_DONE	set	32273
    96  0000                     _ADON	set	32272
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	callstack 0
   101  000800  00                 	db	0
   102  000801                     STR_1:
   103  000801  56                 	db	86	;'V'
   104  000802  6F                 	db	111	;'o'
   105  000803  6C                 	db	108	;'l'
   106  000804  74                 	db	116	;'t'
   107  000805  61                 	db	97	;'a'
   108  000806  6A                 	db	106	;'j'
   109  000807  65                 	db	101	;'e'
   110  000808  20                 	db	32
   111  000809  65                 	db	101	;'e'
   112  00080A  73                 	db	115	;'s'
   113  00080B  20                 	db	32
   114  00080C  3A                 	db	58	;':'
   115  00080D  20                 	db	32
   116  00080E  00                 	db	0
   117  00080F                     STR_2:
   118  00080F  56                 	db	86	;'V'
   119  000810  3D                 	db	61	;'='
   120  000811  25                 	db	37
   121  000812  2E                 	db	46
   122  000813  32                 	db	50	;'2'
   123  000814  66                 	db	102	;'f'
   124  000815  00                 	db	0
   125  000816                     STR_3:
   126  000816  49                 	db	73	;'I'
   127  000817  4E                 	db	78	;'N'
   128  000818  46                 	db	70	;'F'
   129  000819  00                 	db	0
   130  00081A                     STR_7:
   131  00081A  4E                 	db	78	;'N'
   132  00081B  41                 	db	65	;'A'
   133  00081C  4E                 	db	78	;'N'
   134  00081D  00                 	db	0
   135  00081E                     STR_4:
   136  00081E  69                 	db	105	;'i'
   137  00081F  6E                 	db	110	;'n'
   138  000820  66                 	db	102	;'f'
   139  000821  00                 	db	0
   140  000822                     STR_8:
   141  000822  6E                 	db	110	;'n'
   142  000823  61                 	db	97	;'a'
   143  000824  6E                 	db	110	;'n'
   144  000825  00                 	db	0
   145  000826                     STR_11:
   146  000826  6C                 	db	108	;'l'
   147  000827  66                 	db	102	;'f'
   148  000828  00                 	db	0
   149  000829  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154  00380A                     __pcinit:
   155                           	callstack 0
   156  00380A                     start_initialization:
   157                           	callstack 0
   158  00380A                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Clear objects allocated to BANK1 (80 bytes)
   162  00380A  EE01  F000         	lfsr	0,__pbssBANK1
   163  00380E  0E50               	movlw	80
   164  003810                     clear_0:
   165  003810  6AEE               	clrf	postinc0,c
   166  003812  06E8               	decf	wreg,f,c
   167  003814  E1FD               	bnz	clear_0
   168                           
   169                           ; Clear objects allocated to BANK0 (16 bytes)
   170  003816  EE00  F0BC         	lfsr	0,__pbssBANK0
   171  00381A  0E10               	movlw	16
   172  00381C                     clear_1:
   173  00381C  6AEE               	clrf	postinc0,c
   174  00381E  06E8               	decf	wreg,f,c
   175  003820  E1FD               	bnz	clear_1
   176  003822                     end_of_initialization:
   177                           	callstack 0
   178  003822                     __end_of__initialization:
   179                           	callstack 0
   180  003822  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  003824  6EF8               	movwf	tblptru,c
   182  003826  0100               	movlb	0
   183  003828  EF4D  F017         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssBANK0
   186  0000BC                     __pbssBANK0:
   187                           	callstack 0
   188  0000BC                     floorf@F527:
   189                           	callstack 0
   190  0000BC                     	ds	4
   191  0000C0                     ___fpclassifyf@F465:
   192                           	callstack 0
   193  0000C0                     	ds	4
   194  0000C4                     _nout:
   195                           	callstack 0
   196  0000C4                     	ds	2
   197  0000C6                     _width:
   198                           	callstack 0
   199  0000C6                     	ds	2
   200  0000C8                     _prec:
   201                           	callstack 0
   202  0000C8                     	ds	2
   203  0000CA                     _flags:
   204                           	callstack 0
   205  0000CA                     	ds	2
   206                           
   207                           	psect	bssBANK1
   208  000100                     __pbssBANK1:
   209                           	callstack 0
   210  000100                     _dbuf:
   211                           	callstack 0
   212  000100                     	ds	80
   213                           
   214                           	psect	cstackBANK0
   215  000060                     __pcstackBANK0:
   216                           	callstack 0
   217  000060                     _efgtoa$670:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221  000060                     	ds	2
   222  000062                     _efgtoa$671:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x2
   226  000062                     	ds	2
   227  000064                     _efgtoa$676:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x4
   231  000064                     	ds	2
   232  000066                     _efgtoa$680:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x6
   236  000066                     	ds	2
   237  000068                     _efgtoa$681:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x8
   241  000068                     	ds	2
   242  00006A                     _efgtoa$682:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xA
   246  00006A                     	ds	2
   247  00006C                     efgtoa@t:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0xC
   251  00006C                     	ds	2
   252  00006E                     efgtoa@pp:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xE
   256  00006E                     	ds	2
   257  000070                     efgtoa@ne:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x10
   261  000070                     	ds	2
   262  000072                     efgtoa@m:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x12
   266  000072                     	ds	2
   267  000074                     efgtoa@ou:
   268                           	callstack 0
   269                           
   270                           ; 4 bytes @ 0x14
   271  000074                     	ds	4
   272  000078                     efgtoa@d:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x18
   276  000078                     	ds	2
   277  00007A                     efgtoa@sign:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x1A
   281  00007A                     	ds	2
   282  00007C                     efgtoa@p:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x1C
   286  00007C                     	ds	2
   287  00007E                     efgtoa@w:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x1E
   291  00007E                     	ds	2
   292  000080                     efgtoa@nmode:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x20
   296  000080                     	ds	1
   297  000081                     efgtoa@mode:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x21
   301  000081                     	ds	1
   302  000082                     efgtoa@h:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x22
   306  000082                     	ds	4
   307  000086                     efgtoa@l:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x26
   311  000086                     	ds	4
   312  00008A                     efgtoa@i:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x2A
   316  00008A                     	ds	2
   317  00008C                     efgtoa@g:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x2C
   321  00008C                     	ds	4
   322  000090                     efgtoa@e:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x30
   326  000090                     	ds	2
   327  000092                     efgtoa@n:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x32
   331  000092                     	ds	2
   332  000094                     efgtoa@u:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x34
   336  000094                     	ds	4
   337  000098                     ?_vfprintf:
   338                           	callstack 0
   339  000098                     vfprintf@fp:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x38
   343  000098                     	ds	2
   344  00009A                     vfprintf@fmt:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x3A
   348  00009A                     	ds	2
   349  00009C                     vfprintf@ap:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x3C
   353  00009C                     	ds	2
   354  00009E                     ?_sprintf:
   355                           	callstack 0
   356  00009E                     sprintf@s:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x3E
   360  00009E                     	ds	2
   361  0000A0                     sprintf@fmt:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x40
   365  0000A0                     	ds	8
   366  0000A8                     sprintf@ap:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x48
   370  0000A8                     	ds	2
   371  0000AA                     sprintf@f:
   372                           	callstack 0
   373                           
   374                           ; 6 bytes @ 0x4A
   375  0000AA                     	ds	6
   376  0000B0                     main@buffer:
   377                           	callstack 0
   378                           
   379                           ; 8 bytes @ 0x50
   380  0000B0                     	ds	8
   381  0000B8                     main@voltaje1:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x58
   385  0000B8                     	ds	4
   386                           
   387                           	psect	cstackCOMRAM
   388  000001                     __pcstackCOMRAM:
   389                           	callstack 0
   390  000001                     ??_LCD_Command:
   391  000001                     ??_LCD_Char:
   392  000001                     ?_ADC_Read:
   393                           	callstack 0
   394  000001                     ?_strlen:
   395                           	callstack 0
   396  000001                     ?___fpclassifyf:
   397                           	callstack 0
   398  000001                     ?_isupper:
   399                           	callstack 0
   400  000001                     ?_isdigit:
   401                           	callstack 0
   402  000001                     ?_strncmp:
   403                           	callstack 0
   404  000001                     ?_isspace:
   405                           	callstack 0
   406  000001                     ?___wmul:
   407                           	callstack 0
   408  000001                     ?___awdiv:
   409                           	callstack 0
   410  000001                     ?___awmod:
   411                           	callstack 0
   412  000001                     ?___fladd:
   413                           	callstack 0
   414  000001                     ?___fldiv:
   415                           	callstack 0
   416  000001                     ?___flneg:
   417                           	callstack 0
   418  000001                     ?___fltol:
   419                           	callstack 0
   420  000001                     ADC_Begin@N_canales:
   421                           	callstack 0
   422  000001                     ___wmul@multiplier:
   423                           	callstack 0
   424  000001                     ___awdiv@dividend:
   425                           	callstack 0
   426  000001                     ___awmod@dividend:
   427                           	callstack 0
   428  000001                     isdigit@c:
   429                           	callstack 0
   430  000001                     isspace@c:
   431                           	callstack 0
   432  000001                     isupper@c:
   433                           	callstack 0
   434  000001                     fputc@c:
   435                           	callstack 0
   436  000001                     strcpy@dest:
   437                           	callstack 0
   438  000001                     strlen@s:
   439                           	callstack 0
   440  000001                     strncmp@_l:
   441                           	callstack 0
   442  000001                     ___fleq@ff1:
   443                           	callstack 0
   444  000001                     ___flneg@f1:
   445                           	callstack 0
   446  000001                     ___fltol@f1:
   447                           	callstack 0
   448  000001                     ___fladd@b:
   449                           	callstack 0
   450  000001                     ___fldiv@b:
   451                           	callstack 0
   452  000001                     ___fpclassifyf@x:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x0
   456  000001                     	ds	1
   457  000002                     LCD_Command@dat:
   458                           	callstack 0
   459  000002                     LCD_Char@x:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463  000002                     	ds	1
   464  000003                     ??_LCD_Begin:
   465  000003                     ??_isupper:
   466  000003                     ??_isdigit:
   467  000003                     ??_isspace:
   468  000003                     LCD_setCursor@y:
   469                           	callstack 0
   470  000003                     ADC_Read@valor:
   471                           	callstack 0
   472  000003                     LCD_Print@str:
   473                           	callstack 0
   474  000003                     ___wmul@multiplicand:
   475                           	callstack 0
   476  000003                     ___awdiv@divisor:
   477                           	callstack 0
   478  000003                     ___awmod@divisor:
   479                           	callstack 0
   480  000003                     fputc@fp:
   481                           	callstack 0
   482  000003                     strcpy@src:
   483                           	callstack 0
   484  000003                     strlen@a:
   485                           	callstack 0
   486  000003                     strncmp@_r:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x2
   490  000003                     	ds	1
   491  000004                     ??_LCD_setCursor:
   492                           
   493                           ; 1 bytes @ 0x3
   494  000004                     	ds	1
   495  000005                     ??_fputc:
   496  000005                     ??___fpclassifyf:
   497  000005                     ??_strcpy:
   498  000005                     ??___fltol:
   499  000005                     ADC_Read@canal:
   500                           	callstack 0
   501  000005                     ___awdiv@counter:
   502                           	callstack 0
   503  000005                     ___awmod@counter:
   504                           	callstack 0
   505  000005                     ___wmul@product:
   506                           	callstack 0
   507  000005                     strncmp@n:
   508                           	callstack 0
   509  000005                     ___fleq@ff2:
   510                           	callstack 0
   511  000005                     ___fladd@a:
   512                           	callstack 0
   513  000005                     ___fldiv@a:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x4
   517  000005                     	ds	1
   518  000006                     ?___xxtofl:
   519                           	callstack 0
   520  000006                     LCD_setCursor@x:
   521                           	callstack 0
   522  000006                     ___awdiv@sign:
   523                           	callstack 0
   524  000006                     ___awmod@sign:
   525                           	callstack 0
   526  000006                     ___xxtofl@val:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x5
   530  000006                     	ds	1
   531  000007                     ??_strncmp:
   532  000007                     ?_tolower:
   533                           	callstack 0
   534  000007                     LCD_setCursor@location:
   535                           	callstack 0
   536  000007                     _isspace$765:
   537                           	callstack 0
   538  000007                     ___awdiv@quotient:
   539                           	callstack 0
   540  000007                     strcpy@s:
   541                           	callstack 0
   542  000007                     tolower@c:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546  000007                     	ds	1
   547  000008                     ?_atoi:
   548                           	callstack 0
   549  000008                     atoi@s:
   550                           	callstack 0
   551  000008                     strncmp@l:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x7
   555  000008                     	ds	1
   556  000009                     ??___fladd:
   557  000009                     ??___fldiv:
   558  000009                     ??_tolower:
   559  000009                     ??___fleq:
   560  000009                     ___fltol@sign1:
   561                           	callstack 0
   562  000009                     ___fpclassifyf@e:
   563                           	callstack 0
   564  000009                     strcpy@d:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x8
   568  000009                     	ds	1
   569  00000A                     ??_atoi:
   570  00000A                     ??___xxtofl:
   571  00000A                     ___fltol@exp1:
   572                           	callstack 0
   573  00000A                     fputs@s:
   574                           	callstack 0
   575  00000A                     strncmp@r:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x9
   579  00000A                     	ds	1
   580  00000B                     ___fpclassifyf@u:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0xA
   584  00000B                     	ds	1
   585  00000C                     fputs@fp:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0xB
   589  00000C                     	ds	1
   590  00000D                     ___fladd@signs:
   591                           	callstack 0
   592  00000D                     _tolower$829:
   593                           	callstack 0
   594  00000D                     ___fldiv@rem:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0xC
   598  00000D                     	ds	1
   599  00000E                     ___fladd@aexp:
   600                           	callstack 0
   601  00000E                     ___xxtofl@sign:
   602                           	callstack 0
   603  00000E                     fputs@c:
   604                           	callstack 0
   605  00000E                     atoi@neg:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0xD
   609  00000E                     	ds	1
   610  00000F                     ___fladd@bexp:
   611                           	callstack 0
   612  00000F                     ___xxtofl@exp:
   613                           	callstack 0
   614  00000F                     fputs@i:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xE
   618  00000F                     	ds	1
   619  000010                     ___fladd@grs:
   620                           	callstack 0
   621  000010                     _atoi$734:
   622                           	callstack 0
   623  000010                     ___xxtofl@arg:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0xF
   627  000010                     	ds	1
   628  000011                     ?_pad:
   629                           	callstack 0
   630  000011                     ___fldiv@sign:
   631                           	callstack 0
   632  000011                     pad@fp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x10
   636  000011                     	ds	1
   637  000012                     ___fldiv@new_exp:
   638                           	callstack 0
   639  000012                     _atoi$736:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x11
   643  000012                     	ds	1
   644  000013                     pad@buf:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x12
   648  000013                     	ds	1
   649  000014                     ?___flmul:
   650                           	callstack 0
   651  000014                     _atoi$735:
   652                           	callstack 0
   653  000014                     ___fldiv@grs:
   654                           	callstack 0
   655  000014                     ___flmul@b:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x13
   659  000014                     	ds	1
   660  000015                     pad@p:
   661                           	callstack 0
   662  000015                     atoi@n:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x14
   666  000015                     	ds	2
   667  000017                     ??_pad:
   668                           
   669                           ; 1 bytes @ 0x16
   670  000017                     	ds	1
   671  000018                     ___fldiv@bexp:
   672                           	callstack 0
   673  000018                     pad@i:
   674                           	callstack 0
   675  000018                     ___flmul@a:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x17
   679  000018                     	ds	1
   680  000019                     ___fldiv@aexp:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x18
   684  000019                     	ds	1
   685  00001A                     ?_floorf:
   686                           	callstack 0
   687  00001A                     pad@w:
   688                           	callstack 0
   689  00001A                     floorf@x:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x19
   693  00001A                     	ds	2
   694  00001C                     ??___flmul:
   695                           
   696                           ; 1 bytes @ 0x1B
   697  00001C                     	ds	2
   698  00001E                     ??_floorf:
   699                           
   700                           ; 1 bytes @ 0x1D
   701  00001E                     	ds	2
   702  000020                     ___flmul@sign:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x1F
   706  000020                     	ds	1
   707  000021                     ___flmul@grs:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x20
   711  000021                     	ds	3
   712  000024                     floorf@m:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x23
   716  000024                     	ds	1
   717  000025                     ___flmul@aexp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x24
   721  000025                     	ds	1
   722  000026                     ___flmul@bexp:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x25
   726  000026                     	ds	1
   727  000027                     ___flmul@prod:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x26
   731  000027                     	ds	1
   732  000028                     floorf@e:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x27
   736  000028                     	ds	2
   737  00002A                     floorf@u:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x29
   741  00002A                     	ds	1
   742  00002B                     ___flmul@temp:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2A
   746  00002B                     	ds	2
   747  00002D                     ?___flsub:
   748                           	callstack 0
   749  00002D                     ___flge@ff1:
   750                           	callstack 0
   751  00002D                     ___flsub@b:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x2C
   755  00002D                     	ds	4
   756  000031                     ___flge@ff2:
   757                           	callstack 0
   758  000031                     ___flsub@a:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x30
   762  000031                     	ds	4
   763  000035                     ??___flge:
   764                           
   765                           ; 1 bytes @ 0x34
   766  000035                     	ds	4
   767  000039                     ?_efgtoa:
   768                           	callstack 0
   769  000039                     efgtoa@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x38
   773  000039                     	ds	2
   774  00003B                     efgtoa@f:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x3A
   778  00003B                     	ds	4
   779  00003F                     efgtoa@c:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x3E
   783  00003F                     	ds	1
   784  000040                     ??_efgtoa:
   785                           
   786                           ; 1 bytes @ 0x3F
   787  000040                     	ds	5
   788  000045                     ?_vfpfcnvrt:
   789                           	callstack 0
   790  000045                     vfpfcnvrt@fp:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x44
   794  000045                     	ds	2
   795  000047                     vfpfcnvrt@fmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x46
   799  000047                     	ds	2
   800  000049                     vfpfcnvrt@ap:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x48
   804  000049                     	ds	2
   805  00004B                     ??_vfpfcnvrt:
   806                           
   807                           ; 1 bytes @ 0x4A
   808  00004B                     	ds	4
   809  00004F                     _vfpfcnvrt$696:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x4E
   813  00004F                     	ds	2
   814  000051                     _vfpfcnvrt$700:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x50
   818  000051                     	ds	2
   819  000053                     vfpfcnvrt@f:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x52
   823  000053                     	ds	4
   824  000057                     vfpfcnvrt@ct:
   825                           	callstack 0
   826                           
   827                           ; 3 bytes @ 0x56
   828  000057                     	ds	3
   829  00005A                     vfpfcnvrt@c:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x59
   833  00005A                     	ds	1
   834  00005B                     vfprintf@cfmt:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x5A
   838  00005B                     	ds	2
   839  00005D                     ??_main:
   840                           
   841                           ; 1 bytes @ 0x5C
   842  00005D                     	ds	2
   843                           
   844 ;;
   845 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   846 ;;
   847 ;; *************** function _main *****************
   848 ;; Defined at:
   849 ;;		line 17 in file "main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  buffer          8   80[BANK0 ] unsigned char [8]
   854 ;;  voltaje1        4   88[BANK0 ] float 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2   32[None  ] int 
   857 ;; Registers used:
   858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         0       0       0       0       0       0       0       0       0
   865 ;;      Locals:         0      12       0       0       0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0       0       0
   867 ;;      Totals:         2      12       0       0       0       0       0       0       0
   868 ;;Total ram usage:       14 bytes
   869 ;; Hardware stack levels required when called:    8
   870 ;; This function calls:
   871 ;;		_ADC_Begin
   872 ;;		_ADC_Read
   873 ;;		_LCD_Begin
   874 ;;		_LCD_Print
   875 ;;		_LCD_setCursor
   876 ;;		___flmul
   877 ;;		___xxtofl
   878 ;;		_sprintf
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text0
   885  002E9A                     __ptext0:
   886                           	callstack 0
   887  002E9A                     _main:
   888                           	callstack 23
   889  002E9A                     
   890                           ;main.c: 19:     char buffer[8];;main.c: 20:     float voltaje1;;main.c: 21:     OSCCON=
      +                          0x72;
   891  002E9A  0E72               	movlw	114
   892  002E9C  6ED3               	movwf	211,c	;volatile
   893  002E9E                     
   894                           ;main.c: 22:     ADC_Begin(1);
   895  002E9E  0E01               	movlw	1
   896  002EA0  EC16  F01C         	call	_ADC_Begin
   897  002EA4                     
   898                           ;main.c: 23:     LCD_Begin();
   899  002EA4  ECC1  F01B         	call	_LCD_Begin	;wreg free
   900  002EA8                     
   901                           ;main.c: 24:     LCD_setCursor(0,0);
   902  002EA8  0E00               	movlw	0
   903  002EAA  6E03               	movwf	LCD_setCursor@y^0,c
   904  002EAC  0E00               	movlw	0
   905  002EAE  EC47  F01A         	call	_LCD_setCursor
   906  002EB2                     
   907                           ;main.c: 25:     LCD_Print("Voltaje es : ");
   908  002EB2  0E01               	movlw	low STR_1
   909  002EB4  6E03               	movwf	LCD_Print@str^0,c
   910  002EB6  0E08               	movlw	high STR_1
   911  002EB8  6E04               	movwf	(LCD_Print@str+1)^0,c
   912  002EBA  ECEA  F019         	call	_LCD_Print	;wreg free
   913  002EBE                     l3939:
   914                           
   915                           ;main.c: 30:         voltaje1=ADC_Read(0)*(5.00/1023);
   916  002EBE  0E00               	movlw	0
   917  002EC0  ECDB  F01B         	call	_ADC_Read
   918  002EC4  C001  F006         	movff	?_ADC_Read,___xxtofl@val
   919  002EC8  C002  F007         	movff	?_ADC_Read+1,___xxtofl@val+1
   920  002ECC  6A08               	clrf	(___xxtofl@val+2)^0,c
   921  002ECE  6A09               	clrf	(___xxtofl@val+3)^0,c
   922  002ED0  0E00               	movlw	0
   923  002ED2  ECBC  F013         	call	___xxtofl
   924  002ED6  C006  F014         	movff	?___xxtofl,___flmul@b
   925  002EDA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
   926  002EDE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
   927  002EE2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
   928  002EE6  0E0A               	movlw	10
   929  002EE8  6E18               	movwf	___flmul@a^0,c
   930  002EEA  0E28               	movlw	40
   931  002EEC  6E19               	movwf	(___flmul@a+1)^0,c
   932  002EEE  0EA0               	movlw	160
   933  002EF0  6E1A               	movwf	(___flmul@a+2)^0,c
   934  002EF2  0E3B               	movlw	59
   935  002EF4  6E1B               	movwf	(___flmul@a+3)^0,c
   936  002EF6  ECD1  F00E         	call	___flmul	;wreg free
   937  002EFA  C014  F0B8         	movff	?___flmul,main@voltaje1
   938  002EFE  C015  F0B9         	movff	?___flmul+1,main@voltaje1+1
   939  002F02  C016  F0BA         	movff	?___flmul+2,main@voltaje1+2
   940  002F06  C017  F0BB         	movff	?___flmul+3,main@voltaje1+3
   941  002F0A                     
   942                           ;main.c: 32:         sprintf(buffer,"V=%.2f",voltaje1);
   943  002F0A  0EB0               	movlw	low main@buffer
   944  002F0C  0100               	movlb	0	; () banked
   945  002F0E  6F9E               	movwf	sprintf@s& (0+255),b
   946  002F10  0E00               	movlw	high main@buffer
   947  002F12  6F9F               	movwf	(sprintf@s+1)& (0+255),b
   948  002F14  0E0F               	movlw	low STR_2
   949  002F16  6FA0               	movwf	sprintf@fmt& (0+255),b
   950  002F18  0E08               	movlw	high STR_2
   951  002F1A  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
   952  002F1C  C0B8  F0A2         	movff	main@voltaje1,?_sprintf+4
   953  002F20  C0B9  F0A3         	movff	main@voltaje1+1,?_sprintf+5
   954  002F24  C0BA  F0A4         	movff	main@voltaje1+2,?_sprintf+6
   955  002F28  C0BB  F0A5         	movff	main@voltaje1+3,?_sprintf+7
   956  002F2C  EC72  F01A         	call	_sprintf	;wreg free
   957  002F30                     
   958                           ;main.c: 33:         LCD_setCursor(0,1);
   959  002F30  0E01               	movlw	1
   960  002F32  6E03               	movwf	LCD_setCursor@y^0,c
   961  002F34  0E00               	movlw	0
   962  002F36  EC47  F01A         	call	_LCD_setCursor
   963  002F3A                     
   964                           ;main.c: 34:         LCD_Print(buffer);
   965  002F3A  0EB0               	movlw	low main@buffer
   966  002F3C  6E03               	movwf	LCD_Print@str^0,c
   967  002F3E  0E00               	movlw	high main@buffer
   968  002F40  6E04               	movwf	(LCD_Print@str+1)^0,c
   969  002F42  ECEA  F019         	call	_LCD_Print	;wreg free
   970  002F46                     
   971                           ;main.c: 35:         _delay((unsigned long)((500)*(8000000/4000.0)));
   972  002F46  0E06               	movlw	6
   973  002F48  6E5E               	movwf	(??_main+1)^0,c
   974  002F4A  0E13               	movlw	19
   975  002F4C  6E5D               	movwf	??_main^0,c
   976  002F4E  0EAE               	movlw	174
   977  002F50                     u4857:
   978  002F50  2EE8               	decfsz	wreg,f,c
   979  002F52  D7FE               	bra	u4857
   980  002F54  2E5D               	decfsz	??_main^0,f,c
   981  002F56  D7FC               	bra	u4857
   982  002F58  2E5E               	decfsz	(??_main+1)^0,f,c
   983  002F5A  D7FA               	bra	u4857
   984  002F5C  EF5F  F017         	goto	l3939
   985  002F60  EF00  F000         	goto	start
   986  002F64                     __end_of_main:
   987                           	callstack 0
   988                           
   989 ;; *************** function _sprintf *****************
   990 ;; Defined at:
   991 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  s               2   62[BANK0 ] PTR unsigned char 
   994 ;;		 -> main@buffer(8), 
   995 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
   996 ;;		 -> STR_2(7), 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  f               6   74[BANK0 ] struct _IO_FILE
   999 ;;  ap              2   72[BANK0 ] PTR void [1]
  1000 ;;		 -> ?_sprintf(2), 
  1001 ;;  ret             2    0        int 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2   62[BANK0 ] int 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         0       8       0       0       0       0       0       0       0
  1012 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1014 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1015 ;;Total ram usage:       18 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    7
  1018 ;; This function calls:
  1019 ;;		_vfprintf
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text1
  1026  0034E4                     __ptext1:
  1027                           	callstack 0
  1028  0034E4                     _sprintf:
  1029                           	callstack 23
  1030  0034E4  0EA2               	movlw	low (?_sprintf+4)
  1031  0034E6  0100               	movlb	0	; () banked
  1032  0034E8  6FA8               	movwf	sprintf@ap& (0+255),b
  1033  0034EA  0E00               	movlw	high (?_sprintf+4)
  1034  0034EC  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1035  0034EE  C09E  F0AA         	movff	sprintf@s,sprintf@f
  1036  0034F2  C09F  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1037  0034F6                     
  1038                           ; BSR set to: 0
  1039  0034F6  0E00               	movlw	0
  1040  0034F8  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1041  0034FA  0E00               	movlw	0
  1042  0034FC  6FAC               	movwf	(sprintf@f+2)& (0+255),b
  1043  0034FE                     
  1044                           ; BSR set to: 0
  1045  0034FE  0E00               	movlw	0
  1046  003500  6FAF               	movwf	(sprintf@f+5)& (0+255),b
  1047  003502  0E00               	movlw	0
  1048  003504  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1049  003506                     
  1050                           ; BSR set to: 0
  1051  003506  0EAA               	movlw	low sprintf@f
  1052  003508  6F98               	movwf	vfprintf@fp& (0+255),b
  1053  00350A  0E00               	movlw	high sprintf@f
  1054  00350C  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1055  00350E  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1056  003512  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1057  003516  0EA8               	movlw	low sprintf@ap
  1058  003518  6F9C               	movwf	vfprintf@ap& (0+255),b
  1059  00351A  0E00               	movlw	high sprintf@ap
  1060  00351C  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1061  00351E  EC89  F019         	call	_vfprintf	;wreg free
  1062  003522  0100               	movlb	0	; () banked
  1063  003524  51AC               	movf	(sprintf@f+2)& (0+255),w,b
  1064  003526  259E               	addwf	sprintf@s& (0+255),w,b
  1065  003528  6ED9               	movwf	fsr2l,c
  1066  00352A  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1067  00352C  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1068  00352E  6EDA               	movwf	fsr2h,c
  1069  003530  0E00               	movlw	0
  1070  003532  6EDF               	movwf	indf2,c
  1071  003534                     
  1072                           ; BSR set to: 0
  1073  003534  0012               	return		;funcret
  1074  003536                     __end_of_sprintf:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _vfprintf *****************
  1078 ;; Defined at:
  1079 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1082 ;;		 -> sprintf@f(6), 
  1083 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1084 ;;		 -> STR_2(7), 
  1085 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1086 ;;		 -> sprintf@ap(2), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  1089 ;;		 -> STR_2(7), 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2   56[BANK0 ] int 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         0       6       0       0       0       0       0       0       0
  1100 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        8 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    6
  1106 ;; This function calls:
  1107 ;;		_vfpfcnvrt
  1108 ;; This function is called by:
  1109 ;;		_sprintf
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text2
  1114  003312                     __ptext2:
  1115                           	callstack 0
  1116  003312                     _vfprintf:
  1117                           	callstack 23
  1118  003312                     
  1119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1120  003312  C09A  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  1121  003316  C09B  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1122  00331A                     
  1123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1124  00331A  0E00               	movlw	0
  1125  00331C  0100               	movlb	0	; () banked
  1126  00331E  6FC5               	movwf	(_nout+1)& (0+255),b
  1127  003320  0E00               	movlw	0
  1128  003322  6FC4               	movwf	_nout& (0+255),b
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1131  003324  EFA7  F019         	goto	l3817
  1132  003328                     l3815:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1136  003328  C098  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1137  00332C  C099  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1138  003330  0E5B               	movlw	low vfprintf@cfmt
  1139  003332  6E47               	movwf	vfpfcnvrt@fmt^0,c
  1140  003334  0E00               	movlw	high vfprintf@cfmt
  1141  003336  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1142  003338  C09C  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1143  00333C  C09D  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1144  003340  ECA1  F00C         	call	_vfpfcnvrt	;wreg free
  1145  003344  5045               	movf	?_vfpfcnvrt^0,w,c
  1146  003346  0100               	movlb	0	; () banked
  1147  003348  27C4               	addwf	_nout& (0+255),f,b
  1148  00334A  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  1149  00334C  23C5               	addwfc	(_nout+1)& (0+255),f,b
  1150  00334E                     l3817:
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1154  00334E  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1155  003352  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1156  003356                     	if	0	;tblptru may be non-zero
  1157  003356                     	endif
  1158  003356                     	if	0	;tblptru may be non-zero
  1159  003356                     	endif
  1160  003356  0008               	tblrd		*
  1161  003358  50F5               	movf	tablat,w,c
  1162  00335A  0900               	iorlw	0
  1163  00335C  A4D8               	btfss	status,2,c
  1164  00335E  EFB3  F019         	goto	u4701
  1165  003362  EFB5  F019         	goto	u4700
  1166  003366                     u4701:
  1167  003366  EF94  F019         	goto	l3815
  1168  00336A                     u4700:
  1169  00336A                     
  1170                           ; BSR set to: 0
  1171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1172  00336A  C0C4  F098         	movff	_nout,?_vfprintf
  1173  00336E  C0C5  F099         	movff	_nout+1,?_vfprintf+1
  1174  003372                     
  1175                           ; BSR set to: 0
  1176  003372  0012               	return		;funcret
  1177  003374                     __end_of_vfprintf:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _vfpfcnvrt *****************
  1181 ;; Defined at:
  1182 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1185 ;;		 -> sprintf@f(6), 
  1186 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1187 ;;		 -> vfprintf@cfmt(2), 
  1188 ;;  ap              2   72[COMRAM] PTR PTR void 
  1189 ;;		 -> sprintf@ap(2), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  llu             8    0        unsigned long long 
  1192 ;;  ll              8    0        long long 
  1193 ;;  f               4   82[COMRAM] long long 
  1194 ;;  ct              3   86[COMRAM] unsigned char [3]
  1195 ;;  vp              3    0        PTR void 
  1196 ;;  cp              3    0        PTR unsigned char 
  1197 ;;  i               2    0        int 
  1198 ;;  done            2    0        int 
  1199 ;;  c               1   89[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  2   68[COMRAM] int 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         6       0       0       0       0       0       0       0       0
  1210 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1212 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:       22 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    5
  1216 ;; This function calls:
  1217 ;;		_atoi
  1218 ;;		_efgtoa
  1219 ;;		_fputc
  1220 ;;		_isdigit
  1221 ;;		_isupper
  1222 ;;		_strncmp
  1223 ;;		_tolower
  1224 ;; This function is called by:
  1225 ;;		_vfprintf
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text3
  1230  001942                     __ptext3:
  1231                           	callstack 0
  1232  001942                     _vfpfcnvrt:
  1233                           	callstack 23
  1234  001942                     
  1235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1236  001942  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1237  001946  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1238  00194A  CFDE FFF6          	movff	postinc2,tblptrl
  1239  00194E  CFDD FFF7          	movff	postdec2,tblptrh
  1240  001952                     	if	0	;tblptru may be non-zero
  1241  001952                     	endif
  1242  001952                     	if	0	;tblptru may be non-zero
  1243  001952                     	endif
  1244  001952  0008               	tblrd		*
  1245  001954  50F5               	movf	tablat,w,c
  1246  001956  0A25               	xorlw	37
  1247  001958  A4D8               	btfss	status,2,c
  1248  00195A  EFB1  F00C         	goto	u4561
  1249  00195E  EFB3  F00C         	goto	u4560
  1250  001962                     u4561:
  1251  001962  EFB5  F00E         	goto	l3771
  1252  001966                     u4560:
  1253  001966                     
  1254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1255  001966  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1256  00196A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1257  00196E  2ADE               	incf	postinc2,f,c
  1258  001970  0E00               	movlw	0
  1259  001972  22DD               	addwfc	postdec2,f,c
  1260  001974                     
  1261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1262  001974  0E00               	movlw	0
  1263  001976  0100               	movlb	0	; () banked
  1264  001978  6FC7               	movwf	(_width+1)& (0+255),b
  1265  00197A  0E00               	movlw	0
  1266  00197C  6FC6               	movwf	_width& (0+255),b
  1267  00197E  C0C6  F0CA         	movff	_width,_flags
  1268  001982  C0C7  F0CB         	movff	_width+1,_flags+1
  1269  001986                     
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1272  001986  69C8               	setf	_prec& (0+255),b
  1273  001988  69C9               	setf	(_prec+1)& (0+255),b
  1274  00198A                     
  1275                           ; BSR set to: 0
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1277  00198A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1278  00198E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1279  001992  CFDE FFF6          	movff	postinc2,tblptrl
  1280  001996  CFDD FFF7          	movff	postdec2,tblptrh
  1281  00199A                     	if	0	;tblptru may be non-zero
  1282  00199A                     	endif
  1283  00199A                     	if	0	;tblptru may be non-zero
  1284  00199A                     	endif
  1285  00199A  0008               	tblrd		*
  1286  00199C  50F5               	movf	tablat,w,c
  1287  00199E  0A2E               	xorlw	46
  1288  0019A0  A4D8               	btfss	status,2,c
  1289  0019A2  EFD5  F00C         	goto	u4571
  1290  0019A6  EFD7  F00C         	goto	u4570
  1291  0019AA                     u4571:
  1292  0019AA  EF54  F00D         	goto	l3717
  1293  0019AE                     u4570:
  1294  0019AE                     
  1295                           ; BSR set to: 0
  1296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1297  0019AE  0E00               	movlw	0
  1298  0019B0  6FC9               	movwf	(_prec+1)& (0+255),b
  1299  0019B2  0E00               	movlw	0
  1300  0019B4  6FC8               	movwf	_prec& (0+255),b
  1301  0019B6                     
  1302                           ; BSR set to: 0
  1303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1304  0019B6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1305  0019BA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1306  0019BE  2ADE               	incf	postinc2,f,c
  1307  0019C0  0E00               	movlw	0
  1308  0019C2  22DD               	addwfc	postdec2,f,c
  1309  0019C4                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1312  0019C4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  0019C8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  0019CC  CFDE FFF6          	movff	postinc2,tblptrl
  1315  0019D0  CFDD FFF7          	movff	postdec2,tblptrh
  1316  0019D4                     	if	0	;tblptru may be non-zero
  1317  0019D4                     	endif
  1318  0019D4                     	if	0	;tblptru may be non-zero
  1319  0019D4                     	endif
  1320  0019D4  0008               	tblrd		*
  1321  0019D6  50F5               	movf	tablat,w,c
  1322  0019D8  0A2A               	xorlw	42
  1323  0019DA  A4D8               	btfss	status,2,c
  1324  0019DC  EFF2  F00C         	goto	u4581
  1325  0019E0  EFF4  F00C         	goto	u4580
  1326  0019E4                     u4581:
  1327  0019E4  EF11  F00D         	goto	l3707
  1328  0019E8                     u4580:
  1329  0019E8                     
  1330                           ; BSR set to: 0
  1331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1332  0019E8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1333  0019EC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1334  0019F0  2ADE               	incf	postinc2,f,c
  1335  0019F2  0E00               	movlw	0
  1336  0019F4  22DD               	addwfc	postdec2,f,c
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1339  0019F6  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1340  0019FA  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1341  0019FE  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1342  001A02  0E02               	movlw	2
  1343  001A04  26DE               	addwf	postinc2,f,c
  1344  001A06  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1345  001A0A  0E00               	movlw	0
  1346  001A0C  22DD               	addwfc	postdec2,f,c
  1347  001A0E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1348  001A12  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1349  001A16  CFDE F0C8          	movff	postinc2,_prec
  1350  001A1A  CFDD F0C9          	movff	postdec2,_prec+1
  1351                           
  1352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1353  001A1E  EF54  F00D         	goto	l3717
  1354  001A22                     l3707:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1358  001A22  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  001A26  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  001A2A  CFDE F008          	movff	postinc2,atoi@s
  1361  001A2E  CFDD F009          	movff	postdec2,atoi@s+1
  1362  001A32  EC96  F014         	call	_atoi	;wreg free
  1363  001A36  C008  F0C8         	movff	?_atoi,_prec
  1364  001A3A  C009  F0C9         	movff	?_atoi+1,_prec+1
  1365                           
  1366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1367  001A3E  EF28  F00D         	goto	l3711
  1368  001A42                     l3709:
  1369                           
  1370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1371  001A42  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1372  001A46  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1373  001A4A  2ADE               	incf	postinc2,f,c
  1374  001A4C  0E00               	movlw	0
  1375  001A4E  22DD               	addwfc	postdec2,f,c
  1376  001A50                     l3711:
  1377  001A50  0ED0               	movlw	208
  1378  001A52  6E4B               	movwf	??_vfpfcnvrt^0,c
  1379  001A54  0EFF               	movlw	255
  1380  001A56  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  1381  001A58  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1382  001A5C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1383  001A60  CFDE FFF6          	movff	postinc2,tblptrl
  1384  001A64  CFDD FFF7          	movff	postdec2,tblptrh
  1385  001A68                     	if	0	;tblptru may be non-zero
  1386  001A68                     	endif
  1387  001A68                     	if	0	;tblptru may be non-zero
  1388  001A68                     	endif
  1389  001A68  0008               	tblrd		*
  1390  001A6A  50F5               	movf	tablat,w,c
  1391  001A6C  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  1392  001A6E  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  1393  001A70  504B               	movf	??_vfpfcnvrt^0,w,c
  1394  001A72  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1395  001A74  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1396  001A76  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1397  001A78  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  1398  001A7A  E10A               	bnz	u4590
  1399  001A7C  0E0A               	movlw	10
  1400  001A7E  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1401  001A80  A0D8               	btfss	status,0,c
  1402  001A82  EF45  F00D         	goto	u4591
  1403  001A86  EF48  F00D         	goto	u4590
  1404  001A8A                     u4591:
  1405  001A8A  0E01               	movlw	1
  1406  001A8C  EF49  F00D         	goto	u4600
  1407  001A90                     u4590:
  1408  001A90  0E00               	movlw	0
  1409  001A92                     u4600:
  1410  001A92  6E4F               	movwf	_vfpfcnvrt$696^0,c
  1411  001A94  6A50               	clrf	(_vfpfcnvrt$696+1)^0,c
  1412  001A96  504F               	movf	_vfpfcnvrt$696^0,w,c
  1413  001A98  1050               	iorwf	(_vfpfcnvrt$696+1)^0,w,c
  1414  001A9A  A4D8               	btfss	status,2,c
  1415  001A9C  EF52  F00D         	goto	u4611
  1416  001AA0  EF54  F00D         	goto	u4610
  1417  001AA4                     u4611:
  1418  001AA4  EF21  F00D         	goto	l3709
  1419  001AA8                     u4610:
  1420  001AA8                     l3717:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1423  001AA8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  001AAC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  001AB0  CFDE FFF6          	movff	postinc2,tblptrl
  1426  001AB4  CFDD FFF7          	movff	postdec2,tblptrh
  1427  001AB8                     	if	0	;tblptru may be non-zero
  1428  001AB8                     	endif
  1429  001AB8                     	if	0	;tblptru may be non-zero
  1430  001AB8                     	endif
  1431  001AB8  0008               	tblrd		*
  1432  001ABA  50F5               	movf	tablat,w,c
  1433  001ABC  6E07               	movwf	tolower@c^0,c
  1434  001ABE  6A08               	clrf	(tolower@c+1)^0,c
  1435  001AC0  ECBA  F019         	call	_tolower	;wreg free
  1436  001AC4  5007               	movf	?_tolower^0,w,c
  1437  001AC6  6E57               	movwf	vfpfcnvrt@ct^0,c
  1438  001AC8                     
  1439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1440  001AC8  5057               	movf	vfpfcnvrt@ct^0,w,c
  1441  001ACA  B4D8               	btfsc	status,2,c
  1442  001ACC  EF6A  F00D         	goto	u4621
  1443  001AD0  EF6C  F00D         	goto	u4620
  1444  001AD4                     u4621:
  1445  001AD4  EFA4  F00D         	goto	l3727
  1446  001AD8                     u4620:
  1447  001AD8                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1449  001AD8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1450  001ADC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1451  001AE0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  1452  001AE4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  1453  001AE8  0E01               	movlw	1
  1454  001AEA  264B               	addwf	??_vfpfcnvrt^0,f,c
  1455  001AEC  0E00               	movlw	0
  1456  001AEE  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1457  001AF0  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1458  001AF4  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1459  001AF8                     	if	0	;tblptru may be non-zero
  1460  001AF8                     	endif
  1461  001AF8                     	if	0	;tblptru may be non-zero
  1462  001AF8                     	endif
  1463  001AF8  0008               	tblrd		*
  1464  001AFA  50F5               	movf	tablat,w,c
  1465  001AFC  6E07               	movwf	tolower@c^0,c
  1466  001AFE  6A08               	clrf	(tolower@c+1)^0,c
  1467  001B00  ECBA  F019         	call	_tolower	;wreg free
  1468  001B04  5007               	movf	?_tolower^0,w,c
  1469  001B06  6E58               	movwf	(vfpfcnvrt@ct+1)^0,c
  1470  001B08                     
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1472  001B08  5058               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1473  001B0A  B4D8               	btfsc	status,2,c
  1474  001B0C  EF8A  F00D         	goto	u4631
  1475  001B10  EF8C  F00D         	goto	u4630
  1476  001B14                     u4631:
  1477  001B14  EFA4  F00D         	goto	l3727
  1478  001B18                     u4630:
  1479  001B18                     
  1480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1481  001B18  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1482  001B1C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1483  001B20  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  1484  001B24  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  1485  001B28  0E02               	movlw	2
  1486  001B2A  264B               	addwf	??_vfpfcnvrt^0,f,c
  1487  001B2C  0E00               	movlw	0
  1488  001B2E  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1489  001B30  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1490  001B34  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1491  001B38                     	if	0	;tblptru may be non-zero
  1492  001B38                     	endif
  1493  001B38                     	if	0	;tblptru may be non-zero
  1494  001B38                     	endif
  1495  001B38  0008               	tblrd		*
  1496  001B3A  50F5               	movf	tablat,w,c
  1497  001B3C  6E07               	movwf	tolower@c^0,c
  1498  001B3E  6A08               	clrf	(tolower@c+1)^0,c
  1499  001B40  ECBA  F019         	call	_tolower	;wreg free
  1500  001B44  5007               	movf	?_tolower^0,w,c
  1501  001B46  6E59               	movwf	(vfpfcnvrt@ct+2)^0,c
  1502  001B48                     l3727:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1505  001B48  0E66               	movlw	102
  1506  001B4A  1857               	xorwf	vfpfcnvrt@ct^0,w,c
  1507  001B4C  A4D8               	btfss	status,2,c
  1508  001B4E  EFAB  F00D         	goto	u4641
  1509  001B52  EFAD  F00D         	goto	u4640
  1510  001B56                     u4641:
  1511  001B56  EFED  F00D         	goto	l3739
  1512  001B5A                     u4640:
  1513  001B5A                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1515  001B5A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1516  001B5E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1517  001B62  CFDE FFF6          	movff	postinc2,tblptrl
  1518  001B66  CFDD FFF7          	movff	postdec2,tblptrh
  1519  001B6A                     	if	0	;tblptru may be non-zero
  1520  001B6A                     	endif
  1521  001B6A                     	if	0	;tblptru may be non-zero
  1522  001B6A                     	endif
  1523  001B6A  0008               	tblrd		*
  1524  001B6C  CFF5 F05A          	movff	tablat,vfpfcnvrt@c
  1525  001B70                     
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1527  001B70  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1528  001B74  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1529  001B78  2ADE               	incf	postinc2,f,c
  1530  001B7A  0E00               	movlw	0
  1531  001B7C  22DD               	addwfc	postdec2,f,c
  1532  001B7E                     
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1534  001B7E  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1535  001B82  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1536  001B86  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1537  001B8A  0E04               	movlw	4
  1538  001B8C  26DE               	addwf	postinc2,f,c
  1539  001B8E  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1540  001B92  0E00               	movlw	0
  1541  001B94  22DD               	addwfc	postdec2,f,c
  1542  001B96  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1543  001B9A  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1544  001B9E  CFDE F053          	movff	postinc2,vfpfcnvrt@f
  1545  001BA2  CFDE F054          	movff	postinc2,vfpfcnvrt@f+1
  1546  001BA6  CFDE F055          	movff	postinc2,vfpfcnvrt@f+2
  1547  001BAA  CFDE F056          	movff	postinc2,vfpfcnvrt@f+3
  1548  001BAE                     l3735:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1551  001BAE  C045  F039         	movff	vfpfcnvrt@fp,efgtoa@fp
  1552  001BB2  C046  F03A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1553  001BB6  C053  F03B         	movff	vfpfcnvrt@f,efgtoa@f
  1554  001BBA  C054  F03C         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1555  001BBE  C055  F03D         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1556  001BC2  C056  F03E         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1557  001BC6  C05A  F03F         	movff	vfpfcnvrt@c,efgtoa@c
  1558  001BCA  EC15  F004         	call	_efgtoa	;wreg free
  1559  001BCE  C039  F045         	movff	?_efgtoa,?_vfpfcnvrt
  1560  001BD2  C03A  F046         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1561  001BD6  EFD0  F00E         	goto	l917
  1562  001BDA                     l3739:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1565  001BDA  0E57               	movlw	low vfpfcnvrt@ct
  1566  001BDC  6E01               	movwf	strncmp@_l^0,c
  1567  001BDE  0E00               	movlw	high vfpfcnvrt@ct
  1568  001BE0  6E02               	movwf	(strncmp@_l+1)^0,c
  1569  001BE2  0E26               	movlw	low STR_11
  1570  001BE4  6E03               	movwf	strncmp@_r^0,c
  1571  001BE6  0E08               	movlw	high STR_11
  1572  001BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  1573  001BEA  0E00               	movlw	0
  1574  001BEC  6E06               	movwf	(strncmp@n+1)^0,c
  1575  001BEE  0E02               	movlw	2
  1576  001BF0  6E05               	movwf	strncmp@n^0,c
  1577  001BF2  ECE2  F016         	call	_strncmp	;wreg free
  1578  001BF6  5001               	movf	?_strncmp^0,w,c
  1579  001BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  1580  001BFA  A4D8               	btfss	status,2,c
  1581  001BFC  EF02  F00E         	goto	u4651
  1582  001C00  EF04  F00E         	goto	u4650
  1583  001C04                     u4651:
  1584  001C04  EF7F  F00E         	goto	l3755
  1585  001C08                     u4650:
  1586  001C08                     
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1588  001C08  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1589  001C0C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1590  001C10  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  1591  001C14  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  1592  001C18  0E01               	movlw	1
  1593  001C1A  264B               	addwf	??_vfpfcnvrt^0,f,c
  1594  001C1C  0E00               	movlw	0
  1595  001C1E  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1596  001C20  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1597  001C24  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1598  001C28                     	if	0	;tblptru may be non-zero
  1599  001C28                     	endif
  1600  001C28                     	if	0	;tblptru may be non-zero
  1601  001C28                     	endif
  1602  001C28  0008               	tblrd		*
  1603  001C2A  CFF5 F05A          	movff	tablat,vfpfcnvrt@c
  1604  001C2E  0EBF               	movlw	191
  1605  001C30  6E4B               	movwf	??_vfpfcnvrt^0,c
  1606  001C32  0EFF               	movlw	255
  1607  001C34  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  1608  001C36  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1609  001C3A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1610  001C3E  CFDE FFF6          	movff	postinc2,tblptrl
  1611  001C42  CFDD FFF7          	movff	postdec2,tblptrh
  1612  001C46                     	if	0	;tblptru may be non-zero
  1613  001C46                     	endif
  1614  001C46                     	if	0	;tblptru may be non-zero
  1615  001C46                     	endif
  1616  001C46  0008               	tblrd		*
  1617  001C48  50F5               	movf	tablat,w,c
  1618  001C4A  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  1619  001C4C  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  1620  001C4E  504B               	movf	??_vfpfcnvrt^0,w,c
  1621  001C50  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1622  001C52  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1623  001C54  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1624  001C56  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  1625  001C58  E10A               	bnz	u4660
  1626  001C5A  0E1A               	movlw	26
  1627  001C5C  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1628  001C5E  A0D8               	btfss	status,0,c
  1629  001C60  EF34  F00E         	goto	u4661
  1630  001C64  EF37  F00E         	goto	u4660
  1631  001C68                     u4661:
  1632  001C68  0E01               	movlw	1
  1633  001C6A  EF38  F00E         	goto	u4670
  1634  001C6E                     u4660:
  1635  001C6E  0E00               	movlw	0
  1636  001C70                     u4670:
  1637  001C70  6E51               	movwf	_vfpfcnvrt$700^0,c
  1638  001C72  6A52               	clrf	(_vfpfcnvrt$700+1)^0,c
  1639  001C74  5051               	movf	_vfpfcnvrt$700^0,w,c
  1640  001C76  1052               	iorwf	(_vfpfcnvrt$700+1)^0,w,c
  1641  001C78  B4D8               	btfsc	status,2,c
  1642  001C7A  EF41  F00E         	goto	u4681
  1643  001C7E  EF43  F00E         	goto	u4680
  1644  001C82                     u4681:
  1645  001C82  EF5D  F00E         	goto	l3749
  1646  001C86                     u4680:
  1647  001C86                     
  1648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1649  001C86  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1650  001C8A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1651  001C8E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1652  001C92  0E04               	movlw	4
  1653  001C94  26DE               	addwf	postinc2,f,c
  1654  001C96  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1655  001C9A  0E00               	movlw	0
  1656  001C9C  22DD               	addwfc	postdec2,f,c
  1657  001C9E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1658  001CA2  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1659  001CA6  CFDE F053          	movff	postinc2,vfpfcnvrt@f
  1660  001CAA  CFDE F054          	movff	postinc2,vfpfcnvrt@f+1
  1661  001CAE  CFDE F055          	movff	postinc2,vfpfcnvrt@f+2
  1662  001CB2  CFDE F056          	movff	postinc2,vfpfcnvrt@f+3
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1665  001CB6  EF75  F00E         	goto	l924
  1666  001CBA                     l3749:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1669  001CBA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1670  001CBE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1671  001CC2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1672  001CC6  0E04               	movlw	4
  1673  001CC8  26DE               	addwf	postinc2,f,c
  1674  001CCA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1675  001CCE  0E00               	movlw	0
  1676  001CD0  22DD               	addwfc	postdec2,f,c
  1677  001CD2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1678  001CD6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1679  001CDA  CFDE F053          	movff	postinc2,vfpfcnvrt@f
  1680  001CDE  CFDE F054          	movff	postinc2,vfpfcnvrt@f+1
  1681  001CE2  CFDE F055          	movff	postinc2,vfpfcnvrt@f+2
  1682  001CE6  CFDE F056          	movff	postinc2,vfpfcnvrt@f+3
  1683  001CEA                     l924:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1686  001CEA  0E02               	movlw	2
  1687  001CEC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688  001CF0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689  001CF4  26DE               	addwf	postinc2,f,c
  1690  001CF6  0E00               	movlw	0
  1691  001CF8  22DD               	addwfc	postdec2,f,c
  1692  001CFA  EFD7  F00D         	goto	l3735
  1693  001CFE                     l3755:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1696  001CFE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1697  001D02  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1698  001D06  CFDE FFF6          	movff	postinc2,tblptrl
  1699  001D0A  CFDD FFF7          	movff	postdec2,tblptrh
  1700  001D0E                     	if	0	;tblptru may be non-zero
  1701  001D0E                     	endif
  1702  001D0E                     	if	0	;tblptru may be non-zero
  1703  001D0E                     	endif
  1704  001D0E  0008               	tblrd		*
  1705  001D10  50F5               	movf	tablat,w,c
  1706  001D12  0A25               	xorlw	37
  1707  001D14  A4D8               	btfss	status,2,c
  1708  001D16  EF8F  F00E         	goto	u4691
  1709  001D1A  EF91  F00E         	goto	u4690
  1710  001D1E                     u4691:
  1711  001D1E  EFA8  F00E         	goto	l3765
  1712  001D22                     u4690:
  1713  001D22                     
  1714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1715  001D22  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  001D26  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  001D2A  2ADE               	incf	postinc2,f,c
  1718  001D2C  0E00               	movlw	0
  1719  001D2E  22DD               	addwfc	postdec2,f,c
  1720  001D30                     
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1722  001D30  0E00               	movlw	0
  1723  001D32  6E02               	movwf	(fputc@c+1)^0,c
  1724  001D34  0E25               	movlw	37
  1725  001D36  6E01               	movwf	fputc@c^0,c
  1726  001D38  C045  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1727  001D3C  C046  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1728  001D40  ECB2  F017         	call	_fputc	;wreg free
  1729  001D44                     l3761:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1732  001D44  0E00               	movlw	0
  1733  001D46  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  1734  001D48  0E01               	movlw	1
  1735  001D4A  6E45               	movwf	?_vfpfcnvrt^0,c
  1736  001D4C  EFD0  F00E         	goto	l917
  1737  001D50                     l3765:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1740  001D50  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  001D54  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  001D58  2ADE               	incf	postinc2,f,c
  1743  001D5A  0E00               	movlw	0
  1744  001D5C  22DD               	addwfc	postdec2,f,c
  1745  001D5E                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1747  001D5E  0E00               	movlw	0
  1748  001D60  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  1749  001D62  0E00               	movlw	0
  1750  001D64  6E45               	movwf	?_vfpfcnvrt^0,c
  1751  001D66  EFD0  F00E         	goto	l917
  1752  001D6A                     l3771:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1755  001D6A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756  001D6E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757  001D72  CFDE FFF6          	movff	postinc2,tblptrl
  1758  001D76  CFDD FFF7          	movff	postdec2,tblptrh
  1759  001D7A                     	if	0	;tblptru may be non-zero
  1760  001D7A                     	endif
  1761  001D7A                     	if	0	;tblptru may be non-zero
  1762  001D7A                     	endif
  1763  001D7A  0008               	tblrd		*
  1764  001D7C  50F5               	movf	tablat,w,c
  1765  001D7E  6E01               	movwf	fputc@c^0,c
  1766  001D80  6A02               	clrf	(fputc@c+1)^0,c
  1767  001D82  C045  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1768  001D86  C046  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1769  001D8A  ECB2  F017         	call	_fputc	;wreg free
  1770  001D8E                     
  1771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1772  001D8E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1773  001D92  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1774  001D96  2ADE               	incf	postinc2,f,c
  1775  001D98  0E00               	movlw	0
  1776  001D9A  22DD               	addwfc	postdec2,f,c
  1777  001D9C  EFA2  F00E         	goto	l3761
  1778  001DA0                     l917:
  1779  001DA0  0012               	return		;funcret
  1780  001DA2                     __end_of_vfpfcnvrt:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _strncmp *****************
  1784 ;; Defined at:
  1785 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1788 ;;		 -> vfpfcnvrt@ct(3), 
  1789 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1790 ;;		 -> STR_13(3), 
  1791 ;;  n               2    4[COMRAM] unsigned int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1794 ;;		 -> STR_13(3), 
  1795 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1796 ;;		 -> vfpfcnvrt@ct(3), 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2    0[COMRAM] int 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1806 ;;      Params:         6       0       0       0       0       0       0       0       0
  1807 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1808 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1809 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1810 ;;Total ram usage:       11 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_vfpfcnvrt
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text4
  1820  002DC4                     __ptext4:
  1821                           	callstack 0
  1822  002DC4                     _strncmp:
  1823                           	callstack 27
  1824  002DC4  C001  F008         	movff	strncmp@_l,strncmp@l
  1825  002DC8  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1826  002DCC  C003  F00A         	movff	strncmp@_r,strncmp@r
  1827  002DD0  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1828  002DD4  0605               	decf	strncmp@n^0,f,c
  1829  002DD6  A0D8               	btfss	status,0,c
  1830  002DD8  0606               	decf	(strncmp@n+1)^0,f,c
  1831  002DDA  2805               	incf	strncmp@n^0,w,c
  1832  002DDC  E106               	bnz	u4511
  1833  002DDE  2806               	incf	(strncmp@n+1)^0,w,c
  1834  002DE0  A4D8               	btfss	status,2,c
  1835  002DE2  EFF5  F016         	goto	u4511
  1836  002DE6  EFF7  F016         	goto	u4510
  1837  002DEA                     u4511:
  1838  002DEA  EF04  F017         	goto	l3677
  1839  002DEE                     u4510:
  1840  002DEE  0E00               	movlw	0
  1841  002DF0  6E02               	movwf	(?_strncmp+1)^0,c
  1842  002DF2  0E00               	movlw	0
  1843  002DF4  6E01               	movwf	?_strncmp^0,c
  1844  002DF6  EF4C  F017         	goto	l1045
  1845  002DFA                     l3675:
  1846  002DFA  4A08               	infsnz	strncmp@l^0,f,c
  1847  002DFC  2A09               	incf	(strncmp@l+1)^0,f,c
  1848  002DFE  4A0A               	infsnz	strncmp@r^0,f,c
  1849  002E00  2A0B               	incf	(strncmp@r+1)^0,f,c
  1850  002E02  0605               	decf	strncmp@n^0,f,c
  1851  002E04  A0D8               	btfss	status,0,c
  1852  002E06  0606               	decf	(strncmp@n+1)^0,f,c
  1853  002E08                     l3677:
  1854  002E08  C008  FFD9         	movff	strncmp@l,fsr2l
  1855  002E0C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1856  002E10  50DF               	movf	indf2,w,c
  1857  002E12  B4D8               	btfsc	status,2,c
  1858  002E14  EF0E  F017         	goto	u4521
  1859  002E18  EF10  F017         	goto	u4520
  1860  002E1C                     u4521:
  1861  002E1C  EF3B  F017         	goto	l3685
  1862  002E20                     u4520:
  1863  002E20  C00A  FFF6         	movff	strncmp@r,tblptrl
  1864  002E24  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1865  002E28                     	if	0	;tblptru may be non-zero
  1866  002E28                     	endif
  1867  002E28                     	if	0	;tblptru may be non-zero
  1868  002E28                     	endif
  1869  002E28  0008               	tblrd		*
  1870  002E2A  50F5               	movf	tablat,w,c
  1871  002E2C  0900               	iorlw	0
  1872  002E2E  B4D8               	btfsc	status,2,c
  1873  002E30  EF1C  F017         	goto	u4531
  1874  002E34  EF1E  F017         	goto	u4530
  1875  002E38                     u4531:
  1876  002E38  EF3B  F017         	goto	l3685
  1877  002E3C                     u4530:
  1878  002E3C  5005               	movf	strncmp@n^0,w,c
  1879  002E3E  1006               	iorwf	(strncmp@n+1)^0,w,c
  1880  002E40  B4D8               	btfsc	status,2,c
  1881  002E42  EF25  F017         	goto	u4541
  1882  002E46  EF27  F017         	goto	u4540
  1883  002E4A                     u4541:
  1884  002E4A  EF3B  F017         	goto	l3685
  1885  002E4E                     u4540:
  1886  002E4E  C008  FFD9         	movff	strncmp@l,fsr2l
  1887  002E52  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1888  002E56  50DF               	movf	indf2,w,c
  1889  002E58  6E07               	movwf	??_strncmp^0,c
  1890  002E5A  C00A  FFF6         	movff	strncmp@r,tblptrl
  1891  002E5E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1892  002E62                     	if	0	;tblptru may be non-zero
  1893  002E62                     	endif
  1894  002E62                     	if	0	;tblptru may be non-zero
  1895  002E62                     	endif
  1896  002E62  0008               	tblrd		*
  1897  002E64  50F5               	movf	tablat,w,c
  1898  002E66  1807               	xorwf	??_strncmp^0,w,c
  1899  002E68  B4D8               	btfsc	status,2,c
  1900  002E6A  EF39  F017         	goto	u4551
  1901  002E6E  EF3B  F017         	goto	u4550
  1902  002E72                     u4551:
  1903  002E72  EFFD  F016         	goto	l3675
  1904  002E76                     u4550:
  1905  002E76                     l3685:
  1906  002E76  C008  FFD9         	movff	strncmp@l,fsr2l
  1907  002E7A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1908  002E7E  50DF               	movf	indf2,w,c
  1909  002E80  6E07               	movwf	??_strncmp^0,c
  1910  002E82  C00A  FFF6         	movff	strncmp@r,tblptrl
  1911  002E86  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1912  002E8A                     	if	0	;tblptru may be non-zero
  1913  002E8A                     	endif
  1914  002E8A                     	if	0	;tblptru may be non-zero
  1915  002E8A                     	endif
  1916  002E8A  0008               	tblrd		*
  1917  002E8C  50F5               	movf	tablat,w,c
  1918  002E8E  5C07               	subwf	??_strncmp^0,w,c
  1919  002E90  6E01               	movwf	?_strncmp^0,c
  1920  002E92  6A02               	clrf	(?_strncmp+1)^0,c
  1921  002E94  A0D8               	btfss	status,0,c
  1922  002E96  0602               	decf	(?_strncmp+1)^0,f,c
  1923  002E98                     l1045:
  1924  002E98  0012               	return		;funcret
  1925  002E9A                     __end_of_strncmp:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _efgtoa *****************
  1929 ;; Defined at:
  1930 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
  1933 ;;		 -> sprintf@f(6), 
  1934 ;;  f               4   58[COMRAM] PTR struct _IO_FILE
  1935 ;;  c               1   62[COMRAM] unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  u               4   52[BANK0 ] unsigned char 
  1938 ;;  g               4   44[BANK0 ] unsigned char 
  1939 ;;  l               4   38[BANK0 ] unsigned char 
  1940 ;;  h               4   34[BANK0 ] unsigned char 
  1941 ;;  ou              4   20[BANK0 ] unsigned char 
  1942 ;;  n               2   50[BANK0 ] int 
  1943 ;;  e               2   48[BANK0 ] int 
  1944 ;;  i               2   42[BANK0 ] int 
  1945 ;;  w               2   30[BANK0 ] int 
  1946 ;;  p               2   28[BANK0 ] int 
  1947 ;;  sign            2   26[BANK0 ] int 
  1948 ;;  d               2   24[BANK0 ] int 
  1949 ;;  m               2   18[BANK0 ] int 
  1950 ;;  ne              2   16[BANK0 ] int 
  1951 ;;  pp              2   14[BANK0 ] int 
  1952 ;;  t               2   12[BANK0 ] int 
  1953 ;;  mode            1   33[BANK0 ] unsigned char 
  1954 ;;  nmode           1   32[BANK0 ] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   56[COMRAM] int 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         7       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0      56       0       0       0       0       0       0       0
  1966 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1967 ;;      Totals:        12      56       0       0       0       0       0       0       0
  1968 ;;Total ram usage:       68 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    4
  1971 ;; This function calls:
  1972 ;;		___awdiv
  1973 ;;		___awmod
  1974 ;;		___fladd
  1975 ;;		___fldiv
  1976 ;;		___fleq
  1977 ;;		___flge
  1978 ;;		___flmul
  1979 ;;		___flneg
  1980 ;;		___flsub
  1981 ;;		___fltol
  1982 ;;		___fpclassifyf
  1983 ;;		_floorf
  1984 ;;		_isupper
  1985 ;;		_pad
  1986 ;;		_strcpy
  1987 ;;		_tolower
  1988 ;; This function is called by:
  1989 ;;		_vfpfcnvrt
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text5
  1994  00082A                     __ptext5:
  1995                           	callstack 0
  1996  00082A                     _efgtoa:
  1997                           	callstack 23
  1998  00082A                     
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2000  00082A  0E00               	movlw	0
  2001  00082C  0100               	movlb	0	; () banked
  2002  00082E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2003  000830  0E00               	movlw	0
  2004  000832  6F7A               	movwf	efgtoa@sign& (0+255),b
  2005  000834                     
  2006                           ; BSR set to: 0
  2007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2008  000834  C03B  F08C         	movff	efgtoa@f,efgtoa@g
  2009  000838  C03C  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2010  00083C  C03D  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2011  000840  C03E  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2012  000844                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2015  000844  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2016  000846  EF29  F004         	goto	u3900
  2017  00084A  EF27  F004         	goto	u3901
  2018  00084E                     u3901:
  2019  00084E  EF3F  F004         	goto	l3329
  2020  000852                     u3900:
  2021  000852                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2024  000852  0E00               	movlw	0
  2025  000854  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2026  000856  0E01               	movlw	1
  2027  000858  6F7A               	movwf	efgtoa@sign& (0+255),b
  2028  00085A                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2031  00085A  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2032  00085E  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2033  000862  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2034  000866  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2035  00086A  EC6E  F01B         	call	___flneg	;wreg free
  2036  00086E  C001  F08C         	movff	?___flneg,efgtoa@g
  2037  000872  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2038  000876  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2039  00087A  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2040  00087E                     l3329:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2043  00087E  0E00               	movlw	0
  2044  000880  0100               	movlb	0	; () banked
  2045  000882  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2046  000884  0E00               	movlw	0
  2047  000886  6F92               	movwf	efgtoa@n& (0+255),b
  2048  000888                     
  2049                           ; BSR set to: 0
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2051  000888  C0C6  F07E         	movff	_width,efgtoa@w
  2052  00088C  C0C7  F07F         	movff	_width+1,efgtoa@w+1
  2053  000890                     
  2054                           ; BSR set to: 0
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2056  000890  517A               	movf	efgtoa@sign& (0+255),w,b
  2057  000892  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2058  000894  A4D8               	btfss	status,2,c
  2059  000896  EF4F  F004         	goto	u3911
  2060  00089A  EF51  F004         	goto	u3910
  2061  00089E                     u3911:
  2062  00089E  EF58  F004         	goto	l3337
  2063  0008A2                     u3910:
  2064  0008A2                     
  2065                           ; BSR set to: 0
  2066  0008A2  A5CA               	btfss	_flags& (0+255),2,b
  2067  0008A4  EF56  F004         	goto	u3921
  2068  0008A8  EF58  F004         	goto	u3920
  2069  0008AC                     u3921:
  2070  0008AC  EF72  F004         	goto	l3349
  2071  0008B0                     u3920:
  2072  0008B0                     l3337:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2076  0008B0  517A               	movf	efgtoa@sign& (0+255),w,b
  2077  0008B2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2078  0008B4  A4D8               	btfss	status,2,c
  2079  0008B6  EF5F  F004         	goto	u3931
  2080  0008BA  EF61  F004         	goto	u3930
  2081  0008BE                     u3931:
  2082  0008BE  EF67  F004         	goto	l3341
  2083  0008C2                     u3930:
  2084  0008C2                     
  2085                           ; BSR set to: 0
  2086  0008C2  0E00               	movlw	0
  2087  0008C4  6F61               	movwf	(_efgtoa$670+1)& (0+255),b
  2088  0008C6  0E2B               	movlw	43
  2089  0008C8  6F60               	movwf	_efgtoa$670& (0+255),b
  2090  0008CA  EF6B  F004         	goto	l3343
  2091  0008CE                     l3341:
  2092                           
  2093                           ; BSR set to: 0
  2094  0008CE  0E00               	movlw	0
  2095  0008D0  6F61               	movwf	(_efgtoa$670+1)& (0+255),b
  2096  0008D2  0E2D               	movlw	45
  2097  0008D4  6F60               	movwf	_efgtoa$670& (0+255),b
  2098  0008D6                     l3343:
  2099                           
  2100                           ; BSR set to: 0
  2101  0008D6  C060  F100         	movff	_efgtoa$670,_dbuf
  2102  0008DA                     
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2105  0008DA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2106  0008DC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2107  0008DE                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  2110  0008DE  077E               	decf	efgtoa@w& (0+255),f,b
  2111  0008E0  A0D8               	btfss	status,0,c
  2112  0008E2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2113  0008E4                     l3349:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2117  0008E4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2118  0008E8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2119  0008EC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2120  0008F0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2121  0008F4  EC63  F016         	call	___fpclassifyf	;wreg free
  2122  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2123  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2124  0008FC  A4D8               	btfss	status,2,c
  2125  0008FE  EF83  F004         	goto	u3941
  2126  000902  EF85  F004         	goto	u3940
  2127  000906                     u3941:
  2128  000906  EFDC  F004         	goto	l3367
  2129  00090A                     u3940:
  2130  00090A  0EBF               	movlw	191
  2131  00090C  6E40               	movwf	??_efgtoa^0,c
  2132  00090E  0EFF               	movlw	255
  2133  000910  6E41               	movwf	(??_efgtoa+1)^0,c
  2134  000912  503F               	movf	efgtoa@c^0,w,c
  2135  000914  6E42               	movwf	(??_efgtoa+2)^0,c
  2136  000916  6A43               	clrf	(??_efgtoa+3)^0,c
  2137  000918  5040               	movf	??_efgtoa^0,w,c
  2138  00091A  2642               	addwf	(??_efgtoa+2)^0,f,c
  2139  00091C  5041               	movf	(??_efgtoa+1)^0,w,c
  2140  00091E  2243               	addwfc	(??_efgtoa+3)^0,f,c
  2141  000920  5043               	movf	(??_efgtoa+3)^0,w,c
  2142  000922  E10A               	bnz	u3950
  2143  000924  0E1A               	movlw	26
  2144  000926  5C42               	subwf	(??_efgtoa+2)^0,w,c
  2145  000928  A0D8               	btfss	status,0,c
  2146  00092A  EF99  F004         	goto	u3951
  2147  00092E  EF9C  F004         	goto	u3950
  2148  000932                     u3951:
  2149  000932  0E01               	movlw	1
  2150  000934  EF9D  F004         	goto	u3960
  2151  000938                     u3950:
  2152  000938  0E00               	movlw	0
  2153  00093A                     u3960:
  2154  00093A  0100               	movlb	0	; () banked
  2155  00093C  6F62               	movwf	_efgtoa$671& (0+255),b
  2156  00093E  6B63               	clrf	(_efgtoa$671+1)& (0+255),b
  2157  000940                     
  2158                           ; BSR set to: 0
  2159  000940  5162               	movf	_efgtoa$671& (0+255),w,b
  2160  000942  1163               	iorwf	(_efgtoa$671+1)& (0+255),w,b
  2161  000944  B4D8               	btfsc	status,2,c
  2162  000946  EFA7  F004         	goto	u3971
  2163  00094A  EFA9  F004         	goto	u3970
  2164  00094E                     u3971:
  2165  00094E  EFB7  F004         	goto	l3359
  2166  000952                     u3970:
  2167  000952                     
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2170  000952  0E00               	movlw	low _dbuf
  2171  000954  2592               	addwf	efgtoa@n& (0+255),w,b
  2172  000956  6E01               	movwf	strcpy@dest^0,c
  2173  000958  0E01               	movlw	high _dbuf
  2174  00095A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2175  00095C  6E02               	movwf	(strcpy@dest+1)^0,c
  2176  00095E  0E16               	movlw	low STR_3
  2177  000960  6E03               	movwf	strcpy@src^0,c
  2178  000962  0E08               	movlw	high STR_3
  2179  000964  6E04               	movwf	(strcpy@src+1)^0,c
  2180  000966  EC19  F01A         	call	_strcpy	;wreg free
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2183  00096A  EFC3  F004         	goto	l3361
  2184  00096E                     l3359:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2188  00096E  0E00               	movlw	low _dbuf
  2189  000970  2592               	addwf	efgtoa@n& (0+255),w,b
  2190  000972  6E01               	movwf	strcpy@dest^0,c
  2191  000974  0E01               	movlw	high _dbuf
  2192  000976  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2193  000978  6E02               	movwf	(strcpy@dest+1)^0,c
  2194  00097A  0E1E               	movlw	low STR_4
  2195  00097C  6E03               	movwf	strcpy@src^0,c
  2196  00097E  0E08               	movlw	high STR_4
  2197  000980  6E04               	movwf	(strcpy@src+1)^0,c
  2198  000982  EC19  F01A         	call	_strcpy	;wreg free
  2199  000986                     l3361:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2202  000986  0100               	movlb	0	; () banked
  2203  000988  0EFD               	movlw	253
  2204  00098A  277E               	addwf	efgtoa@w& (0+255),f,b
  2205  00098C  0EFF               	movlw	255
  2206  00098E  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2207  000990                     l3363:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2210  000990  C039  F011         	movff	efgtoa@fp,pad@fp
  2211  000994  C03A  F012         	movff	efgtoa@fp+1,pad@fp+1
  2212  000998  0E00               	movlw	low _dbuf
  2213  00099A  6E13               	movwf	pad@buf^0,c
  2214  00099C  0E01               	movlw	high _dbuf
  2215  00099E  6E14               	movwf	(pad@buf+1)^0,c
  2216  0009A0  C07E  F015         	movff	efgtoa@w,pad@p
  2217  0009A4  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  2218  0009A8  EC17  F018         	call	_pad	;wreg free
  2219  0009AC  C011  F039         	movff	?_pad,?_efgtoa
  2220  0009B0  C012  F03A         	movff	?_pad+1,?_efgtoa+1
  2221  0009B4  EF40  F00A         	goto	l825
  2222  0009B8                     l3367:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2225  0009B8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2226  0009BC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2227  0009C0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2228  0009C4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2229  0009C8  EC63  F016         	call	___fpclassifyf	;wreg free
  2230  0009CC  5001               	movf	?___fpclassifyf^0,w,c
  2231  0009CE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2232  0009D0  A4D8               	btfss	status,2,c
  2233  0009D2  EFED  F004         	goto	u3981
  2234  0009D6  EFEF  F004         	goto	u3980
  2235  0009DA                     u3981:
  2236  0009DA  EF2F  F005         	goto	l3385
  2237  0009DE                     u3980:
  2238  0009DE  0EBF               	movlw	191
  2239  0009E0  6E40               	movwf	??_efgtoa^0,c
  2240  0009E2  0EFF               	movlw	255
  2241  0009E4  6E41               	movwf	(??_efgtoa+1)^0,c
  2242  0009E6  503F               	movf	efgtoa@c^0,w,c
  2243  0009E8  6E42               	movwf	(??_efgtoa+2)^0,c
  2244  0009EA  6A43               	clrf	(??_efgtoa+3)^0,c
  2245  0009EC  5040               	movf	??_efgtoa^0,w,c
  2246  0009EE  2642               	addwf	(??_efgtoa+2)^0,f,c
  2247  0009F0  5041               	movf	(??_efgtoa+1)^0,w,c
  2248  0009F2  2243               	addwfc	(??_efgtoa+3)^0,f,c
  2249  0009F4  5043               	movf	(??_efgtoa+3)^0,w,c
  2250  0009F6  E10A               	bnz	u3990
  2251  0009F8  0E1A               	movlw	26
  2252  0009FA  5C42               	subwf	(??_efgtoa+2)^0,w,c
  2253  0009FC  A0D8               	btfss	status,0,c
  2254  0009FE  EF03  F005         	goto	u3991
  2255  000A02  EF06  F005         	goto	u3990
  2256  000A06                     u3991:
  2257  000A06  0E01               	movlw	1
  2258  000A08  EF07  F005         	goto	u4000
  2259  000A0C                     u3990:
  2260  000A0C  0E00               	movlw	0
  2261  000A0E                     u4000:
  2262  000A0E  0100               	movlb	0	; () banked
  2263  000A10  6F64               	movwf	_efgtoa$676& (0+255),b
  2264  000A12  6B65               	clrf	(_efgtoa$676+1)& (0+255),b
  2265  000A14                     
  2266                           ; BSR set to: 0
  2267  000A14  5164               	movf	_efgtoa$676& (0+255),w,b
  2268  000A16  1165               	iorwf	(_efgtoa$676+1)& (0+255),w,b
  2269  000A18  B4D8               	btfsc	status,2,c
  2270  000A1A  EF11  F005         	goto	u4011
  2271  000A1E  EF13  F005         	goto	u4010
  2272  000A22                     u4011:
  2273  000A22  EF21  F005         	goto	l3377
  2274  000A26                     u4010:
  2275  000A26                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2278  000A26  0E00               	movlw	low _dbuf
  2279  000A28  2592               	addwf	efgtoa@n& (0+255),w,b
  2280  000A2A  6E01               	movwf	strcpy@dest^0,c
  2281  000A2C  0E01               	movlw	high _dbuf
  2282  000A2E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2283  000A30  6E02               	movwf	(strcpy@dest+1)^0,c
  2284  000A32  0E1A               	movlw	low STR_7
  2285  000A34  6E03               	movwf	strcpy@src^0,c
  2286  000A36  0E08               	movlw	high STR_7
  2287  000A38  6E04               	movwf	(strcpy@src+1)^0,c
  2288  000A3A  EC19  F01A         	call	_strcpy	;wreg free
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2291  000A3E  EFC3  F004         	goto	l3361
  2292  000A42                     l3377:
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2296  000A42  0E00               	movlw	low _dbuf
  2297  000A44  2592               	addwf	efgtoa@n& (0+255),w,b
  2298  000A46  6E01               	movwf	strcpy@dest^0,c
  2299  000A48  0E01               	movlw	high _dbuf
  2300  000A4A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2301  000A4C  6E02               	movwf	(strcpy@dest+1)^0,c
  2302  000A4E  0E22               	movlw	low STR_8
  2303  000A50  6E03               	movwf	strcpy@src^0,c
  2304  000A52  0E08               	movlw	high STR_8
  2305  000A54  6E04               	movwf	(strcpy@src+1)^0,c
  2306  000A56  EC19  F01A         	call	_strcpy	;wreg free
  2307  000A5A  EFC3  F004         	goto	l3361
  2308  000A5E                     l3385:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2311  000A5E  0E00               	movlw	0
  2312  000A60  0100               	movlb	0	; () banked
  2313  000A62  6F94               	movwf	efgtoa@u& (0+255),b
  2314  000A64  0E00               	movlw	0
  2315  000A66  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2316  000A68  0E80               	movlw	128
  2317  000A6A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2318  000A6C  0E3F               	movlw	63
  2319  000A6E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2322  000A70  0E00               	movlw	0
  2323  000A72  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2324  000A74  0E00               	movlw	0
  2325  000A76  6F90               	movwf	efgtoa@e& (0+255),b
  2326  000A78                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2329  000A78  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2330  000A7C  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2331  000A80  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2332  000A84  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2333  000A88  0E00               	movlw	0
  2334  000A8A  6E05               	movwf	___fleq@ff2^0,c
  2335  000A8C  0E00               	movlw	0
  2336  000A8E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2337  000A90  0E00               	movlw	0
  2338  000A92  6E07               	movwf	(___fleq@ff2+2)^0,c
  2339  000A94  0E00               	movlw	0
  2340  000A96  6E08               	movwf	(___fleq@ff2+3)^0,c
  2341  000A98  EC34  F019         	call	___fleq	;wreg free
  2342  000A9C  B0D8               	btfsc	status,0,c
  2343  000A9E  EF53  F005         	goto	u4021
  2344  000AA2  EF55  F005         	goto	u4020
  2345  000AA6                     u4021:
  2346  000AA6  EFD8  F005         	goto	l3403
  2347  000AAA                     u4020:
  2348  000AAA  EF74  F005         	goto	l3395
  2349  000AAE                     l3391:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2352  000AAE  C094  F014         	movff	efgtoa@u,___flmul@b
  2353  000AB2  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  2354  000AB6  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  2355  000ABA  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  2356  000ABE  0E00               	movlw	0
  2357  000AC0  6E18               	movwf	___flmul@a^0,c
  2358  000AC2  0E00               	movlw	0
  2359  000AC4  6E19               	movwf	(___flmul@a+1)^0,c
  2360  000AC6  0E20               	movlw	32
  2361  000AC8  6E1A               	movwf	(___flmul@a+2)^0,c
  2362  000ACA  0E41               	movlw	65
  2363  000ACC  6E1B               	movwf	(___flmul@a+3)^0,c
  2364  000ACE  ECD1  F00E         	call	___flmul	;wreg free
  2365  000AD2  C014  F094         	movff	?___flmul,efgtoa@u
  2366  000AD6  C015  F095         	movff	?___flmul+1,efgtoa@u+1
  2367  000ADA  C016  F096         	movff	?___flmul+2,efgtoa@u+2
  2368  000ADE  C017  F097         	movff	?___flmul+3,efgtoa@u+3
  2369  000AE2                     
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2371  000AE2  0100               	movlb	0	; () banked
  2372  000AE4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2373  000AE6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2374  000AE8                     l3395:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2377  000AE8  C08C  F02D         	movff	efgtoa@g,___flge@ff1
  2378  000AEC  C08D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2379  000AF0  C08E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2380  000AF4  C08F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2381  000AF8  0E00               	movlw	0
  2382  000AFA  6E18               	movwf	___flmul@a^0,c
  2383  000AFC  0E00               	movlw	0
  2384  000AFE  6E19               	movwf	(___flmul@a+1)^0,c
  2385  000B00  0E20               	movlw	32
  2386  000B02  6E1A               	movwf	(___flmul@a+2)^0,c
  2387  000B04  0E41               	movlw	65
  2388  000B06  6E1B               	movwf	(___flmul@a+3)^0,c
  2389  000B08  C094  F014         	movff	efgtoa@u,___flmul@b
  2390  000B0C  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  2391  000B10  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  2392  000B14  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  2393  000B18  ECD1  F00E         	call	___flmul	;wreg free
  2394  000B1C  C014  F031         	movff	?___flmul,___flge@ff2
  2395  000B20  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2396  000B24  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2397  000B28  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2398  000B2C  ECE1  F015         	call	___flge	;wreg free
  2399  000B30  B0D8               	btfsc	status,0,c
  2400  000B32  EF9D  F005         	goto	u4031
  2401  000B36  EF9F  F005         	goto	u4030
  2402  000B3A                     u4031:
  2403  000B3A  EF57  F005         	goto	l3391
  2404  000B3E                     u4030:
  2405  000B3E  EFBF  F005         	goto	l3401
  2406  000B42                     l3397:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2409  000B42  C094  F001         	movff	efgtoa@u,___fldiv@b
  2410  000B46  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2411  000B4A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2412  000B4E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2413  000B52  0E00               	movlw	0
  2414  000B54  6E05               	movwf	___fldiv@a^0,c
  2415  000B56  0E00               	movlw	0
  2416  000B58  6E06               	movwf	(___fldiv@a+1)^0,c
  2417  000B5A  0E20               	movlw	32
  2418  000B5C  6E07               	movwf	(___fldiv@a+2)^0,c
  2419  000B5E  0E41               	movlw	65
  2420  000B60  6E08               	movwf	(___fldiv@a+3)^0,c
  2421  000B62  ECE6  F010         	call	___fldiv	;wreg free
  2422  000B66  C001  F094         	movff	?___fldiv,efgtoa@u
  2423  000B6A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2424  000B6E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2425  000B72  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2426  000B76                     
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2428  000B76  0100               	movlb	0	; () banked
  2429  000B78  0790               	decf	efgtoa@e& (0+255),f,b
  2430  000B7A  A0D8               	btfss	status,0,c
  2431  000B7C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2432  000B7E                     l3401:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2435  000B7E  C08C  F02D         	movff	efgtoa@g,___flge@ff1
  2436  000B82  C08D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2437  000B86  C08E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2438  000B8A  C08F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2439  000B8E  C094  F031         	movff	efgtoa@u,___flge@ff2
  2440  000B92  C095  F032         	movff	efgtoa@u+1,___flge@ff2+1
  2441  000B96  C096  F033         	movff	efgtoa@u+2,___flge@ff2+2
  2442  000B9A  C097  F034         	movff	efgtoa@u+3,___flge@ff2+3
  2443  000B9E  ECE1  F015         	call	___flge	;wreg free
  2444  000BA2  A0D8               	btfss	status,0,c
  2445  000BA4  EFD6  F005         	goto	u4041
  2446  000BA8  EFD8  F005         	goto	u4040
  2447  000BAC                     u4041:
  2448  000BAC  EFA1  F005         	goto	l3397
  2449  000BB0                     u4040:
  2450  000BB0                     l3403:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2453  000BB0  C03F  F007         	movff	efgtoa@c,tolower@c
  2454  000BB4  6A08               	clrf	(tolower@c+1)^0,c
  2455  000BB6  ECBA  F019         	call	_tolower	;wreg free
  2456  000BBA  5007               	movf	?_tolower^0,w,c
  2457  000BBC  0100               	movlb	0	; () banked
  2458  000BBE  6F81               	movwf	efgtoa@mode& (0+255),b
  2459  000BC0                     
  2460                           ; BSR set to: 0
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2462  000BC0  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2463  000BC4                     
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2466  000BC4  0E67               	movlw	103
  2467  000BC6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2468  000BC8  A4D8               	btfss	status,2,c
  2469  000BCA  EFE9  F005         	goto	u4051
  2470  000BCE  EFEB  F005         	goto	u4050
  2471  000BD2                     u4051:
  2472  000BD2  EF11  F006         	goto	l3417
  2473  000BD6                     u4050:
  2474  000BD6                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2477  000BD6  51C8               	movf	_prec& (0+255),w,b
  2478  000BD8  11C9               	iorwf	(_prec+1)& (0+255),w,b
  2479  000BDA  A4D8               	btfss	status,2,c
  2480  000BDC  EFF2  F005         	goto	u4061
  2481  000BE0  EFF4  F005         	goto	u4060
  2482  000BE4                     u4061:
  2483  000BE4  EFF8  F005         	goto	l3413
  2484  000BE8                     u4060:
  2485  000BE8                     
  2486                           ; BSR set to: 0
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2488  000BE8  0E00               	movlw	0
  2489  000BEA  6FC9               	movwf	(_prec+1)& (0+255),b
  2490  000BEC  0E01               	movlw	1
  2491  000BEE  6FC8               	movwf	_prec& (0+255),b
  2492  000BF0                     l3413:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2496  000BF0  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2497  000BF2  EF05  F006         	goto	u4070
  2498  000BF6  51C9               	movf	(_prec+1)& (0+255),w,b
  2499  000BF8  E106               	bnz	u4071
  2500  000BFA  05C8               	decf	_prec& (0+255),w,b
  2501  000BFC  B0D8               	btfsc	status,0,c
  2502  000BFE  EF03  F006         	goto	u4071
  2503  000C02  EF05  F006         	goto	u4070
  2504  000C06                     u4071:
  2505  000C06  EF0B  F006         	goto	l843
  2506  000C0A                     u4070:
  2507  000C0A                     l3415:
  2508                           
  2509                           ; BSR set to: 0
  2510  000C0A  0E00               	movlw	0
  2511  000C0C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2512  000C0E  0E06               	movlw	6
  2513  000C10  6F7C               	movwf	efgtoa@p& (0+255),b
  2514  000C12  EF1A  F006         	goto	l3423
  2515  000C16                     l843:
  2516                           
  2517                           ; BSR set to: 0
  2518  000C16  C0C8  F07C         	movff	_prec,efgtoa@p
  2519  000C1A  C0C9  F07D         	movff	_prec+1,efgtoa@p+1
  2520  000C1E  EF1A  F006         	goto	l3423
  2521  000C22                     l3417:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2525  000C22  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2526  000C24  EF16  F006         	goto	u4081
  2527  000C28  EF18  F006         	goto	u4080
  2528  000C2C                     u4081:
  2529  000C2C  EF05  F006         	goto	l3415
  2530  000C30                     u4080:
  2531  000C30  EF0B  F006         	goto	l843
  2532  000C34                     l3423:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2536  000C34  0E67               	movlw	103
  2537  000C36  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2538  000C38  A4D8               	btfss	status,2,c
  2539  000C3A  EF21  F006         	goto	u4091
  2540  000C3E  EF23  F006         	goto	u4090
  2541  000C42                     u4091:
  2542  000C42  EF52  F006         	goto	l3433
  2543  000C46                     u4090:
  2544  000C46                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2547  000C46  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2548  000C48  EF31  F006         	goto	u4100
  2549  000C4C  0EFC               	movlw	252
  2550  000C4E  5D90               	subwf	efgtoa@e& (0+255),w,b
  2551  000C50  0EFF               	movlw	255
  2552  000C52  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2553  000C54  A0D8               	btfss	status,0,c
  2554  000C56  EF2F  F006         	goto	u4101
  2555  000C5A  EF31  F006         	goto	u4100
  2556  000C5E                     u4101:
  2557  000C5E  EF50  F006         	goto	l3431
  2558  000C62                     u4100:
  2559  000C62                     
  2560                           ; BSR set to: 0
  2561  000C62  0EFF               	movlw	255
  2562  000C64  6E40               	movwf	??_efgtoa^0,c
  2563  000C66  0EFF               	movlw	255
  2564  000C68  6E41               	movwf	(??_efgtoa+1)^0,c
  2565  000C6A  C07C  F042         	movff	efgtoa@p,??_efgtoa+2
  2566  000C6E  C07D  F043         	movff	efgtoa@p+1,??_efgtoa+3
  2567  000C72  5040               	movf	??_efgtoa^0,w,c
  2568  000C74  2642               	addwf	(??_efgtoa+2)^0,f,c
  2569  000C76  5041               	movf	(??_efgtoa+1)^0,w,c
  2570  000C78  2243               	addwfc	(??_efgtoa+3)^0,f,c
  2571  000C7A  5190               	movf	efgtoa@e& (0+255),w,b
  2572  000C7C  5C42               	subwf	(??_efgtoa+2)^0,w,c
  2573  000C7E  5043               	movf	(??_efgtoa+3)^0,w,c
  2574  000C80  0A80               	xorlw	128
  2575  000C82  6E44               	movwf	(??_efgtoa+4)^0,c
  2576  000C84  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2577  000C86  0A80               	xorlw	128
  2578  000C88  5844               	subwfb	(??_efgtoa+4)^0,w,c
  2579  000C8A  A0D8               	btfss	status,0,c
  2580  000C8C  EF4A  F006         	goto	u4111
  2581  000C90  EF4C  F006         	goto	u4110
  2582  000C94                     u4111:
  2583  000C94  EF50  F006         	goto	l3431
  2584  000C98                     u4110:
  2585  000C98                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2588  000C98  0E66               	movlw	102
  2589  000C9A  6F80               	movwf	efgtoa@nmode& (0+255),b
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2592  000C9C  EF52  F006         	goto	l3433
  2593  000CA0                     l3431:
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2597  000CA0  0E65               	movlw	101
  2598  000CA2  6F80               	movwf	efgtoa@nmode& (0+255),b
  2599  000CA4                     l3433:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2603  000CA4  C07C  F072         	movff	efgtoa@p,efgtoa@m
  2604  000CA8  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  2605  000CAC                     
  2606                           ; BSR set to: 0
  2607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2608  000CAC  0E67               	movlw	103
  2609  000CAE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2610  000CB0  A4D8               	btfss	status,2,c
  2611  000CB2  EF5D  F006         	goto	u4121
  2612  000CB6  EF5F  F006         	goto	u4120
  2613  000CBA                     u4121:
  2614  000CBA  EF6F  F006         	goto	l3441
  2615  000CBE                     u4120:
  2616  000CBE                     
  2617                           ; BSR set to: 0
  2618  000CBE  0E66               	movlw	102
  2619  000CC0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2620  000CC2  A4D8               	btfss	status,2,c
  2621  000CC4  EF66  F006         	goto	u4131
  2622  000CC8  EF68  F006         	goto	u4130
  2623  000CCC                     u4131:
  2624  000CCC  EF71  F006         	goto	l3443
  2625  000CD0                     u4130:
  2626  000CD0                     
  2627                           ; BSR set to: 0
  2628  000CD0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2629  000CD2  EF6F  F006         	goto	u4140
  2630  000CD6  EF6D  F006         	goto	u4141
  2631  000CDA                     u4141:
  2632  000CDA  EF71  F006         	goto	l3443
  2633  000CDE                     u4140:
  2634  000CDE                     l3441:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2638  000CDE  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2639  000CE0  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2640  000CE2                     l3443:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2644  000CE2  0E66               	movlw	102
  2645  000CE4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2646  000CE6  A4D8               	btfss	status,2,c
  2647  000CE8  EF78  F006         	goto	u4151
  2648  000CEC  EF7A  F006         	goto	u4150
  2649  000CF0                     u4151:
  2650  000CF0  EF9A  F006         	goto	l3453
  2651  000CF4                     u4150:
  2652  000CF4                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2655  000CF4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2656  000CF6  EF81  F006         	goto	u4160
  2657  000CFA  EF7F  F006         	goto	u4161
  2658  000CFE                     u4161:
  2659  000CFE  EF8D  F006         	goto	l3449
  2660  000D02                     u4160:
  2661  000D02                     
  2662                           ; BSR set to: 0
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2664  000D02  0E00               	movlw	0
  2665  000D04  6F94               	movwf	efgtoa@u& (0+255),b
  2666  000D06  0E00               	movlw	0
  2667  000D08  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2668  000D0A  0E80               	movlw	128
  2669  000D0C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2670  000D0E  0E3F               	movlw	63
  2671  000D10  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2674  000D12  0E00               	movlw	0
  2675  000D14  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2676  000D16  0E00               	movlw	0
  2677  000D18  6F90               	movwf	efgtoa@e& (0+255),b
  2678  000D1A                     l3449:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2682  000D1A  0E67               	movlw	103
  2683  000D1C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2684  000D1E  B4D8               	btfsc	status,2,c
  2685  000D20  EF94  F006         	goto	u4171
  2686  000D24  EF96  F006         	goto	u4170
  2687  000D28                     u4171:
  2688  000D28  EF9A  F006         	goto	l3453
  2689  000D2C                     u4170:
  2690  000D2C                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2693  000D2C  5190               	movf	efgtoa@e& (0+255),w,b
  2694  000D2E  2772               	addwf	efgtoa@m& (0+255),f,b
  2695  000D30  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2696  000D32  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2697  000D34                     l3453:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2701  000D34  0E00               	movlw	0
  2702  000D36  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2703  000D38  0E00               	movlw	0
  2704  000D3A  6F8A               	movwf	efgtoa@i& (0+255),b
  2705  000D3C                     
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2708  000D3C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2709  000D40  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2710  000D44  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2711  000D48  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2712  000D4C                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2715  000D4C  C094  F074         	movff	efgtoa@u,efgtoa@ou
  2716  000D50  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  2717  000D54  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  2718  000D58  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2721  000D5C  EF2B  F007         	goto	l3467
  2722  000D60                     l3459:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2726  000D60  C082  F001         	movff	efgtoa@h,___fldiv@b
  2727  000D64  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2728  000D68  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2729  000D6C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2730  000D70  C094  F005         	movff	efgtoa@u,___fldiv@a
  2731  000D74  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2732  000D78  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2733  000D7C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2734  000D80  ECE6  F010         	call	___fldiv	;wreg free
  2735  000D84  C001  F01A         	movff	?___fldiv,floorf@x
  2736  000D88  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2737  000D8C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2738  000D90  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2739  000D94  ECB3  F012         	call	_floorf	;wreg free
  2740  000D98  C01A  F086         	movff	?_floorf,efgtoa@l
  2741  000D9C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2742  000DA0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2743  000DA4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2746  000DA8  C086  F001         	movff	efgtoa@l,___fltol@f1
  2747  000DAC  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2748  000DB0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2749  000DB4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2750  000DB8  EC5E  F015         	call	___fltol	;wreg free
  2751  000DBC  C001  F078         	movff	?___fltol,efgtoa@d
  2752  000DC0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2753  000DC4                     
  2754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2755  000DC4  C082  F02D         	movff	efgtoa@h,___flsub@b
  2756  000DC8  C083  F02E         	movff	efgtoa@h+1,___flsub@b+1
  2757  000DCC  C084  F02F         	movff	efgtoa@h+2,___flsub@b+2
  2758  000DD0  C085  F030         	movff	efgtoa@h+3,___flsub@b+3
  2759  000DD4  C094  F018         	movff	efgtoa@u,___flmul@a
  2760  000DD8  C095  F019         	movff	efgtoa@u+1,___flmul@a+1
  2761  000DDC  C096  F01A         	movff	efgtoa@u+2,___flmul@a+2
  2762  000DE0  C097  F01B         	movff	efgtoa@u+3,___flmul@a+3
  2763  000DE4  C086  F014         	movff	efgtoa@l,___flmul@b
  2764  000DE8  C087  F015         	movff	efgtoa@l+1,___flmul@b+1
  2765  000DEC  C088  F016         	movff	efgtoa@l+2,___flmul@b+2
  2766  000DF0  C089  F017         	movff	efgtoa@l+3,___flmul@b+3
  2767  000DF4  ECD1  F00E         	call	___flmul	;wreg free
  2768  000DF8  C014  F031         	movff	?___flmul,___flsub@a
  2769  000DFC  C015  F032         	movff	?___flmul+1,___flsub@a+1
  2770  000E00  C016  F033         	movff	?___flmul+2,___flsub@a+2
  2771  000E04  C017  F034         	movff	?___flmul+3,___flsub@a+3
  2772  000E08  ECEC  F01A         	call	___flsub	;wreg free
  2773  000E0C  C02D  F082         	movff	?___flsub,efgtoa@h
  2774  000E10  C02E  F083         	movff	?___flsub+1,efgtoa@h+1
  2775  000E14  C02F  F084         	movff	?___flsub+2,efgtoa@h+2
  2776  000E18  C030  F085         	movff	?___flsub+3,efgtoa@h+3
  2777  000E1C                     
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2779  000E1C  C094  F001         	movff	efgtoa@u,___fldiv@b
  2780  000E20  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2781  000E24  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2782  000E28  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2783  000E2C  0E00               	movlw	0
  2784  000E2E  6E05               	movwf	___fldiv@a^0,c
  2785  000E30  0E00               	movlw	0
  2786  000E32  6E06               	movwf	(___fldiv@a+1)^0,c
  2787  000E34  0E20               	movlw	32
  2788  000E36  6E07               	movwf	(___fldiv@a+2)^0,c
  2789  000E38  0E41               	movlw	65
  2790  000E3A  6E08               	movwf	(___fldiv@a+3)^0,c
  2791  000E3C  ECE6  F010         	call	___fldiv	;wreg free
  2792  000E40  C001  F094         	movff	?___fldiv,efgtoa@u
  2793  000E44  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2794  000E48  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2795  000E4C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2796  000E50                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2798  000E50  0100               	movlb	0	; () banked
  2799  000E52  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2800  000E54  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2801  000E56                     l3467:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2805  000E56  5172               	movf	efgtoa@m& (0+255),w,b
  2806  000E58  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2807  000E5A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2808  000E5C  0A80               	xorlw	128
  2809  000E5E  6E40               	movwf	??_efgtoa^0,c
  2810  000E60  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  2811  000E62  0A80               	xorlw	128
  2812  000E64  5840               	subwfb	??_efgtoa^0,w,c
  2813  000E66  A0D8               	btfss	status,0,c
  2814  000E68  EF38  F007         	goto	u4181
  2815  000E6C  EF3A  F007         	goto	u4180
  2816  000E70                     u4181:
  2817  000E70  EFB0  F006         	goto	l3459
  2818  000E74                     u4180:
  2819  000E74                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2822  000E74  C094  F014         	movff	efgtoa@u,___flmul@b
  2823  000E78  C095  F015         	movff	efgtoa@u+1,___flmul@b+1
  2824  000E7C  C096  F016         	movff	efgtoa@u+2,___flmul@b+2
  2825  000E80  C097  F017         	movff	efgtoa@u+3,___flmul@b+3
  2826  000E84  0E00               	movlw	0
  2827  000E86  6E18               	movwf	___flmul@a^0,c
  2828  000E88  0E00               	movlw	0
  2829  000E8A  6E19               	movwf	(___flmul@a+1)^0,c
  2830  000E8C  0EA0               	movlw	160
  2831  000E8E  6E1A               	movwf	(___flmul@a+2)^0,c
  2832  000E90  0E40               	movlw	64
  2833  000E92  6E1B               	movwf	(___flmul@a+3)^0,c
  2834  000E94  ECD1  F00E         	call	___flmul	;wreg free
  2835  000E98  C014  F086         	movff	?___flmul,efgtoa@l
  2836  000E9C  C015  F087         	movff	?___flmul+1,efgtoa@l+1
  2837  000EA0  C016  F088         	movff	?___flmul+2,efgtoa@l+2
  2838  000EA4  C017  F089         	movff	?___flmul+3,efgtoa@l+3
  2839  000EA8                     
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2841  000EA8  C082  F02D         	movff	efgtoa@h,___flge@ff1
  2842  000EAC  C083  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2843  000EB0  C084  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2844  000EB4  C085  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2845  000EB8  C086  F031         	movff	efgtoa@l,___flge@ff2
  2846  000EBC  C087  F032         	movff	efgtoa@l+1,___flge@ff2+1
  2847  000EC0  C088  F033         	movff	efgtoa@l+2,___flge@ff2+2
  2848  000EC4  C089  F034         	movff	efgtoa@l+3,___flge@ff2+3
  2849  000EC8  ECE1  F015         	call	___flge	;wreg free
  2850  000ECC  B0D8               	btfsc	status,0,c
  2851  000ECE  EF6B  F007         	goto	u4191
  2852  000ED2  EF6D  F007         	goto	u4190
  2853  000ED6                     u4191:
  2854  000ED6  EF78  F007         	goto	l3475
  2855  000EDA                     u4190:
  2856  000EDA                     
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2858  000EDA  0E00               	movlw	0
  2859  000EDC  0100               	movlb	0	; () banked
  2860  000EDE  6F86               	movwf	efgtoa@l& (0+255),b
  2861  000EE0  0E00               	movlw	0
  2862  000EE2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2863  000EE4  0E00               	movlw	0
  2864  000EE6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2865  000EE8  0E00               	movlw	0
  2866  000EEA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  2869  000EEC  EFA1  F007         	goto	l3481
  2870  000EF0                     l3475:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2873  000EF0  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2874  000EF4  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2875  000EF8  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2876  000EFC  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2877  000F00  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2878  000F04  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2879  000F08  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2880  000F0C  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2881  000F10  EC34  F019         	call	___fleq	;wreg free
  2882  000F14  A0D8               	btfss	status,0,c
  2883  000F16  EF8F  F007         	goto	u4201
  2884  000F1A  EF91  F007         	goto	u4200
  2885  000F1E                     u4201:
  2886  000F1E  EFA1  F007         	goto	l3481
  2887  000F22                     u4200:
  2888  000F22  0100               	movlb	0	; () banked
  2889  000F24  B178               	btfsc	efgtoa@d& (0+255),0,b
  2890  000F26  EF97  F007         	goto	u4211
  2891  000F2A  EF99  F007         	goto	u4210
  2892  000F2E                     u4211:
  2893  000F2E  EFA1  F007         	goto	l3481
  2894  000F32                     u4210:
  2895  000F32                     
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2898  000F32  0E00               	movlw	0
  2899  000F34  6F86               	movwf	efgtoa@l& (0+255),b
  2900  000F36  0E00               	movlw	0
  2901  000F38  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2902  000F3A  0E00               	movlw	0
  2903  000F3C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2904  000F3E  0E00               	movlw	0
  2905  000F40  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2906  000F42                     l3481:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2909  000F42  C08C  F001         	movff	efgtoa@g,___fladd@b
  2910  000F46  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2911  000F4A  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2912  000F4E  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2913  000F52  C086  F005         	movff	efgtoa@l,___fladd@a
  2914  000F56  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2915  000F5A  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2916  000F5E  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2917  000F62  EC41  F00A         	call	___fladd	;wreg free
  2918  000F66  C001  F082         	movff	?___fladd,efgtoa@h
  2919  000F6A  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2920  000F6E  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2921  000F72  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2922  000F76                     
  2923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2924  000F76  C082  F02D         	movff	efgtoa@h,___flge@ff1
  2925  000F7A  C083  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  2926  000F7E  C084  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  2927  000F82  C085  F030         	movff	efgtoa@h+3,___flge@ff1+3
  2928  000F86  0E00               	movlw	0
  2929  000F88  6E18               	movwf	___flmul@a^0,c
  2930  000F8A  0E00               	movlw	0
  2931  000F8C  6E19               	movwf	(___flmul@a+1)^0,c
  2932  000F8E  0E20               	movlw	32
  2933  000F90  6E1A               	movwf	(___flmul@a+2)^0,c
  2934  000F92  0E41               	movlw	65
  2935  000F94  6E1B               	movwf	(___flmul@a+3)^0,c
  2936  000F96  C074  F014         	movff	efgtoa@ou,___flmul@b
  2937  000F9A  C075  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2938  000F9E  C076  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2939  000FA2  C077  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2940  000FA6  ECD1  F00E         	call	___flmul	;wreg free
  2941  000FAA  C014  F031         	movff	?___flmul,___flge@ff2
  2942  000FAE  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2943  000FB2  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2944  000FB6  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2945  000FBA  ECE1  F015         	call	___flge	;wreg free
  2946  000FBE  A0D8               	btfss	status,0,c
  2947  000FC0  EFE4  F007         	goto	u4221
  2948  000FC4  EFE6  F007         	goto	u4220
  2949  000FC8                     u4221:
  2950  000FC8  EF0F  F008         	goto	l3493
  2951  000FCC                     u4220:
  2952  000FCC                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  2954  000FCC  0100               	movlb	0	; () banked
  2955  000FCE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2956  000FD0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2957  000FD2                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  2960  000FD2  C074  F014         	movff	efgtoa@ou,___flmul@b
  2961  000FD6  C075  F015         	movff	efgtoa@ou+1,___flmul@b+1
  2962  000FDA  C076  F016         	movff	efgtoa@ou+2,___flmul@b+2
  2963  000FDE  C077  F017         	movff	efgtoa@ou+3,___flmul@b+3
  2964  000FE2  0E00               	movlw	0
  2965  000FE4  6E18               	movwf	___flmul@a^0,c
  2966  000FE6  0E00               	movlw	0
  2967  000FE8  6E19               	movwf	(___flmul@a+1)^0,c
  2968  000FEA  0E20               	movlw	32
  2969  000FEC  6E1A               	movwf	(___flmul@a+2)^0,c
  2970  000FEE  0E41               	movlw	65
  2971  000FF0  6E1B               	movwf	(___flmul@a+3)^0,c
  2972  000FF2  ECD1  F00E         	call	___flmul	;wreg free
  2973  000FF6  C014  F074         	movff	?___flmul,efgtoa@ou
  2974  000FFA  C015  F075         	movff	?___flmul+1,efgtoa@ou+1
  2975  000FFE  C016  F076         	movff	?___flmul+2,efgtoa@ou+2
  2976  001002  C017  F077         	movff	?___flmul+3,efgtoa@ou+3
  2977  001006                     
  2978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  2979  001006  0E66               	movlw	102
  2980  001008  0100               	movlb	0	; () banked
  2981  00100A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2982  00100C  A4D8               	btfss	status,2,c
  2983  00100E  EF0B  F008         	goto	u4231
  2984  001012  EF0D  F008         	goto	u4230
  2985  001016                     u4231:
  2986  001016  EF0F  F008         	goto	l3493
  2987  00101A                     u4230:
  2988  00101A                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  2991  00101A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2992  00101C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2993  00101E                     l3493:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  2996  00101E  C074  F094         	movff	efgtoa@ou,efgtoa@u
  2997  001022  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2998  001026  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2999  00102A  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3000  00102E                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3002  00102E  0E65               	movlw	101
  3003  001030  0100               	movlb	0	; () banked
  3004  001032  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3005  001034  B4D8               	btfsc	status,2,c
  3006  001036  EF1F  F008         	goto	u4241
  3007  00103A  EF21  F008         	goto	u4240
  3008  00103E                     u4241:
  3009  00103E  EF27  F008         	goto	l3499
  3010  001042                     u4240:
  3011  001042                     
  3012                           ; BSR set to: 0
  3013  001042  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3014  001046  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3015  00104A  EF2B  F008         	goto	l871
  3016  00104E                     l3499:
  3017                           
  3018                           ; BSR set to: 0
  3019  00104E  0E00               	movlw	0
  3020  001050  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3021  001052  0E00               	movlw	0
  3022  001054  6F70               	movwf	efgtoa@ne& (0+255),b
  3023  001056                     l871:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3027  001056  0E00               	movlw	0
  3028  001058  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3029  00105A  0E00               	movlw	0
  3030  00105C  6F6E               	movwf	efgtoa@pp& (0+255),b
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3033  00105E  0E00               	movlw	0
  3034  001060  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3035  001062  0E00               	movlw	0
  3036  001064  6F6C               	movwf	efgtoa@t& (0+255),b
  3037                           
  3038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3039  001066  0E00               	movlw	0
  3040  001068  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3041  00106A  0E00               	movlw	0
  3042  00106C  6F8A               	movwf	efgtoa@i& (0+255),b
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3045  00106E  EF26  F009         	goto	l3549
  3046  001072                     l3501:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3050  001072  C082  F001         	movff	efgtoa@h,___fldiv@b
  3051  001076  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3052  00107A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3053  00107E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3054  001082  C094  F005         	movff	efgtoa@u,___fldiv@a
  3055  001086  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3056  00108A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3057  00108E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3058  001092  ECE6  F010         	call	___fldiv	;wreg free
  3059  001096  C001  F01A         	movff	?___fldiv,floorf@x
  3060  00109A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3061  00109E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3062  0010A2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3063  0010A6  ECB3  F012         	call	_floorf	;wreg free
  3064  0010AA  C01A  F086         	movff	?_floorf,efgtoa@l
  3065  0010AE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3066  0010B2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3067  0010B6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3070  0010BA  C086  F001         	movff	efgtoa@l,___fltol@f1
  3071  0010BE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3072  0010C2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3073  0010C6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3074  0010CA  EC5E  F015         	call	___fltol	;wreg free
  3075  0010CE  C001  F078         	movff	?___fltol,efgtoa@d
  3076  0010D2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3077  0010D6                     
  3078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3079  0010D6  0100               	movlb	0	; () banked
  3080  0010D8  B9CA               	btfsc	_flags& (0+255),4,b
  3081  0010DA  EF71  F008         	goto	u4251
  3082  0010DE  EF73  F008         	goto	u4250
  3083  0010E2                     u4251:
  3084  0010E2  EF90  F008         	goto	l3513
  3085  0010E6                     u4250:
  3086  0010E6                     
  3087                           ; BSR set to: 0
  3088  0010E6  5178               	movf	efgtoa@d& (0+255),w,b
  3089  0010E8  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3090  0010EA  A4D8               	btfss	status,2,c
  3091  0010EC  EF7A  F008         	goto	u4261
  3092  0010F0  EF7C  F008         	goto	u4260
  3093  0010F4                     u4261:
  3094  0010F4  EF90  F008         	goto	l3513
  3095  0010F8                     u4260:
  3096  0010F8                     
  3097                           ; BSR set to: 0
  3098  0010F8  0E67               	movlw	103
  3099  0010FA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3100  0010FC  A4D8               	btfss	status,2,c
  3101  0010FE  EF83  F008         	goto	u4271
  3102  001102  EF85  F008         	goto	u4270
  3103  001106                     u4271:
  3104  001106  EF90  F008         	goto	l3513
  3105  00110A                     u4270:
  3106  00110A                     
  3107                           ; BSR set to: 0
  3108  00110A  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3109  00110C  EF8C  F008         	goto	u4280
  3110  001110  EF8A  F008         	goto	u4281
  3111  001114                     u4281:
  3112  001114  EF90  F008         	goto	l3513
  3113  001118                     u4280:
  3114  001118                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3117  001118  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3118  00111A  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3121  00111C  EFDA  F008         	goto	l3541
  3122  001120                     l3513:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3126  001120  516E               	movf	efgtoa@pp& (0+255),w,b
  3127  001122  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3128  001124  A4D8               	btfss	status,2,c
  3129  001126  EF97  F008         	goto	u4291
  3130  00112A  EF99  F008         	goto	u4290
  3131  00112E                     u4291:
  3132  00112E  EFC3  F008         	goto	l3533
  3133  001132                     u4290:
  3134  001132                     
  3135                           ; BSR set to: 0
  3136  001132  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3137  001134  EFA0  F008         	goto	u4300
  3138  001138  EF9E  F008         	goto	u4301
  3139  00113C                     u4301:
  3140  00113C  EFC3  F008         	goto	l3533
  3141  001140                     u4300:
  3142  001140                     
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3145  001140  0E00               	movlw	low _dbuf
  3146  001142  2592               	addwf	efgtoa@n& (0+255),w,b
  3147  001144  6ED9               	movwf	fsr2l,c
  3148  001146  0E01               	movlw	high _dbuf
  3149  001148  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3150  00114A  6EDA               	movwf	fsr2h,c
  3151  00114C  0E2E               	movlw	46
  3152  00114E  6EDF               	movwf	indf2,c
  3153  001150                     
  3154                           ; BSR set to: 0
  3155  001150  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3156  001152  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3157  001154                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3160  001154  077E               	decf	efgtoa@w& (0+255),f,b
  3161  001156  A0D8               	btfss	status,0,c
  3162  001158  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3163  00115A                     
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3166  00115A  0E00               	movlw	0
  3167  00115C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3168  00115E  0E01               	movlw	1
  3169  001160  6F6E               	movwf	efgtoa@pp& (0+255),b
  3170  001162  EFC3  F008         	goto	l3533
  3171  001166                     l3525:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3175  001166  0E00               	movlw	low _dbuf
  3176  001168  2592               	addwf	efgtoa@n& (0+255),w,b
  3177  00116A  6ED9               	movwf	fsr2l,c
  3178  00116C  0E01               	movlw	high _dbuf
  3179  00116E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3180  001170  6EDA               	movwf	fsr2h,c
  3181  001172  0E30               	movlw	48
  3182  001174  6EDF               	movwf	indf2,c
  3183  001176                     
  3184                           ; BSR set to: 0
  3185  001176  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3186  001178  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3187  00117A                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3190  00117A  077E               	decf	efgtoa@w& (0+255),f,b
  3191  00117C  A0D8               	btfss	status,0,c
  3192  00117E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3193  001180                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3196  001180  076C               	decf	efgtoa@t& (0+255),f,b
  3197  001182  A0D8               	btfss	status,0,c
  3198  001184  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3199  001186                     l3533:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3203  001186  516C               	movf	efgtoa@t& (0+255),w,b
  3204  001188  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3205  00118A  A4D8               	btfss	status,2,c
  3206  00118C  EFCA  F008         	goto	u4311
  3207  001190  EFCC  F008         	goto	u4310
  3208  001194                     u4311:
  3209  001194  EFB3  F008         	goto	l3525
  3210  001198                     u4310:
  3211  001198                     
  3212                           ; BSR set to: 0
  3213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3214  001198  0E00               	movlw	low _dbuf
  3215  00119A  2592               	addwf	efgtoa@n& (0+255),w,b
  3216  00119C  6ED9               	movwf	fsr2l,c
  3217  00119E  0E01               	movlw	high _dbuf
  3218  0011A0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3219  0011A2  6EDA               	movwf	fsr2h,c
  3220  0011A4  5178               	movf	efgtoa@d& (0+255),w,b
  3221  0011A6  0F30               	addlw	48
  3222  0011A8  6EDF               	movwf	indf2,c
  3223  0011AA                     
  3224                           ; BSR set to: 0
  3225  0011AA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3226  0011AC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3227  0011AE                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3230  0011AE  077E               	decf	efgtoa@w& (0+255),f,b
  3231  0011B0  A0D8               	btfss	status,0,c
  3232  0011B2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3233  0011B4                     l3541:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3237  0011B4  C082  F02D         	movff	efgtoa@h,___flsub@b
  3238  0011B8  C083  F02E         	movff	efgtoa@h+1,___flsub@b+1
  3239  0011BC  C084  F02F         	movff	efgtoa@h+2,___flsub@b+2
  3240  0011C0  C085  F030         	movff	efgtoa@h+3,___flsub@b+3
  3241  0011C4  C094  F018         	movff	efgtoa@u,___flmul@a
  3242  0011C8  C095  F019         	movff	efgtoa@u+1,___flmul@a+1
  3243  0011CC  C096  F01A         	movff	efgtoa@u+2,___flmul@a+2
  3244  0011D0  C097  F01B         	movff	efgtoa@u+3,___flmul@a+3
  3245  0011D4  C086  F014         	movff	efgtoa@l,___flmul@b
  3246  0011D8  C087  F015         	movff	efgtoa@l+1,___flmul@b+1
  3247  0011DC  C088  F016         	movff	efgtoa@l+2,___flmul@b+2
  3248  0011E0  C089  F017         	movff	efgtoa@l+3,___flmul@b+3
  3249  0011E4  ECD1  F00E         	call	___flmul	;wreg free
  3250  0011E8  C014  F031         	movff	?___flmul,___flsub@a
  3251  0011EC  C015  F032         	movff	?___flmul+1,___flsub@a+1
  3252  0011F0  C016  F033         	movff	?___flmul+2,___flsub@a+2
  3253  0011F4  C017  F034         	movff	?___flmul+3,___flsub@a+3
  3254  0011F8  ECEC  F01A         	call	___flsub	;wreg free
  3255  0011FC  C02D  F082         	movff	?___flsub,efgtoa@h
  3256  001200  C02E  F083         	movff	?___flsub+1,efgtoa@h+1
  3257  001204  C02F  F084         	movff	?___flsub+2,efgtoa@h+2
  3258  001208  C030  F085         	movff	?___flsub+3,efgtoa@h+3
  3259  00120C                     
  3260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3261  00120C  C094  F001         	movff	efgtoa@u,___fldiv@b
  3262  001210  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3263  001214  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3264  001218  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3265  00121C  0E00               	movlw	0
  3266  00121E  6E05               	movwf	___fldiv@a^0,c
  3267  001220  0E00               	movlw	0
  3268  001222  6E06               	movwf	(___fldiv@a+1)^0,c
  3269  001224  0E20               	movlw	32
  3270  001226  6E07               	movwf	(___fldiv@a+2)^0,c
  3271  001228  0E41               	movlw	65
  3272  00122A  6E08               	movwf	(___fldiv@a+3)^0,c
  3273  00122C  ECE6  F010         	call	___fldiv	;wreg free
  3274  001230  C001  F094         	movff	?___fldiv,efgtoa@u
  3275  001234  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3276  001238  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3277  00123C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3278  001240                     
  3279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3280  001240  0100               	movlb	0	; () banked
  3281  001242  0770               	decf	efgtoa@ne& (0+255),f,b
  3282  001244  A0D8               	btfss	status,0,c
  3283  001246  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3284  001248                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3287  001248  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3288  00124A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3289  00124C                     l3549:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3293  00124C  5172               	movf	efgtoa@m& (0+255),w,b
  3294  00124E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3295  001250  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3296  001252  0A80               	xorlw	128
  3297  001254  6E40               	movwf	??_efgtoa^0,c
  3298  001256  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3299  001258  0A80               	xorlw	128
  3300  00125A  5840               	subwfb	??_efgtoa^0,w,c
  3301  00125C  B0D8               	btfsc	status,0,c
  3302  00125E  EF33  F009         	goto	u4321
  3303  001262  EF35  F009         	goto	u4320
  3304  001266                     u4321:
  3305  001266  EF43  F009         	goto	l3553
  3306  00126A                     u4320:
  3307  00126A                     
  3308                           ; BSR set to: 0
  3309  00126A  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3310  00126C  EF41  F009         	goto	u4331
  3311  001270  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3312  001272  E109               	bnz	u4330
  3313  001274  0E4B               	movlw	75
  3314  001276  5D92               	subwf	efgtoa@n& (0+255),w,b
  3315  001278  A0D8               	btfss	status,0,c
  3316  00127A  EF41  F009         	goto	u4331
  3317  00127E  EF43  F009         	goto	u4330
  3318  001282                     u4331:
  3319  001282  EF39  F008         	goto	l3501
  3320  001286                     u4330:
  3321  001286                     l3553:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3325  001286  516E               	movf	efgtoa@pp& (0+255),w,b
  3326  001288  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3327  00128A  A4D8               	btfss	status,2,c
  3328  00128C  EF4A  F009         	goto	u4341
  3329  001290  EF4C  F009         	goto	u4340
  3330  001294                     u4341:
  3331  001294  EF5D  F009         	goto	l3561
  3332  001298                     u4340:
  3333  001298                     
  3334                           ; BSR set to: 0
  3335  001298  A9CA               	btfss	_flags& (0+255),4,b
  3336  00129A  EF51  F009         	goto	u4351
  3337  00129E  EF53  F009         	goto	u4350
  3338  0012A2                     u4351:
  3339  0012A2  EF5D  F009         	goto	l3561
  3340  0012A6                     u4350:
  3341  0012A6                     
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3344  0012A6  0E00               	movlw	low _dbuf
  3345  0012A8  2592               	addwf	efgtoa@n& (0+255),w,b
  3346  0012AA  6ED9               	movwf	fsr2l,c
  3347  0012AC  0E01               	movlw	high _dbuf
  3348  0012AE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3349  0012B0  6EDA               	movwf	fsr2h,c
  3350  0012B2  0E2E               	movlw	46
  3351  0012B4  6EDF               	movwf	indf2,c
  3352  0012B6                     
  3353                           ; BSR set to: 0
  3354  0012B6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3355  0012B8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3356  0012BA                     l3561:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3360  0012BA  0E00               	movlw	low _dbuf
  3361  0012BC  2592               	addwf	efgtoa@n& (0+255),w,b
  3362  0012BE  6ED9               	movwf	fsr2l,c
  3363  0012C0  0E01               	movlw	high _dbuf
  3364  0012C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3365  0012C4  6EDA               	movwf	fsr2h,c
  3366  0012C6  0E00               	movlw	0
  3367  0012C8  6EDF               	movwf	indf2,c
  3368  0012CA                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3371  0012CA  0E65               	movlw	101
  3372  0012CC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3373  0012CE  A4D8               	btfss	status,2,c
  3374  0012D0  EF6C  F009         	goto	u4361
  3375  0012D4  EF6E  F009         	goto	u4360
  3376  0012D8                     u4361:
  3377  0012D8  EFC8  F004         	goto	l3363
  3378  0012DC                     u4360:
  3379  0012DC                     
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3382  0012DC  0E00               	movlw	0
  3383  0012DE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3384  0012E0  0E4F               	movlw	79
  3385  0012E2  6F8A               	movwf	efgtoa@i& (0+255),b
  3386  0012E4                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3389  0012E4  0E00               	movlw	low _dbuf
  3390  0012E6  258A               	addwf	efgtoa@i& (0+255),w,b
  3391  0012E8  6ED9               	movwf	fsr2l,c
  3392  0012EA  0E01               	movlw	high _dbuf
  3393  0012EC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3394  0012EE  6EDA               	movwf	fsr2h,c
  3395  0012F0  0E00               	movlw	0
  3396  0012F2  6EDF               	movwf	indf2,c
  3397  0012F4                     
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3400  0012F4  0E00               	movlw	0
  3401  0012F6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3402  0012F8  0E00               	movlw	0
  3403  0012FA  6F7A               	movwf	efgtoa@sign& (0+255),b
  3404  0012FC                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3407  0012FC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3408  0012FE  EF85  F009         	goto	u4370
  3409  001302  EF83  F009         	goto	u4371
  3410  001306                     u4371:
  3411  001306  EF8D  F009         	goto	l3577
  3412  00130A                     u4370:
  3413  00130A                     
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3416  00130A  0E00               	movlw	0
  3417  00130C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3418  00130E  0E01               	movlw	1
  3419  001310  6F7A               	movwf	efgtoa@sign& (0+255),b
  3420  001312                     
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3423  001312  6D90               	negf	efgtoa@e& (0+255),b
  3424  001314  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3425  001316  B0D8               	btfsc	status,0,c
  3426  001318  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3427  00131A                     l3577:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3431  00131A  0E00               	movlw	0
  3432  00131C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3433  00131E  0E02               	movlw	2
  3434  001320  6F7C               	movwf	efgtoa@p& (0+255),b
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3437  001322  EFBE  F009         	goto	l3589
  3438  001326                     l3579:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3442  001326  078A               	decf	efgtoa@i& (0+255),f,b
  3443  001328  A0D8               	btfss	status,0,c
  3444  00132A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3445  00132C                     
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3448  00132C  0E00               	movlw	low _dbuf
  3449  00132E  258A               	addwf	efgtoa@i& (0+255),w,b
  3450  001330  6ED9               	movwf	fsr2l,c
  3451  001332  0E01               	movlw	high _dbuf
  3452  001334  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3453  001336  6EDA               	movwf	fsr2h,c
  3454  001338  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3455  00133C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3456  001340  0E00               	movlw	0
  3457  001342  6E04               	movwf	(___awmod@divisor+1)^0,c
  3458  001344  0E0A               	movlw	10
  3459  001346  6E03               	movwf	___awmod@divisor^0,c
  3460  001348  ECDC  F018         	call	___awmod	;wreg free
  3461  00134C  5001               	movf	?___awmod^0,w,c
  3462  00134E  0F30               	addlw	48
  3463  001350  6EDF               	movwf	indf2,c
  3464  001352                     
  3465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3466  001352  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3467  001356  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3468  00135A  0E00               	movlw	0
  3469  00135C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3470  00135E  0E0A               	movlw	10
  3471  001360  6E03               	movwf	___awdiv@divisor^0,c
  3472  001362  EC7A  F018         	call	___awdiv	;wreg free
  3473  001366  C001  F090         	movff	?___awdiv,efgtoa@e
  3474  00136A  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3475  00136E                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3477  00136E  0100               	movlb	0	; () banked
  3478  001370  077C               	decf	efgtoa@p& (0+255),f,b
  3479  001372  A0D8               	btfss	status,0,c
  3480  001374  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3481  001376                     
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3484  001376  077E               	decf	efgtoa@w& (0+255),f,b
  3485  001378  A0D8               	btfss	status,0,c
  3486  00137A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3487  00137C                     l3589:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3491  00137C  5190               	movf	efgtoa@e& (0+255),w,b
  3492  00137E  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3493  001380  A4D8               	btfss	status,2,c
  3494  001382  EFC5  F009         	goto	u4381
  3495  001386  EFC7  F009         	goto	u4380
  3496  00138A                     u4381:
  3497  00138A  EF93  F009         	goto	l3579
  3498  00138E                     u4380:
  3499  00138E                     
  3500                           ; BSR set to: 0
  3501  00138E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3502  001390  EFD4  F009         	goto	u4390
  3503  001394  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3504  001396  E106               	bnz	u4391
  3505  001398  057C               	decf	efgtoa@p& (0+255),w,b
  3506  00139A  B0D8               	btfsc	status,0,c
  3507  00139C  EFD2  F009         	goto	u4391
  3508  0013A0  EFD4  F009         	goto	u4390
  3509  0013A4                     u4391:
  3510  0013A4  EF93  F009         	goto	l3579
  3511  0013A8                     u4390:
  3512  0013A8                     
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  3515  0013A8  078A               	decf	efgtoa@i& (0+255),f,b
  3516  0013AA  A0D8               	btfss	status,0,c
  3517  0013AC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3518  0013AE                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3521  0013AE  517A               	movf	efgtoa@sign& (0+255),w,b
  3522  0013B0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3523  0013B2  A4D8               	btfss	status,2,c
  3524  0013B4  EFDE  F009         	goto	u4401
  3525  0013B8  EFE0  F009         	goto	u4400
  3526  0013BC                     u4401:
  3527  0013BC  EFE6  F009         	goto	l3599
  3528  0013C0                     u4400:
  3529  0013C0                     
  3530                           ; BSR set to: 0
  3531  0013C0  0E00               	movlw	0
  3532  0013C2  6F67               	movwf	(_efgtoa$680+1)& (0+255),b
  3533  0013C4  0E2B               	movlw	43
  3534  0013C6  6F66               	movwf	_efgtoa$680& (0+255),b
  3535  0013C8  EFEA  F009         	goto	l3601
  3536  0013CC                     l3599:
  3537                           
  3538                           ; BSR set to: 0
  3539  0013CC  0E00               	movlw	0
  3540  0013CE  6F67               	movwf	(_efgtoa$680+1)& (0+255),b
  3541  0013D0  0E2D               	movlw	45
  3542  0013D2  6F66               	movwf	_efgtoa$680& (0+255),b
  3543  0013D4                     l3601:
  3544                           
  3545                           ; BSR set to: 0
  3546  0013D4  0E00               	movlw	low _dbuf
  3547  0013D6  258A               	addwf	efgtoa@i& (0+255),w,b
  3548  0013D8  6ED9               	movwf	fsr2l,c
  3549  0013DA  0E01               	movlw	high _dbuf
  3550  0013DC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3551  0013DE  6EDA               	movwf	fsr2h,c
  3552  0013E0  C066  FFDF         	movff	_efgtoa$680,indf2
  3553  0013E4                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  3556  0013E4  077E               	decf	efgtoa@w& (0+255),f,b
  3557  0013E6  A0D8               	btfss	status,0,c
  3558  0013E8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3559  0013EA                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3562  0013EA  078A               	decf	efgtoa@i& (0+255),f,b
  3563  0013EC  A0D8               	btfss	status,0,c
  3564  0013EE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3565  0013F0                     
  3566                           ; BSR set to: 0
  3567  0013F0  0EBF               	movlw	191
  3568  0013F2  6E40               	movwf	??_efgtoa^0,c
  3569  0013F4  0EFF               	movlw	255
  3570  0013F6  6E41               	movwf	(??_efgtoa+1)^0,c
  3571  0013F8  503F               	movf	efgtoa@c^0,w,c
  3572  0013FA  6E42               	movwf	(??_efgtoa+2)^0,c
  3573  0013FC  6A43               	clrf	(??_efgtoa+3)^0,c
  3574  0013FE  5040               	movf	??_efgtoa^0,w,c
  3575  001400  2642               	addwf	(??_efgtoa+2)^0,f,c
  3576  001402  5041               	movf	(??_efgtoa+1)^0,w,c
  3577  001404  2243               	addwfc	(??_efgtoa+3)^0,f,c
  3578  001406  5043               	movf	(??_efgtoa+3)^0,w,c
  3579  001408  E10A               	bnz	u4410
  3580  00140A  0E1A               	movlw	26
  3581  00140C  5C42               	subwf	(??_efgtoa+2)^0,w,c
  3582  00140E  A0D8               	btfss	status,0,c
  3583  001410  EF0C  F00A         	goto	u4411
  3584  001414  EF0F  F00A         	goto	u4410
  3585  001418                     u4411:
  3586  001418  0E01               	movlw	1
  3587  00141A  EF10  F00A         	goto	u4420
  3588  00141E                     u4410:
  3589  00141E  0E00               	movlw	0
  3590  001420                     u4420:
  3591  001420  6F6A               	movwf	_efgtoa$682& (0+255),b
  3592  001422  6B6B               	clrf	(_efgtoa$682+1)& (0+255),b
  3593  001424                     
  3594                           ; BSR set to: 0
  3595  001424  516A               	movf	_efgtoa$682& (0+255),w,b
  3596  001426  116B               	iorwf	(_efgtoa$682+1)& (0+255),w,b
  3597  001428  A4D8               	btfss	status,2,c
  3598  00142A  EF19  F00A         	goto	u4431
  3599  00142E  EF1B  F00A         	goto	u4430
  3600  001432                     u4431:
  3601  001432  EF21  F00A         	goto	l3615
  3602  001436                     u4430:
  3603  001436                     
  3604                           ; BSR set to: 0
  3605  001436  0E00               	movlw	0
  3606  001438  6F69               	movwf	(_efgtoa$681+1)& (0+255),b
  3607  00143A  0E65               	movlw	101
  3608  00143C  6F68               	movwf	_efgtoa$681& (0+255),b
  3609  00143E  EF25  F00A         	goto	l3617
  3610  001442                     l3615:
  3611                           
  3612                           ; BSR set to: 0
  3613  001442  0E00               	movlw	0
  3614  001444  6F69               	movwf	(_efgtoa$681+1)& (0+255),b
  3615  001446  0E45               	movlw	69
  3616  001448  6F68               	movwf	_efgtoa$681& (0+255),b
  3617  00144A                     l3617:
  3618                           
  3619                           ; BSR set to: 0
  3620  00144A  0E00               	movlw	low _dbuf
  3621  00144C  258A               	addwf	efgtoa@i& (0+255),w,b
  3622  00144E  6ED9               	movwf	fsr2l,c
  3623  001450  0E01               	movlw	high _dbuf
  3624  001452  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3625  001454  6EDA               	movwf	fsr2h,c
  3626  001456  C068  FFDF         	movff	_efgtoa$681,indf2
  3627  00145A                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  3630  00145A  077E               	decf	efgtoa@w& (0+255),f,b
  3631  00145C  A0D8               	btfss	status,0,c
  3632  00145E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3633  001460                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3636  001460  0E00               	movlw	low _dbuf
  3637  001462  2592               	addwf	efgtoa@n& (0+255),w,b
  3638  001464  6E01               	movwf	strcpy@dest^0,c
  3639  001466  0E01               	movlw	high _dbuf
  3640  001468  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3641  00146A  6E02               	movwf	(strcpy@dest+1)^0,c
  3642  00146C  0E00               	movlw	low _dbuf
  3643  00146E  258A               	addwf	efgtoa@i& (0+255),w,b
  3644  001470  6E03               	movwf	strcpy@src^0,c
  3645  001472  0E01               	movlw	high _dbuf
  3646  001474  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3647  001476  6E04               	movwf	(strcpy@src+1)^0,c
  3648  001478  EC19  F01A         	call	_strcpy	;wreg free
  3649  00147C  EFC8  F004         	goto	l3363
  3650  001480                     l825:
  3651  001480  0012               	return		;funcret
  3652  001482                     __end_of_efgtoa:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _tolower *****************
  3656 ;; Defined at:
  3657 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  c               2    6[COMRAM] int 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  2    6[COMRAM] int 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3671 ;;      Params:         2       0       0       0       0       0       0       0       0
  3672 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3673 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3674 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3675 ;;Total ram usage:        8 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    1
  3678 ;; This function calls:
  3679 ;;		_isupper
  3680 ;; This function is called by:
  3681 ;;		_efgtoa
  3682 ;;		_vfpfcnvrt
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text6
  3687  003374                     __ptext6:
  3688                           	callstack 0
  3689  003374                     _tolower:
  3690                           	callstack 26
  3691  003374  0EBF               	movlw	191
  3692  003376  6E09               	movwf	??_tolower^0,c
  3693  003378  0EFF               	movlw	255
  3694  00337A  6E0A               	movwf	(??_tolower+1)^0,c
  3695  00337C  C007  F00B         	movff	tolower@c,??_tolower+2
  3696  003380  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3697  003384  5009               	movf	??_tolower^0,w,c
  3698  003386  260B               	addwf	(??_tolower+2)^0,f,c
  3699  003388  500A               	movf	(??_tolower+1)^0,w,c
  3700  00338A  220C               	addwfc	(??_tolower+3)^0,f,c
  3701  00338C  500C               	movf	(??_tolower+3)^0,w,c
  3702  00338E  E10A               	bnz	u3730
  3703  003390  0E1A               	movlw	26
  3704  003392  5C0B               	subwf	(??_tolower+2)^0,w,c
  3705  003394  A0D8               	btfss	status,0,c
  3706  003396  EFCF  F019         	goto	u3731
  3707  00339A  EFD2  F019         	goto	u3730
  3708  00339E                     u3731:
  3709  00339E  0E01               	movlw	1
  3710  0033A0  EFD3  F019         	goto	u3740
  3711  0033A4                     u3730:
  3712  0033A4  0E00               	movlw	0
  3713  0033A6                     u3740:
  3714  0033A6  6E0D               	movwf	_tolower$829^0,c
  3715  0033A8  6A0E               	clrf	(_tolower$829+1)^0,c
  3716  0033AA  500D               	movf	_tolower$829^0,w,c
  3717  0033AC  100E               	iorwf	(_tolower$829+1)^0,w,c
  3718  0033AE  B4D8               	btfsc	status,2,c
  3719  0033B0  EFDC  F019         	goto	u3751
  3720  0033B4  EFDE  F019         	goto	u3750
  3721  0033B8                     u3751:
  3722  0033B8  EFE5  F019         	goto	l1055
  3723  0033BC                     u3750:
  3724  0033BC  0E20               	movlw	32
  3725  0033BE  1007               	iorwf	tolower@c^0,w,c
  3726  0033C0  6E07               	movwf	?_tolower^0,c
  3727  0033C2  5008               	movf	(tolower@c+1)^0,w,c
  3728  0033C4  6E08               	movwf	(?_tolower+1)^0,c
  3729  0033C6  EFE9  F019         	goto	l1060
  3730  0033CA                     l1055:
  3731  0033CA  C007  F007         	movff	tolower@c,?_tolower
  3732  0033CE  C008  F008         	movff	tolower@c+1,?_tolower+1
  3733  0033D2                     l1060:
  3734  0033D2  0012               	return		;funcret
  3735  0033D4                     __end_of_tolower:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _isupper *****************
  3739 ;; Defined at:
  3740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  c               2    0[COMRAM] int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  2    0[COMRAM] int 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3754 ;;      Params:         2       0       0       0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3756 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3757 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3758 ;;Total ram usage:        6 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; This function calls:
  3761 ;;		Nothing
  3762 ;; This function is called by:
  3763 ;;		_efgtoa
  3764 ;;		_vfpfcnvrt
  3765 ;;		_tolower
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text7
  3770  0036A4                     __ptext7:
  3771                           	callstack 0
  3772  0036A4                     _isupper:
  3773                           	callstack 26
  3774  0036A4  0EBF               	movlw	191
  3775  0036A6  6E03               	movwf	??_isupper^0,c
  3776  0036A8  0EFF               	movlw	255
  3777  0036AA  6E04               	movwf	(??_isupper+1)^0,c
  3778  0036AC  C001  F005         	movff	isupper@c,??_isupper+2
  3779  0036B0  C002  F006         	movff	isupper@c+1,??_isupper+3
  3780  0036B4  5003               	movf	??_isupper^0,w,c
  3781  0036B6  2605               	addwf	(??_isupper+2)^0,f,c
  3782  0036B8  5004               	movf	(??_isupper+1)^0,w,c
  3783  0036BA  2206               	addwfc	(??_isupper+3)^0,f,c
  3784  0036BC  5006               	movf	(??_isupper+3)^0,w,c
  3785  0036BE  E10A               	bnz	u2880
  3786  0036C0  0E1A               	movlw	26
  3787  0036C2  5C05               	subwf	(??_isupper+2)^0,w,c
  3788  0036C4  A0D8               	btfss	status,0,c
  3789  0036C6  EF67  F01B         	goto	u2881
  3790  0036CA  EF6A  F01B         	goto	u2880
  3791  0036CE                     u2881:
  3792  0036CE  0E01               	movlw	1
  3793  0036D0  EF6B  F01B         	goto	u2890
  3794  0036D4                     u2880:
  3795  0036D4  0E00               	movlw	0
  3796  0036D6                     u2890:
  3797  0036D6  6E01               	movwf	?_isupper^0,c
  3798  0036D8  6A02               	clrf	(?_isupper+1)^0,c
  3799  0036DA  0012               	return		;funcret
  3800  0036DC                     __end_of_isupper:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _strcpy *****************
  3804 ;; Defined at:
  3805 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3808 ;;		 -> dbuf(80), 
  3809 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3810 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3811 ;;		 -> dbuf(80), 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  d               2    8[COMRAM] PTR unsigned char 
  3814 ;;		 -> dbuf(80), 
  3815 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3816 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  3817 ;;		 -> dbuf(80), 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    0[COMRAM] PTR unsigned char 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3827 ;;      Params:         4       0       0       0       0       0       0       0       0
  3828 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3829 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3830 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3831 ;;Total ram usage:       10 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_efgtoa
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text8
  3841  003432                     __ptext8:
  3842                           	callstack 0
  3843  003432                     _strcpy:
  3844                           	callstack 26
  3845  003432  C003  F007         	movff	strcpy@src,strcpy@s
  3846  003436  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3847  00343A  C001  F009         	movff	strcpy@dest,strcpy@d
  3848  00343E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3849  003442                     l3263:
  3850  003442  5007               	movf	strcpy@s^0,w,c
  3851  003444  6E05               	movwf	??_strcpy^0,c
  3852  003446  5008               	movf	(strcpy@s+1)^0,w,c
  3853  003448  6E06               	movwf	(??_strcpy+1)^0,c
  3854  00344A  4A07               	infsnz	strcpy@s^0,f,c
  3855  00344C  2A08               	incf	(strcpy@s+1)^0,f,c
  3856  00344E  C005  FFF6         	movff	??_strcpy,tblptrl
  3857  003452  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3858  003456  6AF8               	clrf	tblptru,c
  3859  003458  C009  FFD9         	movff	strcpy@d,fsr2l
  3860  00345C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3861  003460  4A09               	infsnz	strcpy@d^0,f,c
  3862  003462  2A0A               	incf	(strcpy@d+1)^0,f,c
  3863  003464  0E07               	movlw	(high __ramtop+-1)
  3864  003466  64F7               	cpfsgt	tblptrh,c
  3865  003468  D003               	bra	u3717
  3866  00346A  0008               	tblrd		*
  3867  00346C  50F5               	movf	tablat,w,c
  3868  00346E  D005               	bra	u3710
  3869  003470                     u3717:
  3870  003470  CFF6 FFE1          	movff	tblptrl,fsr1l
  3871  003474  CFF7 FFE2          	movff	tblptrh,fsr1h
  3872  003478  50E7               	movf	indf1,w,c
  3873  00347A                     u3710:
  3874  00347A  6EDF               	movwf	indf2,c
  3875  00347C  50DF               	movf	indf2,w,c
  3876  00347E  A4D8               	btfss	status,2,c
  3877  003480  EF44  F01A         	goto	u3721
  3878  003484  EF46  F01A         	goto	u3720
  3879  003488                     u3721:
  3880  003488  EF21  F01A         	goto	l3263
  3881  00348C                     u3720:
  3882  00348C  0012               	return		;funcret
  3883  00348E                     __end_of_strcpy:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _pad *****************
  3887 ;; Defined at:
  3888 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3891 ;;		 -> sprintf@f(6), 
  3892 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3893 ;;		 -> dbuf(80), 
  3894 ;;  p               2   20[COMRAM] int 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  w               2   25[COMRAM] int 
  3897 ;;  i               2   23[COMRAM] int 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  2   16[COMRAM] int 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3907 ;;      Params:         6       0       0       0       0       0       0       0       0
  3908 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3910 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3911 ;;Total ram usage:       11 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    3
  3914 ;; This function calls:
  3915 ;;		_fputc
  3916 ;;		_fputs
  3917 ;;		_strlen
  3918 ;; This function is called by:
  3919 ;;		_efgtoa
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text9
  3924  00302E                     __ptext9:
  3925                           	callstack 0
  3926  00302E                     _pad:
  3927                           	callstack 23
  3928  00302E                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3930  00302E  0100               	movlb	0	; () banked
  3931  003030  A1CA               	btfss	_flags& (0+255),0,b
  3932  003032  EF1D  F018         	goto	u3601
  3933  003036  EF1F  F018         	goto	u3600
  3934  00303A                     u3601:
  3935  00303A  EF29  F018         	goto	l3221
  3936  00303E                     u3600:
  3937  00303E                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3940  00303E  C013  F00A         	movff	pad@buf,fputs@s
  3941  003042  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3942  003046  C011  F00C         	movff	pad@fp,fputs@fp
  3943  00304A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3944  00304E  EC0F  F01B         	call	_fputs	;wreg free
  3945  003052                     l3221:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3948  003052  BE16               	btfsc	(pad@p+1)^0,7,c
  3949  003054  EF2E  F018         	goto	u3611
  3950  003058  EF30  F018         	goto	u3610
  3951  00305C                     u3611:
  3952  00305C  EF36  F018         	goto	l3225
  3953  003060                     u3610:
  3954  003060  C015  F01A         	movff	pad@p,pad@w
  3955  003064  C016  F01B         	movff	pad@p+1,pad@w+1
  3956  003068  EF3A  F018         	goto	l802
  3957  00306C                     l3225:
  3958  00306C  0E00               	movlw	0
  3959  00306E  6E1B               	movwf	(pad@w+1)^0,c
  3960  003070  0E00               	movlw	0
  3961  003072  6E1A               	movwf	pad@w^0,c
  3962  003074                     l802:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3965  003074  0E00               	movlw	0
  3966  003076  6E19               	movwf	(pad@i+1)^0,c
  3967  003078  0E00               	movlw	0
  3968  00307A  6E18               	movwf	pad@i^0,c
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3971  00307C  EF4C  F018         	goto	l3231
  3972  003080                     l3227:
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3975  003080  0E00               	movlw	0
  3976  003082  6E02               	movwf	(fputc@c+1)^0,c
  3977  003084  0E20               	movlw	32
  3978  003086  6E01               	movwf	fputc@c^0,c
  3979  003088  C011  F003         	movff	pad@fp,fputc@fp
  3980  00308C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3981  003090  ECB2  F017         	call	_fputc	;wreg free
  3982  003094                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3984  003094  4A18               	infsnz	pad@i^0,f,c
  3985  003096  2A19               	incf	(pad@i+1)^0,f,c
  3986  003098                     l3231:
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3989  003098  501A               	movf	pad@w^0,w,c
  3990  00309A  5C18               	subwf	pad@i^0,w,c
  3991  00309C  5019               	movf	(pad@i+1)^0,w,c
  3992  00309E  0A80               	xorlw	128
  3993  0030A0  6E17               	movwf	??_pad^0,c
  3994  0030A2  501B               	movf	(pad@w+1)^0,w,c
  3995  0030A4  0A80               	xorlw	128
  3996  0030A6  5817               	subwfb	??_pad^0,w,c
  3997  0030A8  A0D8               	btfss	status,0,c
  3998  0030AA  EF59  F018         	goto	u3621
  3999  0030AE  EF5B  F018         	goto	u3620
  4000  0030B2                     u3621:
  4001  0030B2  EF40  F018         	goto	l3227
  4002  0030B6                     u3620:
  4003  0030B6                     
  4004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4005  0030B6  0100               	movlb	0	; () banked
  4006  0030B8  B1CA               	btfsc	_flags& (0+255),0,b
  4007  0030BA  EF61  F018         	goto	u3631
  4008  0030BE  EF63  F018         	goto	u3630
  4009  0030C2                     u3631:
  4010  0030C2  EF6D  F018         	goto	l3235
  4011  0030C6                     u3630:
  4012  0030C6                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4015  0030C6  C013  F00A         	movff	pad@buf,fputs@s
  4016  0030CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4017  0030CE  C011  F00C         	movff	pad@fp,fputs@fp
  4018  0030D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4019  0030D6  EC0F  F01B         	call	_fputs	;wreg free
  4020  0030DA                     l3235:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4023  0030DA  C013  F001         	movff	pad@buf,strlen@s
  4024  0030DE  C014  F002         	movff	pad@buf+1,strlen@s+1
  4025  0030E2  ECA6  F01B         	call	_strlen	;wreg free
  4026  0030E6  501A               	movf	pad@w^0,w,c
  4027  0030E8  2401               	addwf	?_strlen^0,w,c
  4028  0030EA  6E11               	movwf	?_pad^0,c
  4029  0030EC  501B               	movf	(pad@w+1)^0,w,c
  4030  0030EE  2002               	addwfc	(?_strlen+1)^0,w,c
  4031  0030F0  6E12               	movwf	(?_pad+1)^0,c
  4032  0030F2  0012               	return		;funcret
  4033  0030F4                     __end_of_pad:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _strlen *****************
  4037 ;; Defined at:
  4038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4041 ;;		 -> dbuf(80), 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4044 ;;		 -> dbuf(80), 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  2    0[COMRAM] unsigned int 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         2       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4057 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:        4 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_pad
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text10
  4068  00374C                     __ptext10:
  4069                           	callstack 0
  4070  00374C                     _strlen:
  4071                           	callstack 25
  4072  00374C  C001  F003         	movff	strlen@s,strlen@a
  4073  003750  C002  F004         	movff	strlen@s+1,strlen@a+1
  4074  003754  EFAE  F01B         	goto	l2757
  4075  003758                     l2755:
  4076  003758  4A01               	infsnz	strlen@s^0,f,c
  4077  00375A  2A02               	incf	(strlen@s+1)^0,f,c
  4078  00375C                     l2757:
  4079  00375C  C001  FFD9         	movff	strlen@s,fsr2l
  4080  003760  C002  FFDA         	movff	strlen@s+1,fsr2h
  4081  003764  50DF               	movf	indf2,w,c
  4082  003766  A4D8               	btfss	status,2,c
  4083  003768  EFB8  F01B         	goto	u2871
  4084  00376C  EFBA  F01B         	goto	u2870
  4085  003770                     u2871:
  4086  003770  EFAC  F01B         	goto	l2755
  4087  003774                     u2870:
  4088  003774  5003               	movf	strlen@a^0,w,c
  4089  003776  5C01               	subwf	strlen@s^0,w,c
  4090  003778  6E01               	movwf	?_strlen^0,c
  4091  00377A  5004               	movf	(strlen@a+1)^0,w,c
  4092  00377C  5802               	subwfb	(strlen@s+1)^0,w,c
  4093  00377E  6E02               	movwf	(?_strlen+1)^0,c
  4094  003780  0012               	return		;funcret
  4095  003782                     __end_of_strlen:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _fputs *****************
  4099 ;; Defined at:
  4100 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4103 ;;		 -> dbuf(80), 
  4104 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4105 ;;		 -> sprintf@f(6), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  i               2   14[COMRAM] int 
  4108 ;;  c               1   13[COMRAM] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2    9[COMRAM] int 
  4111 ;; Registers used:
  4112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4118 ;;      Params:         4       0       0       0       0       0       0       0       0
  4119 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4121 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4122 ;;Total ram usage:        7 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    2
  4125 ;; This function calls:
  4126 ;;		_fputc
  4127 ;; This function is called by:
  4128 ;;		_pad
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text11
  4133  00361E                     __ptext11:
  4134                           	callstack 0
  4135  00361E                     _fputs:
  4136                           	callstack 23
  4137  00361E  0E00               	movlw	0
  4138  003620  6E10               	movwf	(fputs@i+1)^0,c
  4139  003622  0E00               	movlw	0
  4140  003624  6E0F               	movwf	fputs@i^0,c
  4141  003626  EF20  F01B         	goto	l2751
  4142  00362A                     l2747:
  4143  00362A  C00E  F001         	movff	fputs@c,fputc@c
  4144  00362E  6A02               	clrf	(fputc@c+1)^0,c
  4145  003630  C00C  F003         	movff	fputs@fp,fputc@fp
  4146  003634  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4147  003638  ECB2  F017         	call	_fputc	;wreg free
  4148  00363C  4A0F               	infsnz	fputs@i^0,f,c
  4149  00363E  2A10               	incf	(fputs@i+1)^0,f,c
  4150  003640                     l2751:
  4151  003640  500F               	movf	fputs@i^0,w,c
  4152  003642  240A               	addwf	fputs@s^0,w,c
  4153  003644  6ED9               	movwf	fsr2l,c
  4154  003646  5010               	movf	(fputs@i+1)^0,w,c
  4155  003648  200B               	addwfc	(fputs@s+1)^0,w,c
  4156  00364A  6EDA               	movwf	fsr2h,c
  4157  00364C  50DF               	movf	indf2,w,c
  4158  00364E  6E0E               	movwf	fputs@c^0,c
  4159  003650  500E               	movf	fputs@c^0,w,c
  4160  003652  A4D8               	btfss	status,2,c
  4161  003654  EF2E  F01B         	goto	u2861
  4162  003658  EF30  F01B         	goto	u2860
  4163  00365C                     u2861:
  4164  00365C  EF15  F01B         	goto	l2747
  4165  003660                     u2860:
  4166  003660  0012               	return		;funcret
  4167  003662                     __end_of_fputs:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _fputc *****************
  4171 ;; Defined at:
  4172 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  c               2    0[COMRAM] int 
  4175 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4176 ;;		 -> sprintf@f(6), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  2    0[COMRAM] int 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4188 ;;      Params:         4       0       0       0       0       0       0       0       0
  4189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4190 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4191 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        9 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    1
  4195 ;; This function calls:
  4196 ;;		_putch
  4197 ;; This function is called by:
  4198 ;;		_pad
  4199 ;;		_vfpfcnvrt
  4200 ;;		_fputs
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text12
  4205  002F64                     __ptext12:
  4206                           	callstack 0
  4207  002F64                     _fputc:
  4208                           	callstack 26
  4209  002F64  5003               	movf	fputc@fp^0,w,c
  4210  002F66  1004               	iorwf	(fputc@fp+1)^0,w,c
  4211  002F68  B4D8               	btfsc	status,2,c
  4212  002F6A  EFB9  F017         	goto	u2431
  4213  002F6E  EFBB  F017         	goto	u2430
  4214  002F72                     u2431:
  4215  002F72  EFC4  F017         	goto	l2533
  4216  002F76                     u2430:
  4217  002F76  5003               	movf	fputc@fp^0,w,c
  4218  002F78  1004               	iorwf	(fputc@fp+1)^0,w,c
  4219  002F7A  A4D8               	btfss	status,2,c
  4220  002F7C  EFC2  F017         	goto	u2441
  4221  002F80  EFC4  F017         	goto	u2440
  4222  002F84                     u2441:
  4223  002F84  EFC9  F017         	goto	l2535
  4224  002F88                     u2440:
  4225  002F88                     l2533:
  4226  002F88  5001               	movf	fputc@c^0,w,c
  4227  002F8A  EC22  F01C         	call	_putch
  4228  002F8E  EF16  F018         	goto	l1018
  4229  002F92                     l2535:
  4230  002F92  EE20 F004          	lfsr	2,4
  4231  002F96  5003               	movf	fputc@fp^0,w,c
  4232  002F98  26D9               	addwf	fsr2l,f,c
  4233  002F9A  5004               	movf	(fputc@fp+1)^0,w,c
  4234  002F9C  22DA               	addwfc	fsr2h,f,c
  4235  002F9E  50DE               	movf	postinc2,w,c
  4236  002FA0  10DE               	iorwf	postinc2,w,c
  4237  002FA2  B4D8               	btfsc	status,2,c
  4238  002FA4  EFD6  F017         	goto	u2451
  4239  002FA8  EFD8  F017         	goto	u2450
  4240  002FAC                     u2451:
  4241  002FAC  EFF3  F017         	goto	l2539
  4242  002FB0                     u2450:
  4243  002FB0  EE20 F004          	lfsr	2,4
  4244  002FB4  5003               	movf	fputc@fp^0,w,c
  4245  002FB6  26D9               	addwf	fsr2l,f,c
  4246  002FB8  5004               	movf	(fputc@fp+1)^0,w,c
  4247  002FBA  22DA               	addwfc	fsr2h,f,c
  4248  002FBC  EE10 F002          	lfsr	1,2
  4249  002FC0  5003               	movf	fputc@fp^0,w,c
  4250  002FC2  26E1               	addwf	fsr1l,f,c
  4251  002FC4  5004               	movf	(fputc@fp+1)^0,w,c
  4252  002FC6  22E2               	addwfc	fsr1h,f,c
  4253  002FC8  50DE               	movf	postinc2,w,c
  4254  002FCA  5CE6               	subwf	postinc1,w,c
  4255  002FCC  50E6               	movf	postinc1,w,c
  4256  002FCE  0A80               	xorlw	128
  4257  002FD0  6E09               	movwf	(??_fputc+4)^0,c
  4258  002FD2  50DE               	movf	postinc2,w,c
  4259  002FD4  0A80               	xorlw	128
  4260  002FD6  5809               	subwfb	(??_fputc+4)^0,w,c
  4261  002FD8  B0D8               	btfsc	status,0,c
  4262  002FDA  EFF1  F017         	goto	u2461
  4263  002FDE  EFF3  F017         	goto	u2460
  4264  002FE2                     u2461:
  4265  002FE2  EF16  F018         	goto	l1018
  4266  002FE6                     u2460:
  4267  002FE6                     l2539:
  4268  002FE6  EE20 F002          	lfsr	2,2
  4269  002FEA  5003               	movf	fputc@fp^0,w,c
  4270  002FEC  26D9               	addwf	fsr2l,f,c
  4271  002FEE  5004               	movf	(fputc@fp+1)^0,w,c
  4272  002FF0  22DA               	addwfc	fsr2h,f,c
  4273  002FF2  CFDE F005          	movff	postinc2,??_fputc
  4274  002FF6  CFDD F006          	movff	postdec2,??_fputc+1
  4275  002FFA  C003  FFD9         	movff	fputc@fp,fsr2l
  4276  002FFE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4277  003002  CFDE F007          	movff	postinc2,??_fputc+2
  4278  003006  CFDD F008          	movff	postdec2,??_fputc+3
  4279  00300A  5005               	movf	??_fputc^0,w,c
  4280  00300C  2407               	addwf	(??_fputc+2)^0,w,c
  4281  00300E  6ED9               	movwf	fsr2l,c
  4282  003010  5006               	movf	(??_fputc+1)^0,w,c
  4283  003012  2008               	addwfc	(??_fputc+3)^0,w,c
  4284  003014  6EDA               	movwf	fsr2h,c
  4285  003016  C001  FFDF         	movff	fputc@c,indf2
  4286  00301A  EE20 F002          	lfsr	2,2
  4287  00301E  5003               	movf	fputc@fp^0,w,c
  4288  003020  26D9               	addwf	fsr2l,f,c
  4289  003022  5004               	movf	(fputc@fp+1)^0,w,c
  4290  003024  22DA               	addwfc	fsr2h,f,c
  4291  003026  2ADE               	incf	postinc2,f,c
  4292  003028  0E00               	movlw	0
  4293  00302A  22DD               	addwfc	postdec2,f,c
  4294  00302C                     l1018:
  4295  00302C  0012               	return		;funcret
  4296  00302E                     __end_of_fputc:
  4297                           	callstack 0
  4298                           
  4299 ;; *************** function _putch *****************
  4300 ;; Defined at:
  4301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  c               1    wreg     unsigned char 
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;  c               1    0[COMRAM] unsigned char 
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_fputc
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text13
  4329  003844                     __ptext13:
  4330                           	callstack 0
  4331  003844                     _putch:
  4332                           	callstack 26
  4333  003844  0012               	return		;funcret
  4334  003846                     __end_of_putch:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _floorf *****************
  4338 ;; Defined at:
  4339 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  x               4   25[COMRAM] float 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  u               4   41[COMRAM] struct .
  4344 ;;  m               4   35[COMRAM] unsigned long 
  4345 ;;  e               2   39[COMRAM] int 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  4   25[COMRAM] float 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4355 ;;      Params:         4       0       0       0       0       0       0       0       0
  4356 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4357 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4358 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:       20 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_efgtoa
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text14
  4369  002566                     __ptext14:
  4370                           	callstack 0
  4371  002566                     _floorf:
  4372                           	callstack 26
  4373  002566  C0BC  F02A         	movff	floorf@F527,floorf@u
  4374  00256A  C0BD  F02B         	movff	floorf@F527+1,floorf@u+1
  4375  00256E  C0BE  F02C         	movff	floorf@F527+2,floorf@u+2
  4376  002572  C0BF  F02D         	movff	floorf@F527+3,floorf@u+3
  4377  002576  C01A  F02A         	movff	floorf@x,floorf@u
  4378  00257A  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4379  00257E  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4380  002582  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4381  002586  0E81               	movlw	129
  4382  002588  6E1E               	movwf	??_floorf^0,c
  4383  00258A  0EFF               	movlw	255
  4384  00258C  6E1F               	movwf	(??_floorf+1)^0,c
  4385  00258E  C02A  F020         	movff	floorf@u,??_floorf+2
  4386  002592  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4387  002596  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4388  00259A  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4389  00259E  0E18               	movlw	24
  4390  0025A0  EFD7  F012         	goto	u3760
  4391  0025A4                     u3765:
  4392  0025A4  90D8               	bcf	status,0,c
  4393  0025A6  3223               	rrcf	(??_floorf+5)^0,f,c
  4394  0025A8  3222               	rrcf	(??_floorf+4)^0,f,c
  4395  0025AA  3221               	rrcf	(??_floorf+3)^0,f,c
  4396  0025AC  3220               	rrcf	(??_floorf+2)^0,f,c
  4397  0025AE                     u3760:
  4398  0025AE  2EE8               	decfsz	wreg,f,c
  4399  0025B0  EFD2  F012         	goto	u3765
  4400  0025B4  5020               	movf	(??_floorf+2)^0,w,c
  4401  0025B6  241E               	addwf	??_floorf^0,w,c
  4402  0025B8  6E28               	movwf	floorf@e^0,c
  4403  0025BA  0E00               	movlw	0
  4404  0025BC  201F               	addwfc	(??_floorf+1)^0,w,c
  4405  0025BE  6E29               	movwf	(floorf@e+1)^0,c
  4406  0025C0  BE29               	btfsc	(floorf@e+1)^0,7,c
  4407  0025C2  EFEC  F012         	goto	u3771
  4408  0025C6  5029               	movf	(floorf@e+1)^0,w,c
  4409  0025C8  E109               	bnz	u3770
  4410  0025CA  0E17               	movlw	23
  4411  0025CC  5C28               	subwf	floorf@e^0,w,c
  4412  0025CE  A0D8               	btfss	status,0,c
  4413  0025D0  EFEC  F012         	goto	u3771
  4414  0025D4  EFEE  F012         	goto	u3770
  4415  0025D8                     u3771:
  4416  0025D8  EFF8  F012         	goto	l3281
  4417  0025DC                     u3770:
  4418  0025DC                     l3279:
  4419  0025DC  C01A  F01A         	movff	floorf@x,?_floorf
  4420  0025E0  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4421  0025E4  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4422  0025E8  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4423  0025EC  EFBB  F013         	goto	l979
  4424  0025F0                     l3281:
  4425  0025F0  BE29               	btfsc	(floorf@e+1)^0,7,c
  4426  0025F2  EFFD  F012         	goto	u3781
  4427  0025F6  EFFF  F012         	goto	u3780
  4428  0025FA                     u3781:
  4429  0025FA  EF6F  F013         	goto	l3291
  4430  0025FE                     u3780:
  4431  0025FE  C028  F01E         	movff	floorf@e,??_floorf
  4432  002602  0EFF               	movlw	255
  4433  002604  6E1F               	movwf	(??_floorf+1)^0,c
  4434  002606  0EFF               	movlw	255
  4435  002608  6E20               	movwf	(??_floorf+2)^0,c
  4436  00260A  0E7F               	movlw	127
  4437  00260C  6E21               	movwf	(??_floorf+3)^0,c
  4438  00260E  0E00               	movlw	0
  4439  002610  6E22               	movwf	(??_floorf+4)^0,c
  4440  002612                     u3795:
  4441  002612  661E               	tstfsz	??_floorf^0,c
  4442  002614  EF0E  F013         	goto	u3796
  4443  002618  EF16  F013         	goto	u3797
  4444  00261C                     u3796:
  4445  00261C  3422               	rlcf	(??_floorf+4)^0,w,c
  4446  00261E  3222               	rrcf	(??_floorf+4)^0,f,c
  4447  002620  3221               	rrcf	(??_floorf+3)^0,f,c
  4448  002622  3220               	rrcf	(??_floorf+2)^0,f,c
  4449  002624  321F               	rrcf	(??_floorf+1)^0,f,c
  4450  002626  2E1E               	decfsz	??_floorf^0,f,c
  4451  002628  EF09  F013         	goto	u3795
  4452  00262C                     u3797:
  4453  00262C  C01F  F024         	movff	??_floorf+1,floorf@m
  4454  002630  C020  F025         	movff	??_floorf+2,floorf@m+1
  4455  002634  C021  F026         	movff	??_floorf+3,floorf@m+2
  4456  002638  C022  F027         	movff	??_floorf+4,floorf@m+3
  4457  00263C  5024               	movf	floorf@m^0,w,c
  4458  00263E  142A               	andwf	floorf@u^0,w,c
  4459  002640  6E1E               	movwf	??_floorf^0,c
  4460  002642  5025               	movf	(floorf@m+1)^0,w,c
  4461  002644  142B               	andwf	(floorf@u+1)^0,w,c
  4462  002646  6E1F               	movwf	(??_floorf+1)^0,c
  4463  002648  5026               	movf	(floorf@m+2)^0,w,c
  4464  00264A  142C               	andwf	(floorf@u+2)^0,w,c
  4465  00264C  6E20               	movwf	(??_floorf+2)^0,c
  4466  00264E  5027               	movf	(floorf@m+3)^0,w,c
  4467  002650  142D               	andwf	(floorf@u+3)^0,w,c
  4468  002652  6E21               	movwf	(??_floorf+3)^0,c
  4469  002654  501E               	movf	??_floorf^0,w,c
  4470  002656  101F               	iorwf	(??_floorf+1)^0,w,c
  4471  002658  1020               	iorwf	(??_floorf+2)^0,w,c
  4472  00265A  1021               	iorwf	(??_floorf+3)^0,w,c
  4473  00265C  A4D8               	btfss	status,2,c
  4474  00265E  EF33  F013         	goto	u3801
  4475  002662  EF35  F013         	goto	u3800
  4476  002666                     u3801:
  4477  002666  EF37  F013         	goto	l3287
  4478  00266A                     u3800:
  4479  00266A  EFEE  F012         	goto	l3279
  4480  00266E                     l3287:
  4481  00266E  C02A  F01E         	movff	floorf@u,??_floorf
  4482  002672  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4483  002676  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4484  00267A  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4485  00267E  0E20               	movlw	32
  4486  002680  EF47  F013         	goto	u3810
  4487  002684                     u3815:
  4488  002684  90D8               	bcf	status,0,c
  4489  002686  3221               	rrcf	(??_floorf+3)^0,f,c
  4490  002688  3220               	rrcf	(??_floorf+2)^0,f,c
  4491  00268A  321F               	rrcf	(??_floorf+1)^0,f,c
  4492  00268C  321E               	rrcf	??_floorf^0,f,c
  4493  00268E                     u3810:
  4494  00268E  2EE8               	decfsz	wreg,f,c
  4495  002690  EF42  F013         	goto	u3815
  4496  002694  501E               	movf	??_floorf^0,w,c
  4497  002696  101F               	iorwf	(??_floorf+1)^0,w,c
  4498  002698  1020               	iorwf	(??_floorf+2)^0,w,c
  4499  00269A  1021               	iorwf	(??_floorf+3)^0,w,c
  4500  00269C  B4D8               	btfsc	status,2,c
  4501  00269E  EF53  F013         	goto	u3821
  4502  0026A2  EF55  F013         	goto	u3820
  4503  0026A6                     u3821:
  4504  0026A6  EF5D  F013         	goto	l982
  4505  0026AA                     u3820:
  4506  0026AA  5024               	movf	floorf@m^0,w,c
  4507  0026AC  262A               	addwf	floorf@u^0,f,c
  4508  0026AE  5025               	movf	(floorf@m+1)^0,w,c
  4509  0026B0  222B               	addwfc	(floorf@u+1)^0,f,c
  4510  0026B2  5026               	movf	(floorf@m+2)^0,w,c
  4511  0026B4  222C               	addwfc	(floorf@u+2)^0,f,c
  4512  0026B6  5027               	movf	(floorf@m+3)^0,w,c
  4513  0026B8  222D               	addwfc	(floorf@u+3)^0,f,c
  4514  0026BA                     l982:
  4515  0026BA  1C24               	comf	floorf@m^0,w,c
  4516  0026BC  6E1E               	movwf	??_floorf^0,c
  4517  0026BE  1C25               	comf	(floorf@m+1)^0,w,c
  4518  0026C0  6E1F               	movwf	(??_floorf+1)^0,c
  4519  0026C2  1C26               	comf	(floorf@m+2)^0,w,c
  4520  0026C4  6E20               	movwf	(??_floorf+2)^0,c
  4521  0026C6  1C27               	comf	(floorf@m+3)^0,w,c
  4522  0026C8  6E21               	movwf	(??_floorf+3)^0,c
  4523  0026CA  501E               	movf	??_floorf^0,w,c
  4524  0026CC  162A               	andwf	floorf@u^0,f,c
  4525  0026CE  501F               	movf	(??_floorf+1)^0,w,c
  4526  0026D0  162B               	andwf	(floorf@u+1)^0,f,c
  4527  0026D2  5020               	movf	(??_floorf+2)^0,w,c
  4528  0026D4  162C               	andwf	(floorf@u+2)^0,f,c
  4529  0026D6  5021               	movf	(??_floorf+3)^0,w,c
  4530  0026D8  162D               	andwf	(floorf@u+3)^0,f,c
  4531  0026DA  EFB3  F013         	goto	l3299
  4532  0026DE                     l3291:
  4533  0026DE  C02A  F01E         	movff	floorf@u,??_floorf
  4534  0026E2  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4535  0026E6  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4536  0026EA  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4537  0026EE  0E20               	movlw	32
  4538  0026F0  EF7F  F013         	goto	u3830
  4539  0026F4                     u3835:
  4540  0026F4  90D8               	bcf	status,0,c
  4541  0026F6  3221               	rrcf	(??_floorf+3)^0,f,c
  4542  0026F8  3220               	rrcf	(??_floorf+2)^0,f,c
  4543  0026FA  321F               	rrcf	(??_floorf+1)^0,f,c
  4544  0026FC  321E               	rrcf	??_floorf^0,f,c
  4545  0026FE                     u3830:
  4546  0026FE  2EE8               	decfsz	wreg,f,c
  4547  002700  EF7A  F013         	goto	u3835
  4548  002704  501E               	movf	??_floorf^0,w,c
  4549  002706  101F               	iorwf	(??_floorf+1)^0,w,c
  4550  002708  1020               	iorwf	(??_floorf+2)^0,w,c
  4551  00270A  1021               	iorwf	(??_floorf+3)^0,w,c
  4552  00270C  A4D8               	btfss	status,2,c
  4553  00270E  EF8B  F013         	goto	u3841
  4554  002712  EF8D  F013         	goto	u3840
  4555  002716                     u3841:
  4556  002716  EF97  F013         	goto	l3295
  4557  00271A                     u3840:
  4558  00271A  0E00               	movlw	0
  4559  00271C  6E2A               	movwf	floorf@u^0,c
  4560  00271E  0E00               	movlw	0
  4561  002720  6E2B               	movwf	(floorf@u+1)^0,c
  4562  002722  0E00               	movlw	0
  4563  002724  6E2C               	movwf	(floorf@u+2)^0,c
  4564  002726  0E00               	movlw	0
  4565  002728  6E2D               	movwf	(floorf@u+3)^0,c
  4566  00272A  EFB3  F013         	goto	l3299
  4567  00272E                     l3295:
  4568  00272E  90D8               	bcf	status,0,c
  4569  002730  342A               	rlcf	floorf@u^0,w,c
  4570  002732  6E1E               	movwf	??_floorf^0,c
  4571  002734  342B               	rlcf	(floorf@u+1)^0,w,c
  4572  002736  6E1F               	movwf	(??_floorf+1)^0,c
  4573  002738  342C               	rlcf	(floorf@u+2)^0,w,c
  4574  00273A  6E20               	movwf	(??_floorf+2)^0,c
  4575  00273C  342D               	rlcf	(floorf@u+3)^0,w,c
  4576  00273E  6E21               	movwf	(??_floorf+3)^0,c
  4577  002740  501E               	movf	??_floorf^0,w,c
  4578  002742  101F               	iorwf	(??_floorf+1)^0,w,c
  4579  002744  1020               	iorwf	(??_floorf+2)^0,w,c
  4580  002746  1021               	iorwf	(??_floorf+3)^0,w,c
  4581  002748  B4D8               	btfsc	status,2,c
  4582  00274A  EFA9  F013         	goto	u3851
  4583  00274E  EFAB  F013         	goto	u3850
  4584  002752                     u3851:
  4585  002752  EFB3  F013         	goto	l3299
  4586  002756                     u3850:
  4587  002756  0E00               	movlw	0
  4588  002758  6E2A               	movwf	floorf@u^0,c
  4589  00275A  0E00               	movlw	0
  4590  00275C  6E2B               	movwf	(floorf@u+1)^0,c
  4591  00275E  0E80               	movlw	128
  4592  002760  6E2C               	movwf	(floorf@u+2)^0,c
  4593  002762  0EBF               	movlw	191
  4594  002764  6E2D               	movwf	(floorf@u+3)^0,c
  4595  002766                     l3299:
  4596  002766  C02A  F01A         	movff	floorf@u,?_floorf
  4597  00276A  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4598  00276E  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4599  002772  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4600  002776                     l979:
  4601  002776  0012               	return		;funcret
  4602  002778                     __end_of_floorf:
  4603                           	callstack 0
  4604                           
  4605 ;; *************** function ___fpclassifyf *****************
  4606 ;; Defined at:
  4607 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  x               4    0[COMRAM] float 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  u               4   10[COMRAM] struct .
  4612 ;;  e               2    8[COMRAM] int 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  2    0[COMRAM] int 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4622 ;;      Params:         4       0       0       0       0       0       0       0       0
  4623 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4624 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4625 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4626 ;;Total ram usage:       14 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_efgtoa
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text15
  4636  002CC6                     __ptext15:
  4637                           	callstack 0
  4638  002CC6                     ___fpclassifyf:
  4639                           	callstack 26
  4640  002CC6  C0C0  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4641  002CCA  C0C1  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4642  002CCE  C0C2  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4643  002CD2  C0C3  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4644  002CD6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4645  002CDA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4646  002CDE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4647  002CE2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4648  002CE6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4649  002CEA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4650  002CEE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4651  002CF2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4652  002CF6  0E18               	movlw	24
  4653  002CF8  EF83  F016         	goto	u3640
  4654  002CFC                     u3645:
  4655  002CFC  90D8               	bcf	status,0,c
  4656  002CFE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4657  002D00  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4658  002D02  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4659  002D04  3205               	rrcf	??___fpclassifyf^0,f,c
  4660  002D06                     u3640:
  4661  002D06  2EE8               	decfsz	wreg,f,c
  4662  002D08  EF7E  F016         	goto	u3645
  4663  002D0C  5005               	movf	??___fpclassifyf^0,w,c
  4664  002D0E  6E09               	movwf	___fpclassifyf@e^0,c
  4665  002D10  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4666  002D12  5009               	movf	___fpclassifyf@e^0,w,c
  4667  002D14  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4668  002D16  A4D8               	btfss	status,2,c
  4669  002D18  EF90  F016         	goto	u3651
  4670  002D1C  EF92  F016         	goto	u3650
  4671  002D20                     u3651:
  4672  002D20  EFB2  F016         	goto	l3251
  4673  002D24                     u3650:
  4674  002D24  90D8               	bcf	status,0,c
  4675  002D26  340B               	rlcf	___fpclassifyf@u^0,w,c
  4676  002D28  6E05               	movwf	??___fpclassifyf^0,c
  4677  002D2A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4678  002D2C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4679  002D2E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4680  002D30  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4681  002D32  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4682  002D34  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4683  002D36  5005               	movf	??___fpclassifyf^0,w,c
  4684  002D38  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4685  002D3A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4686  002D3C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4687  002D3E  A4D8               	btfss	status,2,c
  4688  002D40  EFA4  F016         	goto	u3661
  4689  002D44  EFA6  F016         	goto	u3660
  4690  002D48                     u3661:
  4691  002D48  EFAC  F016         	goto	l3247
  4692  002D4C                     u3660:
  4693  002D4C  0E00               	movlw	0
  4694  002D4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4695  002D50  0E02               	movlw	2
  4696  002D52  6E01               	movwf	?___fpclassifyf^0,c
  4697  002D54  EFE1  F016         	goto	l941
  4698  002D58                     l3247:
  4699  002D58  0E00               	movlw	0
  4700  002D5A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4701  002D5C  0E03               	movlw	3
  4702  002D5E  6E01               	movwf	?___fpclassifyf^0,c
  4703  002D60  EFE1  F016         	goto	l941
  4704  002D64                     l3251:
  4705  002D64  2809               	incf	___fpclassifyf@e^0,w,c
  4706  002D66  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4707  002D68  A4D8               	btfss	status,2,c
  4708  002D6A  EFB9  F016         	goto	u3671
  4709  002D6E  EFBB  F016         	goto	u3670
  4710  002D72                     u3671:
  4711  002D72  EFDD  F016         	goto	l3257
  4712  002D76                     u3670:
  4713  002D76  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4714  002D7A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4715  002D7E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4716  002D82  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4717  002D86  0E09               	movlw	9
  4718  002D88                     u3685:
  4719  002D88  90D8               	bcf	status,0,c
  4720  002D8A  3605               	rlcf	??___fpclassifyf^0,f,c
  4721  002D8C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4722  002D8E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4723  002D90  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4724  002D92  2EE8               	decfsz	wreg,f,c
  4725  002D94  EFC4  F016         	goto	u3685
  4726  002D98  5005               	movf	??___fpclassifyf^0,w,c
  4727  002D9A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4728  002D9C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4729  002D9E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4730  002DA0  B4D8               	btfsc	status,2,c
  4731  002DA2  EFD5  F016         	goto	u3691
  4732  002DA6  EFD8  F016         	goto	u3690
  4733  002DAA                     u3691:
  4734  002DAA  0E01               	movlw	1
  4735  002DAC  EFD9  F016         	goto	u3700
  4736  002DB0                     u3690:
  4737  002DB0  0E00               	movlw	0
  4738  002DB2                     u3700:
  4739  002DB2  6E01               	movwf	?___fpclassifyf^0,c
  4740  002DB4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4741  002DB6  EFE1  F016         	goto	l941
  4742  002DBA                     l3257:
  4743  002DBA  0E00               	movlw	0
  4744  002DBC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4745  002DBE  0E04               	movlw	4
  4746  002DC0  6E01               	movwf	?___fpclassifyf^0,c
  4747  002DC2                     l941:
  4748  002DC2  0012               	return		;funcret
  4749  002DC4                     __end_of___fpclassifyf:
  4750                           	callstack 0
  4751                           
  4752 ;; *************** function ___fltol *****************
  4753 ;; Defined at:
  4754 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  f1              4    0[COMRAM] int 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  exp1            1    9[COMRAM] unsigned char 
  4759 ;;  sign1           1    8[COMRAM] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4    0[COMRAM] long 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4769 ;;      Params:         4       0       0       0       0       0       0       0       0
  4770 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4772 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4773 ;;Total ram usage:       10 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_efgtoa
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text16
  4783  002ABC                     __ptext16:
  4784                           	callstack 0
  4785  002ABC                     ___fltol:
  4786                           	callstack 26
  4787  002ABC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4788  002ABE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4789  002AC0  6E0A               	movwf	___fltol@exp1^0,c
  4790  002AC2  500A               	movf	___fltol@exp1^0,w,c
  4791  002AC4  A4D8               	btfss	status,2,c
  4792  002AC6  EF67  F015         	goto	u3531
  4793  002ACA  EF69  F015         	goto	u3530
  4794  002ACE                     u3531:
  4795  002ACE  EF73  F015         	goto	l3179
  4796  002AD2                     u3530:
  4797  002AD2                     l3175:
  4798  002AD2  0E00               	movlw	0
  4799  002AD4  6E01               	movwf	?___fltol^0,c
  4800  002AD6  0E00               	movlw	0
  4801  002AD8  6E02               	movwf	(?___fltol+1)^0,c
  4802  002ADA  0E00               	movlw	0
  4803  002ADC  6E03               	movwf	(?___fltol+2)^0,c
  4804  002ADE  0E00               	movlw	0
  4805  002AE0  6E04               	movwf	(?___fltol+3)^0,c
  4806  002AE2  EFE0  F015         	goto	l380
  4807  002AE6                     l3179:
  4808  002AE6  C001  F005         	movff	___fltol@f1,??___fltol
  4809  002AEA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4810  002AEE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4811  002AF2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4812  002AF6  0E20               	movlw	32
  4813  002AF8  EF83  F015         	goto	u3540
  4814  002AFC                     u3545:
  4815  002AFC  90D8               	bcf	status,0,c
  4816  002AFE  3208               	rrcf	(??___fltol+3)^0,f,c
  4817  002B00  3207               	rrcf	(??___fltol+2)^0,f,c
  4818  002B02  3206               	rrcf	(??___fltol+1)^0,f,c
  4819  002B04  3205               	rrcf	??___fltol^0,f,c
  4820  002B06                     u3540:
  4821  002B06  2EE8               	decfsz	wreg,f,c
  4822  002B08  EF7E  F015         	goto	u3545
  4823  002B0C  5005               	movf	??___fltol^0,w,c
  4824  002B0E  6E09               	movwf	___fltol@sign1^0,c
  4825  002B10  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4826  002B12  0EFF               	movlw	255
  4827  002B14  1601               	andwf	___fltol@f1^0,f,c
  4828  002B16  0EFF               	movlw	255
  4829  002B18  1602               	andwf	(___fltol@f1+1)^0,f,c
  4830  002B1A  0EFF               	movlw	255
  4831  002B1C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4832  002B1E  0E00               	movlw	0
  4833  002B20  1604               	andwf	(___fltol@f1+3)^0,f,c
  4834  002B22  0E96               	movlw	150
  4835  002B24  5E0A               	subwf	___fltol@exp1^0,f,c
  4836  002B26  BE0A               	btfsc	___fltol@exp1^0,7,c
  4837  002B28  EF9A  F015         	goto	u3550
  4838  002B2C  EF98  F015         	goto	u3551
  4839  002B30                     u3551:
  4840  002B30  EFB0  F015         	goto	l3199
  4841  002B34                     u3550:
  4842  002B34  500A               	movf	___fltol@exp1^0,w,c
  4843  002B36  0A80               	xorlw	128
  4844  002B38  0F97               	addlw	151
  4845  002B3A  B0D8               	btfsc	status,0,c
  4846  002B3C  EFA2  F015         	goto	u3561
  4847  002B40  EFA4  F015         	goto	u3560
  4848  002B44                     u3561:
  4849  002B44  EFA6  F015         	goto	l3195
  4850  002B48                     u3560:
  4851  002B48  EF69  F015         	goto	l3175
  4852  002B4C                     l3195:
  4853  002B4C  90D8               	bcf	status,0,c
  4854  002B4E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4855  002B50  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4856  002B52  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4857  002B54  3201               	rrcf	___fltol@f1^0,f,c
  4858  002B56  3E0A               	incfsz	___fltol@exp1^0,f,c
  4859  002B58  EFA6  F015         	goto	l3195
  4860  002B5C  EFC8  F015         	goto	l3209
  4861  002B60                     l3199:
  4862  002B60  0E1F               	movlw	31
  4863  002B62  640A               	cpfsgt	___fltol@exp1^0,c
  4864  002B64  EFB6  F015         	goto	u3571
  4865  002B68  EFB8  F015         	goto	u3570
  4866  002B6C                     u3571:
  4867  002B6C  EFC0  F015         	goto	l3207
  4868  002B70                     u3570:
  4869  002B70  EF69  F015         	goto	l3175
  4870  002B74                     l3205:
  4871  002B74  90D8               	bcf	status,0,c
  4872  002B76  3601               	rlcf	___fltol@f1^0,f,c
  4873  002B78  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4874  002B7A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4875  002B7C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4876  002B7E  060A               	decf	___fltol@exp1^0,f,c
  4877  002B80                     l3207:
  4878  002B80  500A               	movf	___fltol@exp1^0,w,c
  4879  002B82  A4D8               	btfss	status,2,c
  4880  002B84  EFC6  F015         	goto	u3581
  4881  002B88  EFC8  F015         	goto	u3580
  4882  002B8C                     u3581:
  4883  002B8C  EFBA  F015         	goto	l3205
  4884  002B90                     u3580:
  4885  002B90                     l3209:
  4886  002B90  5009               	movf	___fltol@sign1^0,w,c
  4887  002B92  B4D8               	btfsc	status,2,c
  4888  002B94  EFCE  F015         	goto	u3591
  4889  002B98  EFD0  F015         	goto	u3590
  4890  002B9C                     u3591:
  4891  002B9C  EFD8  F015         	goto	l3213
  4892  002BA0                     u3590:
  4893  002BA0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4894  002BA2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4895  002BA4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4896  002BA6  6C01               	negf	___fltol@f1^0,c
  4897  002BA8  0E00               	movlw	0
  4898  002BAA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4899  002BAC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4900  002BAE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4901  002BB0                     l3213:
  4902  002BB0  C001  F001         	movff	___fltol@f1,?___fltol
  4903  002BB4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4904  002BB8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4905  002BBC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4906  002BC0                     l380:
  4907  002BC0  0012               	return		;funcret
  4908  002BC2                     __end_of___fltol:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function ___flsub *****************
  4912 ;; Defined at:
  4913 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  b               4   44[COMRAM] long 
  4916 ;;  a               4   48[COMRAM] long 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  4   44[COMRAM] long 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4928 ;;      Params:         8       0       0       0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4931 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    1
  4935 ;; This function calls:
  4936 ;;		___fladd
  4937 ;; This function is called by:
  4938 ;;		_efgtoa
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text17
  4943  0035D8                     __ptext17:
  4944                           	callstack 0
  4945  0035D8                     ___flsub:
  4946                           	callstack 25
  4947  0035D8  0E00               	movlw	0
  4948  0035DA  1A31               	xorwf	___flsub@a^0,f,c
  4949  0035DC  0E00               	movlw	0
  4950  0035DE  1A32               	xorwf	(___flsub@a+1)^0,f,c
  4951  0035E0  0E00               	movlw	0
  4952  0035E2  1A33               	xorwf	(___flsub@a+2)^0,f,c
  4953  0035E4  0E80               	movlw	128
  4954  0035E6  1A34               	xorwf	(___flsub@a+3)^0,f,c
  4955  0035E8  C02D  F001         	movff	___flsub@b,___fladd@b
  4956  0035EC  C02E  F002         	movff	___flsub@b+1,___fladd@b+1
  4957  0035F0  C02F  F003         	movff	___flsub@b+2,___fladd@b+2
  4958  0035F4  C030  F004         	movff	___flsub@b+3,___fladd@b+3
  4959  0035F8  C031  F005         	movff	___flsub@a,___fladd@a
  4960  0035FC  C032  F006         	movff	___flsub@a+1,___fladd@a+1
  4961  003600  C033  F007         	movff	___flsub@a+2,___fladd@a+2
  4962  003604  C034  F008         	movff	___flsub@a+3,___fladd@a+3
  4963  003608  EC41  F00A         	call	___fladd	;wreg free
  4964  00360C  C001  F02D         	movff	?___fladd,?___flsub
  4965  003610  C002  F02E         	movff	?___fladd+1,?___flsub+1
  4966  003614  C003  F02F         	movff	?___fladd+2,?___flsub+2
  4967  003618  C004  F030         	movff	?___fladd+3,?___flsub+3
  4968  00361C  0012               	return		;funcret
  4969  00361E                     __end_of___flsub:
  4970                           	callstack 0
  4971                           
  4972 ;; *************** function ___fladd *****************
  4973 ;; Defined at:
  4974 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  b               4    0[COMRAM] long 
  4977 ;;  a               4    4[COMRAM] long 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  grs             1   15[COMRAM] unsigned char 
  4980 ;;  bexp            1   14[COMRAM] unsigned char 
  4981 ;;  aexp            1   13[COMRAM] unsigned char 
  4982 ;;  signs           1   12[COMRAM] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  4    0[COMRAM] unsigned char 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4992 ;;      Params:         8       0       0       0       0       0       0       0       0
  4993 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4994 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4995 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4996 ;;Total ram usage:       16 bytes
  4997 ;; Hardware stack levels used:    1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		___flsub
  5002 ;;		_efgtoa
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           	psect	text18
  5007  001482                     __ptext18:
  5008                           	callstack 0
  5009  001482                     ___fladd:
  5010                           	callstack 25
  5011  001482  5004               	movf	(___fladd@b+3)^0,w,c
  5012  001484  0B80               	andlw	128
  5013  001486  6E0D               	movwf	___fladd@signs^0,c
  5014  001488  5004               	movf	(___fladd@b+3)^0,w,c
  5015  00148A  2404               	addwf	(___fladd@b+3)^0,w,c
  5016  00148C  6E0F               	movwf	___fladd@bexp^0,c
  5017  00148E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5018  001490  EF4C  F00A         	goto	u2471
  5019  001494  EF4E  F00A         	goto	u2470
  5020  001498                     u2471:
  5021  001498  EF4F  F00A         	goto	l2549
  5022  00149C                     u2470:
  5023  00149C  800F               	bsf	___fladd@bexp^0,0,c
  5024  00149E                     l2549:
  5025  00149E  500F               	movf	___fladd@bexp^0,w,c
  5026  0014A0  B4D8               	btfsc	status,2,c
  5027  0014A2  EF55  F00A         	goto	u2481
  5028  0014A6  EF57  F00A         	goto	u2480
  5029  0014AA                     u2481:
  5030  0014AA  EF6C  F00A         	goto	l2559
  5031  0014AE                     u2480:
  5032  0014AE  280F               	incf	___fladd@bexp^0,w,c
  5033  0014B0  A4D8               	btfss	status,2,c
  5034  0014B2  EF5D  F00A         	goto	u2491
  5035  0014B6  EF5F  F00A         	goto	u2490
  5036  0014BA                     u2491:
  5037  0014BA  EF67  F00A         	goto	l2555
  5038  0014BE                     u2490:
  5039  0014BE  0E00               	movlw	0
  5040  0014C0  6E01               	movwf	___fladd@b^0,c
  5041  0014C2  0E00               	movlw	0
  5042  0014C4  6E02               	movwf	(___fladd@b+1)^0,c
  5043  0014C6  0E00               	movlw	0
  5044  0014C8  6E03               	movwf	(___fladd@b+2)^0,c
  5045  0014CA  0E00               	movlw	0
  5046  0014CC  6E04               	movwf	(___fladd@b+3)^0,c
  5047  0014CE                     l2555:
  5048  0014CE  8E03               	bsf	(___fladd@b+2)^0,7,c
  5049  0014D0  0E00               	movlw	0
  5050  0014D2  6E04               	movwf	(___fladd@b+3)^0,c
  5051  0014D4  EF74  F00A         	goto	l2561
  5052  0014D8                     l2559:
  5053  0014D8  0E00               	movlw	0
  5054  0014DA  6E01               	movwf	___fladd@b^0,c
  5055  0014DC  0E00               	movlw	0
  5056  0014DE  6E02               	movwf	(___fladd@b+1)^0,c
  5057  0014E0  0E00               	movlw	0
  5058  0014E2  6E03               	movwf	(___fladd@b+2)^0,c
  5059  0014E4  0E00               	movlw	0
  5060  0014E6  6E04               	movwf	(___fladd@b+3)^0,c
  5061  0014E8                     l2561:
  5062  0014E8  5008               	movf	(___fladd@a+3)^0,w,c
  5063  0014EA  0B80               	andlw	128
  5064  0014EC  6E0E               	movwf	___fladd@aexp^0,c
  5065  0014EE  500D               	movf	___fladd@signs^0,w,c
  5066  0014F0  180E               	xorwf	___fladd@aexp^0,w,c
  5067  0014F2  B4D8               	btfsc	status,2,c
  5068  0014F4  EF7E  F00A         	goto	u2501
  5069  0014F8  EF80  F00A         	goto	u2500
  5070  0014FC                     u2501:
  5071  0014FC  EF81  F00A         	goto	l2567
  5072  001500                     u2500:
  5073  001500  8C0D               	bsf	___fladd@signs^0,6,c
  5074  001502                     l2567:
  5075  001502  5008               	movf	(___fladd@a+3)^0,w,c
  5076  001504  2408               	addwf	(___fladd@a+3)^0,w,c
  5077  001506  6E0E               	movwf	___fladd@aexp^0,c
  5078  001508  AE07               	btfss	(___fladd@a+2)^0,7,c
  5079  00150A  EF89  F00A         	goto	u2511
  5080  00150E  EF8B  F00A         	goto	u2510
  5081  001512                     u2511:
  5082  001512  EF8C  F00A         	goto	l2573
  5083  001516                     u2510:
  5084  001516  800E               	bsf	___fladd@aexp^0,0,c
  5085  001518                     l2573:
  5086  001518  500E               	movf	___fladd@aexp^0,w,c
  5087  00151A  B4D8               	btfsc	status,2,c
  5088  00151C  EF92  F00A         	goto	u2521
  5089  001520  EF94  F00A         	goto	u2520
  5090  001524                     u2521:
  5091  001524  EFA9  F00A         	goto	l2583
  5092  001528                     u2520:
  5093  001528  280E               	incf	___fladd@aexp^0,w,c
  5094  00152A  A4D8               	btfss	status,2,c
  5095  00152C  EF9A  F00A         	goto	u2531
  5096  001530  EF9C  F00A         	goto	u2530
  5097  001534                     u2531:
  5098  001534  EFA4  F00A         	goto	l2579
  5099  001538                     u2530:
  5100  001538  0E00               	movlw	0
  5101  00153A  6E05               	movwf	___fladd@a^0,c
  5102  00153C  0E00               	movlw	0
  5103  00153E  6E06               	movwf	(___fladd@a+1)^0,c
  5104  001540  0E00               	movlw	0
  5105  001542  6E07               	movwf	(___fladd@a+2)^0,c
  5106  001544  0E00               	movlw	0
  5107  001546  6E08               	movwf	(___fladd@a+3)^0,c
  5108  001548                     l2579:
  5109  001548  8E07               	bsf	(___fladd@a+2)^0,7,c
  5110  00154A  0E00               	movlw	0
  5111  00154C  6E08               	movwf	(___fladd@a+3)^0,c
  5112  00154E  EFB1  F00A         	goto	l2585
  5113  001552                     l2583:
  5114  001552  0E00               	movlw	0
  5115  001554  6E05               	movwf	___fladd@a^0,c
  5116  001556  0E00               	movlw	0
  5117  001558  6E06               	movwf	(___fladd@a+1)^0,c
  5118  00155A  0E00               	movlw	0
  5119  00155C  6E07               	movwf	(___fladd@a+2)^0,c
  5120  00155E  0E00               	movlw	0
  5121  001560  6E08               	movwf	(___fladd@a+3)^0,c
  5122  001562                     l2585:
  5123  001562  500F               	movf	___fladd@bexp^0,w,c
  5124  001564  5C0E               	subwf	___fladd@aexp^0,w,c
  5125  001566  B0D8               	btfsc	status,0,c
  5126  001568  EFB8  F00A         	goto	u2541
  5127  00156C  EFBA  F00A         	goto	u2540
  5128  001570                     u2541:
  5129  001570  EFE1  F00A         	goto	l2621
  5130  001574                     u2540:
  5131  001574  AC0D               	btfss	___fladd@signs^0,6,c
  5132  001576  EFBF  F00A         	goto	u2551
  5133  00157A  EFC1  F00A         	goto	u2550
  5134  00157E                     u2551:
  5135  00157E  EFC3  F00A         	goto	l2591
  5136  001582                     u2550:
  5137  001582  0E80               	movlw	128
  5138  001584  1A0D               	xorwf	___fladd@signs^0,f,c
  5139  001586                     l2591:
  5140  001586  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5141  00158A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5142  00158E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5143  001592  C001  F010         	movff	___fladd@b,___fladd@grs
  5144  001596  C005  F001         	movff	___fladd@a,___fladd@b
  5145  00159A  C010  F005         	movff	___fladd@grs,___fladd@a
  5146  00159E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5147  0015A2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5148  0015A6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5149  0015AA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5150  0015AE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5151  0015B2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5152  0015B6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5153  0015BA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5154  0015BE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5155  0015C2                     l2621:
  5156  0015C2  0E00               	movlw	0
  5157  0015C4  6E10               	movwf	___fladd@grs^0,c
  5158  0015C6  500F               	movf	___fladd@bexp^0,w,c
  5159  0015C8  C00E  F009         	movff	___fladd@aexp,??___fladd
  5160  0015CC  6A0A               	clrf	(??___fladd+1)^0,c
  5161  0015CE  5E09               	subwf	??___fladd^0,f,c
  5162  0015D0  0E00               	movlw	0
  5163  0015D2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5164  0015D4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5165  0015D6  EFF6  F00A         	goto	u2561
  5166  0015DA  500A               	movf	(??___fladd+1)^0,w,c
  5167  0015DC  E109               	bnz	u2560
  5168  0015DE  0E1A               	movlw	26
  5169  0015E0  5C09               	subwf	??___fladd^0,w,c
  5170  0015E2  A0D8               	btfss	status,0,c
  5171  0015E4  EFF6  F00A         	goto	u2561
  5172  0015E8  EFF8  F00A         	goto	u2560
  5173  0015EC                     u2561:
  5174  0015EC  EF2F  F00B         	goto	l612
  5175  0015F0                     u2560:
  5176  0015F0  5001               	movf	___fladd@b^0,w,c
  5177  0015F2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5178  0015F4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5179  0015F6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5180  0015F8  A4D8               	btfss	status,2,c
  5181  0015FA  EF01  F00B         	goto	u2571
  5182  0015FE  EF04  F00B         	goto	u2570
  5183  001602                     u2571:
  5184  001602  0E01               	movlw	1
  5185  001604  EF05  F00B         	goto	u2580
  5186  001608                     u2570:
  5187  001608  0E00               	movlw	0
  5188  00160A                     u2580:
  5189  00160A  6E10               	movwf	___fladd@grs^0,c
  5190  00160C  0E00               	movlw	0
  5191  00160E  6E01               	movwf	___fladd@b^0,c
  5192  001610  0E00               	movlw	0
  5193  001612  6E02               	movwf	(___fladd@b+1)^0,c
  5194  001614  0E00               	movlw	0
  5195  001616  6E03               	movwf	(___fladd@b+2)^0,c
  5196  001618  0E00               	movlw	0
  5197  00161A  6E04               	movwf	(___fladd@b+3)^0,c
  5198  00161C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5199  001620  EF38  F00B         	goto	l611
  5200  001624                     l613:
  5201  001624  A010               	btfss	___fladd@grs^0,0,c
  5202  001626  EF17  F00B         	goto	u2591
  5203  00162A  EF19  F00B         	goto	u2590
  5204  00162E                     u2591:
  5205  00162E  EF1F  F00B         	goto	l2633
  5206  001632                     u2590:
  5207  001632  90D8               	bcf	status,0,c
  5208  001634  3010               	rrcf	___fladd@grs^0,w,c
  5209  001636  0901               	iorlw	1
  5210  001638  6E10               	movwf	___fladd@grs^0,c
  5211  00163A  EF21  F00B         	goto	l2635
  5212  00163E                     l2633:
  5213  00163E  90D8               	bcf	status,0,c
  5214  001640  3210               	rrcf	___fladd@grs^0,f,c
  5215  001642                     l2635:
  5216  001642  A001               	btfss	___fladd@b^0,0,c
  5217  001644  EF26  F00B         	goto	u2601
  5218  001648  EF28  F00B         	goto	u2600
  5219  00164C                     u2601:
  5220  00164C  EF29  F00B         	goto	l2639
  5221  001650                     u2600:
  5222  001650  8E10               	bsf	___fladd@grs^0,7,c
  5223  001652                     l2639:
  5224  001652  3404               	rlcf	(___fladd@b+3)^0,w,c
  5225  001654  3204               	rrcf	(___fladd@b+3)^0,f,c
  5226  001656  3203               	rrcf	(___fladd@b+2)^0,f,c
  5227  001658  3202               	rrcf	(___fladd@b+1)^0,f,c
  5228  00165A  3201               	rrcf	___fladd@b^0,f,c
  5229  00165C  2A0F               	incf	___fladd@bexp^0,f,c
  5230  00165E                     l612:
  5231  00165E  500E               	movf	___fladd@aexp^0,w,c
  5232  001660  5C0F               	subwf	___fladd@bexp^0,w,c
  5233  001662  A0D8               	btfss	status,0,c
  5234  001664  EF36  F00B         	goto	u2611
  5235  001668  EF38  F00B         	goto	u2610
  5236  00166C                     u2611:
  5237  00166C  EF12  F00B         	goto	l613
  5238  001670                     u2610:
  5239  001670                     l611:
  5240  001670  BC0D               	btfsc	___fladd@signs^0,6,c
  5241  001672  EF3D  F00B         	goto	u2621
  5242  001676  EF3F  F00B         	goto	u2620
  5243  00167A                     u2621:
  5244  00167A  EF7F  F00B         	goto	l2667
  5245  00167E                     u2620:
  5246  00167E  500F               	movf	___fladd@bexp^0,w,c
  5247  001680  A4D8               	btfss	status,2,c
  5248  001682  EF45  F00B         	goto	u2631
  5249  001686  EF47  F00B         	goto	u2630
  5250  00168A                     u2631:
  5251  00168A  EF51  F00B         	goto	l2649
  5252  00168E                     u2630:
  5253  00168E  0E00               	movlw	0
  5254  001690  6E01               	movwf	?___fladd^0,c
  5255  001692  0E00               	movlw	0
  5256  001694  6E02               	movwf	(?___fladd+1)^0,c
  5257  001696  0E00               	movlw	0
  5258  001698  6E03               	movwf	(?___fladd+2)^0,c
  5259  00169A  0E00               	movlw	0
  5260  00169C  6E04               	movwf	(?___fladd+3)^0,c
  5261  00169E  EFA0  F00C         	goto	l620
  5262  0016A2                     l2649:
  5263  0016A2  5005               	movf	___fladd@a^0,w,c
  5264  0016A4  2601               	addwf	___fladd@b^0,f,c
  5265  0016A6  5006               	movf	(___fladd@a+1)^0,w,c
  5266  0016A8  2202               	addwfc	(___fladd@b+1)^0,f,c
  5267  0016AA  5007               	movf	(___fladd@a+2)^0,w,c
  5268  0016AC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5269  0016AE  5008               	movf	(___fladd@a+3)^0,w,c
  5270  0016B0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5271  0016B2  A004               	btfss	(___fladd@b+3)^0,0,c
  5272  0016B4  EF5E  F00B         	goto	u2641
  5273  0016B8  EF60  F00B         	goto	u2640
  5274  0016BC                     u2641:
  5275  0016BC  EF0C  F00C         	goto	l2703
  5276  0016C0                     u2640:
  5277  0016C0  A010               	btfss	___fladd@grs^0,0,c
  5278  0016C2  EF65  F00B         	goto	u2651
  5279  0016C6  EF67  F00B         	goto	u2650
  5280  0016CA                     u2651:
  5281  0016CA  EF6D  F00B         	goto	l2657
  5282  0016CE                     u2650:
  5283  0016CE  90D8               	bcf	status,0,c
  5284  0016D0  3010               	rrcf	___fladd@grs^0,w,c
  5285  0016D2  0901               	iorlw	1
  5286  0016D4  6E10               	movwf	___fladd@grs^0,c
  5287  0016D6  EF6F  F00B         	goto	l2659
  5288  0016DA                     l2657:
  5289  0016DA  90D8               	bcf	status,0,c
  5290  0016DC  3210               	rrcf	___fladd@grs^0,f,c
  5291  0016DE                     l2659:
  5292  0016DE  A001               	btfss	___fladd@b^0,0,c
  5293  0016E0  EF74  F00B         	goto	u2661
  5294  0016E4  EF76  F00B         	goto	u2660
  5295  0016E8                     u2661:
  5296  0016E8  EF77  F00B         	goto	l2663
  5297  0016EC                     u2660:
  5298  0016EC  8E10               	bsf	___fladd@grs^0,7,c
  5299  0016EE                     l2663:
  5300  0016EE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5301  0016F0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5302  0016F2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5303  0016F4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5304  0016F6  3201               	rrcf	___fladd@b^0,f,c
  5305  0016F8  2A0F               	incf	___fladd@bexp^0,f,c
  5306  0016FA  EF0C  F00C         	goto	l2703
  5307  0016FE                     l2667:
  5308  0016FE  5005               	movf	___fladd@a^0,w,c
  5309  001700  5C01               	subwf	___fladd@b^0,w,c
  5310  001702  5006               	movf	(___fladd@a+1)^0,w,c
  5311  001704  5802               	subwfb	(___fladd@b+1)^0,w,c
  5312  001706  5007               	movf	(___fladd@a+2)^0,w,c
  5313  001708  5803               	subwfb	(___fladd@b+2)^0,w,c
  5314  00170A  5004               	movf	(___fladd@b+3)^0,w,c
  5315  00170C  0A80               	xorlw	128
  5316  00170E  6E09               	movwf	??___fladd^0,c
  5317  001710  5008               	movf	(___fladd@a+3)^0,w,c
  5318  001712  0A80               	xorlw	128
  5319  001714  5809               	subwfb	??___fladd^0,w,c
  5320  001716  B0D8               	btfsc	status,0,c
  5321  001718  EF90  F00B         	goto	u2671
  5322  00171C  EF92  F00B         	goto	u2670
  5323  001720                     u2671:
  5324  001720  EFBD  F00B         	goto	l2677
  5325  001724                     u2670:
  5326  001724  5001               	movf	___fladd@b^0,w,c
  5327  001726  5C05               	subwf	___fladd@a^0,w,c
  5328  001728  6E09               	movwf	??___fladd^0,c
  5329  00172A  5002               	movf	(___fladd@b+1)^0,w,c
  5330  00172C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5331  00172E  6E0A               	movwf	(??___fladd+1)^0,c
  5332  001730  5003               	movf	(___fladd@b+2)^0,w,c
  5333  001732  5807               	subwfb	(___fladd@a+2)^0,w,c
  5334  001734  6E0B               	movwf	(??___fladd+2)^0,c
  5335  001736  5004               	movf	(___fladd@b+3)^0,w,c
  5336  001738  5808               	subwfb	(___fladd@a+3)^0,w,c
  5337  00173A  6E0C               	movwf	(??___fladd+3)^0,c
  5338  00173C  0EFF               	movlw	255
  5339  00173E  2409               	addwf	??___fladd^0,w,c
  5340  001740  6E01               	movwf	___fladd@b^0,c
  5341  001742  0EFF               	movlw	255
  5342  001744  200A               	addwfc	(??___fladd+1)^0,w,c
  5343  001746  6E02               	movwf	(___fladd@b+1)^0,c
  5344  001748  0EFF               	movlw	255
  5345  00174A  200B               	addwfc	(??___fladd+2)^0,w,c
  5346  00174C  6E03               	movwf	(___fladd@b+2)^0,c
  5347  00174E  0EFF               	movlw	255
  5348  001750  200C               	addwfc	(??___fladd+3)^0,w,c
  5349  001752  6E04               	movwf	(___fladd@b+3)^0,c
  5350  001754  0E80               	movlw	128
  5351  001756  1A0D               	xorwf	___fladd@signs^0,f,c
  5352  001758  6C10               	negf	___fladd@grs^0,c
  5353  00175A  5010               	movf	___fladd@grs^0,w,c
  5354  00175C  A4D8               	btfss	status,2,c
  5355  00175E  EFB3  F00B         	goto	u2681
  5356  001762  EFB5  F00B         	goto	u2680
  5357  001766                     u2681:
  5358  001766  EFC5  F00B         	goto	l628
  5359  00176A                     u2680:
  5360  00176A  0E01               	movlw	1
  5361  00176C  2601               	addwf	___fladd@b^0,f,c
  5362  00176E  0E00               	movlw	0
  5363  001770  2202               	addwfc	(___fladd@b+1)^0,f,c
  5364  001772  2203               	addwfc	(___fladd@b+2)^0,f,c
  5365  001774  2204               	addwfc	(___fladd@b+3)^0,f,c
  5366  001776  EFC5  F00B         	goto	l628
  5367  00177A                     l2677:
  5368  00177A  5005               	movf	___fladd@a^0,w,c
  5369  00177C  5E01               	subwf	___fladd@b^0,f,c
  5370  00177E  5006               	movf	(___fladd@a+1)^0,w,c
  5371  001780  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5372  001782  5007               	movf	(___fladd@a+2)^0,w,c
  5373  001784  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5374  001786  5008               	movf	(___fladd@a+3)^0,w,c
  5375  001788  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5376  00178A                     l628:
  5377  00178A  5001               	movf	___fladd@b^0,w,c
  5378  00178C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5379  00178E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5380  001790  1004               	iorwf	(___fladd@b+3)^0,w,c
  5381  001792  A4D8               	btfss	status,2,c
  5382  001794  EFCE  F00B         	goto	u2691
  5383  001798  EFD0  F00B         	goto	u2690
  5384  00179C                     u2691:
  5385  00179C  EF05  F00C         	goto	l2701
  5386  0017A0                     u2690:
  5387  0017A0  5010               	movf	___fladd@grs^0,w,c
  5388  0017A2  A4D8               	btfss	status,2,c
  5389  0017A4  EFD6  F00B         	goto	u2701
  5390  0017A8  EFD8  F00B         	goto	u2700
  5391  0017AC                     u2701:
  5392  0017AC  EF05  F00C         	goto	l2701
  5393  0017B0                     u2700:
  5394  0017B0  0E00               	movlw	0
  5395  0017B2  6E01               	movwf	?___fladd^0,c
  5396  0017B4  0E00               	movlw	0
  5397  0017B6  6E02               	movwf	(?___fladd+1)^0,c
  5398  0017B8  0E00               	movlw	0
  5399  0017BA  6E03               	movwf	(?___fladd+2)^0,c
  5400  0017BC  0E00               	movlw	0
  5401  0017BE  6E04               	movwf	(?___fladd+3)^0,c
  5402  0017C0  EFA0  F00C         	goto	l620
  5403  0017C4                     l2685:
  5404  0017C4  90D8               	bcf	status,0,c
  5405  0017C6  3601               	rlcf	___fladd@b^0,f,c
  5406  0017C8  3602               	rlcf	(___fladd@b+1)^0,f,c
  5407  0017CA  3603               	rlcf	(___fladd@b+2)^0,f,c
  5408  0017CC  3604               	rlcf	(___fladd@b+3)^0,f,c
  5409  0017CE  AE10               	btfss	___fladd@grs^0,7,c
  5410  0017D0  EFEC  F00B         	goto	u2711
  5411  0017D4  EFEE  F00B         	goto	u2710
  5412  0017D8                     u2711:
  5413  0017D8  EFEF  F00B         	goto	l2691
  5414  0017DC                     u2710:
  5415  0017DC  8001               	bsf	___fladd@b^0,0,c
  5416  0017DE                     l2691:
  5417  0017DE  A010               	btfss	___fladd@grs^0,0,c
  5418  0017E0  EFF4  F00B         	goto	u2721
  5419  0017E4  EFF6  F00B         	goto	u2720
  5420  0017E8                     u2721:
  5421  0017E8  EFFA  F00B         	goto	l2695
  5422  0017EC                     u2720:
  5423  0017EC  80D8               	bsf	status,0,c
  5424  0017EE  3610               	rlcf	___fladd@grs^0,f,c
  5425  0017F0  EFFC  F00B         	goto	l2697
  5426  0017F4                     l2695:
  5427  0017F4  90D8               	bcf	status,0,c
  5428  0017F6  3610               	rlcf	___fladd@grs^0,f,c
  5429  0017F8                     l2697:
  5430  0017F8  500F               	movf	___fladd@bexp^0,w,c
  5431  0017FA  B4D8               	btfsc	status,2,c
  5432  0017FC  EF02  F00C         	goto	u2731
  5433  001800  EF04  F00C         	goto	u2730
  5434  001804                     u2731:
  5435  001804  EF05  F00C         	goto	l2701
  5436  001808                     u2730:
  5437  001808  060F               	decf	___fladd@bexp^0,f,c
  5438  00180A                     l2701:
  5439  00180A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5440  00180C  EF0A  F00C         	goto	u2741
  5441  001810  EF0C  F00C         	goto	u2740
  5442  001814                     u2741:
  5443  001814  EFE2  F00B         	goto	l2685
  5444  001818                     u2740:
  5445  001818                     l2703:
  5446  001818  0E00               	movlw	0
  5447  00181A  6E0E               	movwf	___fladd@aexp^0,c
  5448  00181C  AE10               	btfss	___fladd@grs^0,7,c
  5449  00181E  EF13  F00C         	goto	u2751
  5450  001822  EF15  F00C         	goto	u2750
  5451  001826                     u2751:
  5452  001826  EF2D  F00C         	goto	l637
  5453  00182A                     u2750:
  5454  00182A  C010  F009         	movff	___fladd@grs,??___fladd
  5455  00182E  0E7F               	movlw	127
  5456  001830  1609               	andwf	??___fladd^0,f,c
  5457  001832  B4D8               	btfsc	status,2,c
  5458  001834  EF1E  F00C         	goto	u2761
  5459  001838  EF20  F00C         	goto	u2760
  5460  00183C                     u2761:
  5461  00183C  EF24  F00C         	goto	l638
  5462  001840                     u2760:
  5463  001840                     l2709:
  5464  001840  0E01               	movlw	1
  5465  001842  6E0E               	movwf	___fladd@aexp^0,c
  5466  001844  EF2D  F00C         	goto	l637
  5467  001848                     l638:
  5468  001848  A001               	btfss	___fladd@b^0,0,c
  5469  00184A  EF29  F00C         	goto	u2771
  5470  00184E  EF2B  F00C         	goto	u2770
  5471  001852                     u2771:
  5472  001852  EF2D  F00C         	goto	l637
  5473  001856                     u2770:
  5474  001856  EF20  F00C         	goto	l2709
  5475  00185A                     l637:
  5476  00185A  500E               	movf	___fladd@aexp^0,w,c
  5477  00185C  B4D8               	btfsc	status,2,c
  5478  00185E  EF33  F00C         	goto	u2781
  5479  001862  EF35  F00C         	goto	u2780
  5480  001866                     u2781:
  5481  001866  EF60  F00C         	goto	l2721
  5482  00186A                     u2780:
  5483  00186A  0E01               	movlw	1
  5484  00186C  2601               	addwf	___fladd@b^0,f,c
  5485  00186E  0E00               	movlw	0
  5486  001870  2202               	addwfc	(___fladd@b+1)^0,f,c
  5487  001872  2203               	addwfc	(___fladd@b+2)^0,f,c
  5488  001874  2204               	addwfc	(___fladd@b+3)^0,f,c
  5489  001876  A004               	btfss	(___fladd@b+3)^0,0,c
  5490  001878  EF40  F00C         	goto	u2791
  5491  00187C  EF42  F00C         	goto	u2790
  5492  001880                     u2791:
  5493  001880  EF60  F00C         	goto	l2721
  5494  001884                     u2790:
  5495  001884  C001  F009         	movff	___fladd@b,??___fladd
  5496  001888  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5497  00188C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5498  001890  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5499  001894  340C               	rlcf	(??___fladd+3)^0,w,c
  5500  001896  320C               	rrcf	(??___fladd+3)^0,f,c
  5501  001898  320B               	rrcf	(??___fladd+2)^0,f,c
  5502  00189A  320A               	rrcf	(??___fladd+1)^0,f,c
  5503  00189C  3209               	rrcf	??___fladd^0,f,c
  5504  00189E  C009  F001         	movff	??___fladd,___fladd@b
  5505  0018A2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5506  0018A6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5507  0018AA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5508  0018AE  280F               	incf	___fladd@bexp^0,w,c
  5509  0018B0  B4D8               	btfsc	status,2,c
  5510  0018B2  EF5D  F00C         	goto	u2801
  5511  0018B6  EF5F  F00C         	goto	u2800
  5512  0018BA                     u2801:
  5513  0018BA  EF60  F00C         	goto	l2721
  5514  0018BE                     u2800:
  5515  0018BE  2A0F               	incf	___fladd@bexp^0,f,c
  5516  0018C0                     l2721:
  5517  0018C0  280F               	incf	___fladd@bexp^0,w,c
  5518  0018C2  B4D8               	btfsc	status,2,c
  5519  0018C4  EF66  F00C         	goto	u2811
  5520  0018C8  EF68  F00C         	goto	u2810
  5521  0018CC                     u2811:
  5522  0018CC  EF70  F00C         	goto	l2725
  5523  0018D0                     u2810:
  5524  0018D0  500F               	movf	___fladd@bexp^0,w,c
  5525  0018D2  A4D8               	btfss	status,2,c
  5526  0018D4  EF6E  F00C         	goto	u2821
  5527  0018D8  EF70  F00C         	goto	u2820
  5528  0018DC                     u2821:
  5529  0018DC  EF82  F00C         	goto	l2729
  5530  0018E0                     u2820:
  5531  0018E0                     l2725:
  5532  0018E0  0E00               	movlw	0
  5533  0018E2  6E01               	movwf	___fladd@b^0,c
  5534  0018E4  0E00               	movlw	0
  5535  0018E6  6E02               	movwf	(___fladd@b+1)^0,c
  5536  0018E8  0E00               	movlw	0
  5537  0018EA  6E03               	movwf	(___fladd@b+2)^0,c
  5538  0018EC  0E00               	movlw	0
  5539  0018EE  6E04               	movwf	(___fladd@b+3)^0,c
  5540  0018F0  500F               	movf	___fladd@bexp^0,w,c
  5541  0018F2  A4D8               	btfss	status,2,c
  5542  0018F4  EF7E  F00C         	goto	u2831
  5543  0018F8  EF80  F00C         	goto	u2830
  5544  0018FC                     u2831:
  5545  0018FC  EF82  F00C         	goto	l2729
  5546  001900                     u2830:
  5547  001900  0E00               	movlw	0
  5548  001902  6E0D               	movwf	___fladd@signs^0,c
  5549  001904                     l2729:
  5550  001904  A00F               	btfss	___fladd@bexp^0,0,c
  5551  001906  EF87  F00C         	goto	u2841
  5552  00190A  EF89  F00C         	goto	u2840
  5553  00190E                     u2841:
  5554  00190E  EF8C  F00C         	goto	l2733
  5555  001912                     u2840:
  5556  001912  8E03               	bsf	(___fladd@b+2)^0,7,c
  5557  001914  EF8D  F00C         	goto	l2735
  5558  001918                     l2733:
  5559  001918  9E03               	bcf	(___fladd@b+2)^0,7,c
  5560  00191A                     l2735:
  5561  00191A  90D8               	bcf	status,0,c
  5562  00191C  300F               	rrcf	___fladd@bexp^0,w,c
  5563  00191E  6E04               	movwf	(___fladd@b+3)^0,c
  5564  001920  AE0D               	btfss	___fladd@signs^0,7,c
  5565  001922  EF95  F00C         	goto	u2851
  5566  001926  EF97  F00C         	goto	u2850
  5567  00192A                     u2851:
  5568  00192A  EF98  F00C         	goto	l2741
  5569  00192E                     u2850:
  5570  00192E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5571  001930                     l2741:
  5572  001930  C001  F001         	movff	___fladd@b,?___fladd
  5573  001934  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5574  001938  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5575  00193C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5576  001940                     l620:
  5577  001940  0012               	return		;funcret
  5578  001942                     __end_of___fladd:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function ___flneg *****************
  5582 ;; Defined at:
  5583 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  f1              4    0[COMRAM] unsigned char 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  4    0[COMRAM] unsigned char 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5597 ;;      Params:         4       0       0       0       0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5600 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5601 ;;Total ram usage:        4 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_efgtoa
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text19
  5611  0036DC                     __ptext19:
  5612                           	callstack 0
  5613  0036DC                     ___flneg:
  5614                           	callstack 26
  5615  0036DC  5001               	movf	___flneg@f1^0,w,c
  5616  0036DE  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5617  0036E0  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5618  0036E2  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5619  0036E4  B4D8               	btfsc	status,2,c
  5620  0036E6  EF77  F01B         	goto	u3521
  5621  0036EA  EF79  F01B         	goto	u3520
  5622  0036EE                     u3521:
  5623  0036EE  EF81  F01B         	goto	l3169
  5624  0036F2                     u3520:
  5625  0036F2  0E00               	movlw	0
  5626  0036F4  1A01               	xorwf	___flneg@f1^0,f,c
  5627  0036F6  0E00               	movlw	0
  5628  0036F8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5629  0036FA  0E00               	movlw	0
  5630  0036FC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5631  0036FE  0E80               	movlw	128
  5632  003700  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5633  003702                     l3169:
  5634  003702  C001  F001         	movff	___flneg@f1,?___flneg
  5635  003706  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5636  00370A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5637  00370E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5638  003712  0012               	return		;funcret
  5639  003714                     __end_of___flneg:
  5640                           	callstack 0
  5641                           
  5642 ;; *************** function ___flmul *****************
  5643 ;; Defined at:
  5644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  b               4   19[COMRAM] unsigned char 
  5647 ;;  a               4   23[COMRAM] unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  prod            4   38[COMRAM] struct .
  5650 ;;  grs             4   32[COMRAM] unsigned long 
  5651 ;;  temp            2   42[COMRAM] struct .
  5652 ;;  bexp            1   37[COMRAM] unsigned char 
  5653 ;;  aexp            1   36[COMRAM] unsigned char 
  5654 ;;  sign            1   31[COMRAM] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  4   19[COMRAM] unsigned char 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, prodl, prodh
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5664 ;;      Params:         8       0       0       0       0       0       0       0       0
  5665 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5666 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5667 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5668 ;;Total ram usage:       25 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_main
  5674 ;;		_efgtoa
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text20
  5679  001DA2                     __ptext20:
  5680                           	callstack 0
  5681  001DA2                     ___flmul:
  5682                           	callstack 26
  5683  001DA2  5017               	movf	(___flmul@b+3)^0,w,c
  5684  001DA4  0B80               	andlw	128
  5685  001DA6  6E20               	movwf	___flmul@sign^0,c
  5686  001DA8  5017               	movf	(___flmul@b+3)^0,w,c
  5687  001DAA  2417               	addwf	(___flmul@b+3)^0,w,c
  5688  001DAC  6E26               	movwf	___flmul@bexp^0,c
  5689  001DAE  AE16               	btfss	(___flmul@b+2)^0,7,c
  5690  001DB0  EFDC  F00E         	goto	u3131
  5691  001DB4  EFDE  F00E         	goto	u3130
  5692  001DB8                     u3131:
  5693  001DB8  EFDF  F00E         	goto	l2917
  5694  001DBC                     u3130:
  5695  001DBC  8026               	bsf	___flmul@bexp^0,0,c
  5696  001DBE                     l2917:
  5697  001DBE  5026               	movf	___flmul@bexp^0,w,c
  5698  001DC0  B4D8               	btfsc	status,2,c
  5699  001DC2  EFE5  F00E         	goto	u3141
  5700  001DC6  EFE7  F00E         	goto	u3140
  5701  001DCA                     u3141:
  5702  001DCA  EFFA  F00E         	goto	l2925
  5703  001DCE                     u3140:
  5704  001DCE  2826               	incf	___flmul@bexp^0,w,c
  5705  001DD0  A4D8               	btfss	status,2,c
  5706  001DD2  EFED  F00E         	goto	u3151
  5707  001DD6  EFEF  F00E         	goto	u3150
  5708  001DDA                     u3151:
  5709  001DDA  EFF7  F00E         	goto	l2923
  5710  001DDE                     u3150:
  5711  001DDE  0E00               	movlw	0
  5712  001DE0  6E14               	movwf	___flmul@b^0,c
  5713  001DE2  0E00               	movlw	0
  5714  001DE4  6E15               	movwf	(___flmul@b+1)^0,c
  5715  001DE6  0E00               	movlw	0
  5716  001DE8  6E16               	movwf	(___flmul@b+2)^0,c
  5717  001DEA  0E00               	movlw	0
  5718  001DEC  6E17               	movwf	(___flmul@b+3)^0,c
  5719  001DEE                     l2923:
  5720  001DEE  8E16               	bsf	(___flmul@b+2)^0,7,c
  5721  001DF0  EF02  F00F         	goto	l2927
  5722  001DF4                     l2925:
  5723  001DF4  0E00               	movlw	0
  5724  001DF6  6E14               	movwf	___flmul@b^0,c
  5725  001DF8  0E00               	movlw	0
  5726  001DFA  6E15               	movwf	(___flmul@b+1)^0,c
  5727  001DFC  0E00               	movlw	0
  5728  001DFE  6E16               	movwf	(___flmul@b+2)^0,c
  5729  001E00  0E00               	movlw	0
  5730  001E02  6E17               	movwf	(___flmul@b+3)^0,c
  5731  001E04                     l2927:
  5732  001E04  501B               	movf	(___flmul@a+3)^0,w,c
  5733  001E06  0B80               	andlw	128
  5734  001E08  1A20               	xorwf	___flmul@sign^0,f,c
  5735  001E0A  501B               	movf	(___flmul@a+3)^0,w,c
  5736  001E0C  241B               	addwf	(___flmul@a+3)^0,w,c
  5737  001E0E  6E25               	movwf	___flmul@aexp^0,c
  5738  001E10  AE1A               	btfss	(___flmul@a+2)^0,7,c
  5739  001E12  EF0D  F00F         	goto	u3161
  5740  001E16  EF0F  F00F         	goto	u3160
  5741  001E1A                     u3161:
  5742  001E1A  EF10  F00F         	goto	l2935
  5743  001E1E                     u3160:
  5744  001E1E  8025               	bsf	___flmul@aexp^0,0,c
  5745  001E20                     l2935:
  5746  001E20  5025               	movf	___flmul@aexp^0,w,c
  5747  001E22  B4D8               	btfsc	status,2,c
  5748  001E24  EF16  F00F         	goto	u3171
  5749  001E28  EF18  F00F         	goto	u3170
  5750  001E2C                     u3171:
  5751  001E2C  EF2B  F00F         	goto	l2943
  5752  001E30                     u3170:
  5753  001E30  2825               	incf	___flmul@aexp^0,w,c
  5754  001E32  A4D8               	btfss	status,2,c
  5755  001E34  EF1E  F00F         	goto	u3181
  5756  001E38  EF20  F00F         	goto	u3180
  5757  001E3C                     u3181:
  5758  001E3C  EF28  F00F         	goto	l2941
  5759  001E40                     u3180:
  5760  001E40  0E00               	movlw	0
  5761  001E42  6E18               	movwf	___flmul@a^0,c
  5762  001E44  0E00               	movlw	0
  5763  001E46  6E19               	movwf	(___flmul@a+1)^0,c
  5764  001E48  0E00               	movlw	0
  5765  001E4A  6E1A               	movwf	(___flmul@a+2)^0,c
  5766  001E4C  0E00               	movlw	0
  5767  001E4E  6E1B               	movwf	(___flmul@a+3)^0,c
  5768  001E50                     l2941:
  5769  001E50  8E1A               	bsf	(___flmul@a+2)^0,7,c
  5770  001E52  EF33  F00F         	goto	l697
  5771  001E56                     l2943:
  5772  001E56  0E00               	movlw	0
  5773  001E58  6E18               	movwf	___flmul@a^0,c
  5774  001E5A  0E00               	movlw	0
  5775  001E5C  6E19               	movwf	(___flmul@a+1)^0,c
  5776  001E5E  0E00               	movlw	0
  5777  001E60  6E1A               	movwf	(___flmul@a+2)^0,c
  5778  001E62  0E00               	movlw	0
  5779  001E64  6E1B               	movwf	(___flmul@a+3)^0,c
  5780  001E66                     l697:
  5781  001E66  5025               	movf	___flmul@aexp^0,w,c
  5782  001E68  B4D8               	btfsc	status,2,c
  5783  001E6A  EF39  F00F         	goto	u3191
  5784  001E6E  EF3B  F00F         	goto	u3190
  5785  001E72                     u3191:
  5786  001E72  EF43  F00F         	goto	l2947
  5787  001E76                     u3190:
  5788  001E76  5026               	movf	___flmul@bexp^0,w,c
  5789  001E78  A4D8               	btfss	status,2,c
  5790  001E7A  EF41  F00F         	goto	u3201
  5791  001E7E  EF43  F00F         	goto	u3200
  5792  001E82                     u3201:
  5793  001E82  EF4D  F00F         	goto	l2951
  5794  001E86                     u3200:
  5795  001E86                     l2947:
  5796  001E86  0E00               	movlw	0
  5797  001E88  6E14               	movwf	?___flmul^0,c
  5798  001E8A  0E00               	movlw	0
  5799  001E8C  6E15               	movwf	(?___flmul+1)^0,c
  5800  001E8E  0E00               	movlw	0
  5801  001E90  6E16               	movwf	(?___flmul+2)^0,c
  5802  001E92  0E00               	movlw	0
  5803  001E94  6E17               	movwf	(?___flmul+3)^0,c
  5804  001E96  EFE5  F010         	goto	l701
  5805  001E9A                     l2951:
  5806  001E9A  501A               	movf	(___flmul@a+2)^0,w,c
  5807  001E9C  0214               	mulwf	___flmul@b^0,c
  5808  001E9E  CFF3 F02B          	movff	prodl,___flmul@temp
  5809  001EA2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5810  001EA6  502B               	movf	___flmul@temp^0,w,c
  5811  001EA8  6E21               	movwf	___flmul@grs^0,c
  5812  001EAA  6A22               	clrf	(___flmul@grs+1)^0,c
  5813  001EAC  6A23               	clrf	(___flmul@grs+2)^0,c
  5814  001EAE  6A24               	clrf	(___flmul@grs+3)^0,c
  5815  001EB0  502C               	movf	(___flmul@temp+1)^0,w,c
  5816  001EB2  6E27               	movwf	___flmul@prod^0,c
  5817  001EB4  6A28               	clrf	(___flmul@prod+1)^0,c
  5818  001EB6  6A29               	clrf	(___flmul@prod+2)^0,c
  5819  001EB8  6A2A               	clrf	(___flmul@prod+3)^0,c
  5820  001EBA  5019               	movf	(___flmul@a+1)^0,w,c
  5821  001EBC  0215               	mulwf	(___flmul@b+1)^0,c
  5822  001EBE  CFF3 F02B          	movff	prodl,___flmul@temp
  5823  001EC2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5824  001EC6  502B               	movf	___flmul@temp^0,w,c
  5825  001EC8  2621               	addwf	___flmul@grs^0,f,c
  5826  001ECA  0E00               	movlw	0
  5827  001ECC  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5828  001ECE  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5829  001ED0  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5830  001ED2  502C               	movf	(___flmul@temp+1)^0,w,c
  5831  001ED4  2627               	addwf	___flmul@prod^0,f,c
  5832  001ED6  0E00               	movlw	0
  5833  001ED8  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5834  001EDA  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5835  001EDC  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5836  001EDE  5018               	movf	___flmul@a^0,w,c
  5837  001EE0  0216               	mulwf	(___flmul@b+2)^0,c
  5838  001EE2  CFF3 F02B          	movff	prodl,___flmul@temp
  5839  001EE6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5840  001EEA  502B               	movf	___flmul@temp^0,w,c
  5841  001EEC  2621               	addwf	___flmul@grs^0,f,c
  5842  001EEE  0E00               	movlw	0
  5843  001EF0  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5844  001EF2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5845  001EF4  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5846  001EF6  502C               	movf	(___flmul@temp+1)^0,w,c
  5847  001EF8  2627               	addwf	___flmul@prod^0,f,c
  5848  001EFA  0E00               	movlw	0
  5849  001EFC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5850  001EFE  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5851  001F00  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5852  001F02  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5853  001F06  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5854  001F0A  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5855  001F0E  6A21               	clrf	___flmul@grs^0,c
  5856  001F10  5018               	movf	___flmul@a^0,w,c
  5857  001F12  0215               	mulwf	(___flmul@b+1)^0,c
  5858  001F14  CFF3 F02B          	movff	prodl,___flmul@temp
  5859  001F18  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5860  001F1C  502B               	movf	___flmul@temp^0,w,c
  5861  001F1E  2621               	addwf	___flmul@grs^0,f,c
  5862  001F20  502C               	movf	(___flmul@temp+1)^0,w,c
  5863  001F22  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5864  001F24  0E00               	movlw	0
  5865  001F26  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5866  001F28  0E00               	movlw	0
  5867  001F2A  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5868  001F2C  5019               	movf	(___flmul@a+1)^0,w,c
  5869  001F2E  0214               	mulwf	___flmul@b^0,c
  5870  001F30  CFF3 F02B          	movff	prodl,___flmul@temp
  5871  001F34  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5872  001F38  502B               	movf	___flmul@temp^0,w,c
  5873  001F3A  2621               	addwf	___flmul@grs^0,f,c
  5874  001F3C  502C               	movf	(___flmul@temp+1)^0,w,c
  5875  001F3E  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5876  001F40  0E00               	movlw	0
  5877  001F42  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5878  001F44  0E00               	movlw	0
  5879  001F46  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5880  001F48  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5881  001F4C  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5882  001F50  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5883  001F54  6A21               	clrf	___flmul@grs^0,c
  5884  001F56  5018               	movf	___flmul@a^0,w,c
  5885  001F58  0214               	mulwf	___flmul@b^0,c
  5886  001F5A  CFF3 F02B          	movff	prodl,___flmul@temp
  5887  001F5E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5888  001F62  502B               	movf	___flmul@temp^0,w,c
  5889  001F64  2621               	addwf	___flmul@grs^0,f,c
  5890  001F66  502C               	movf	(___flmul@temp+1)^0,w,c
  5891  001F68  2222               	addwfc	(___flmul@grs+1)^0,f,c
  5892  001F6A  0E00               	movlw	0
  5893  001F6C  2223               	addwfc	(___flmul@grs+2)^0,f,c
  5894  001F6E  0E00               	movlw	0
  5895  001F70  2224               	addwfc	(___flmul@grs+3)^0,f,c
  5896  001F72  501A               	movf	(___flmul@a+2)^0,w,c
  5897  001F74  0215               	mulwf	(___flmul@b+1)^0,c
  5898  001F76  CFF3 F02B          	movff	prodl,___flmul@temp
  5899  001F7A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5900  001F7E  502B               	movf	___flmul@temp^0,w,c
  5901  001F80  2627               	addwf	___flmul@prod^0,f,c
  5902  001F82  502C               	movf	(___flmul@temp+1)^0,w,c
  5903  001F84  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5904  001F86  0E00               	movlw	0
  5905  001F88  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5906  001F8A  0E00               	movlw	0
  5907  001F8C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5908  001F8E  5019               	movf	(___flmul@a+1)^0,w,c
  5909  001F90  0216               	mulwf	(___flmul@b+2)^0,c
  5910  001F92  CFF3 F02B          	movff	prodl,___flmul@temp
  5911  001F96  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5912  001F9A  502B               	movf	___flmul@temp^0,w,c
  5913  001F9C  2627               	addwf	___flmul@prod^0,f,c
  5914  001F9E  502C               	movf	(___flmul@temp+1)^0,w,c
  5915  001FA0  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5916  001FA2  0E00               	movlw	0
  5917  001FA4  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5918  001FA6  0E00               	movlw	0
  5919  001FA8  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5920  001FAA  501A               	movf	(___flmul@a+2)^0,w,c
  5921  001FAC  0216               	mulwf	(___flmul@b+2)^0,c
  5922  001FAE  CFF3 F02B          	movff	prodl,___flmul@temp
  5923  001FB2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  5924  001FB6  502B               	movf	___flmul@temp^0,w,c
  5925  001FB8  6E1C               	movwf	??___flmul^0,c
  5926  001FBA  502C               	movf	(___flmul@temp+1)^0,w,c
  5927  001FBC  6E1D               	movwf	(??___flmul+1)^0,c
  5928  001FBE  6A1E               	clrf	(??___flmul+2)^0,c
  5929  001FC0  6A1F               	clrf	(??___flmul+3)^0,c
  5930  001FC2  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  5931  001FC6  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  5932  001FCA  C01C  F01D         	movff	??___flmul,??___flmul+1
  5933  001FCE  6A1C               	clrf	??___flmul^0,c
  5934  001FD0  501C               	movf	??___flmul^0,w,c
  5935  001FD2  2627               	addwf	___flmul@prod^0,f,c
  5936  001FD4  501D               	movf	(??___flmul+1)^0,w,c
  5937  001FD6  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5938  001FD8  501E               	movf	(??___flmul+2)^0,w,c
  5939  001FDA  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5940  001FDC  501F               	movf	(??___flmul+3)^0,w,c
  5941  001FDE  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5942  001FE0  C021  F01C         	movff	___flmul@grs,??___flmul
  5943  001FE4  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  5944  001FE8  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  5945  001FEC  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  5946  001FF0  0E19               	movlw	25
  5947  001FF2  EF00  F010         	goto	u3210
  5948  001FF6                     u3215:
  5949  001FF6  90D8               	bcf	status,0,c
  5950  001FF8  321F               	rrcf	(??___flmul+3)^0,f,c
  5951  001FFA  321E               	rrcf	(??___flmul+2)^0,f,c
  5952  001FFC  321D               	rrcf	(??___flmul+1)^0,f,c
  5953  001FFE  321C               	rrcf	??___flmul^0,f,c
  5954  002000                     u3210:
  5955  002000  2EE8               	decfsz	wreg,f,c
  5956  002002  EFFB  F00F         	goto	u3215
  5957  002006  501C               	movf	??___flmul^0,w,c
  5958  002008  2627               	addwf	___flmul@prod^0,f,c
  5959  00200A  501D               	movf	(??___flmul+1)^0,w,c
  5960  00200C  2228               	addwfc	(___flmul@prod+1)^0,f,c
  5961  00200E  501E               	movf	(??___flmul+2)^0,w,c
  5962  002010  2229               	addwfc	(___flmul@prod+2)^0,f,c
  5963  002012  501F               	movf	(??___flmul+3)^0,w,c
  5964  002014  222A               	addwfc	(___flmul@prod+3)^0,f,c
  5965  002016  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  5966  00201A  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  5967  00201E  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  5968  002022  6A21               	clrf	___flmul@grs^0,c
  5969  002024  5025               	movf	___flmul@aexp^0,w,c
  5970  002026  C026  F01C         	movff	___flmul@bexp,??___flmul
  5971  00202A  6A1D               	clrf	(??___flmul+1)^0,c
  5972  00202C  261C               	addwf	??___flmul^0,f,c
  5973  00202E  0E00               	movlw	0
  5974  002030  221D               	addwfc	(??___flmul+1)^0,f,c
  5975  002032  0E82               	movlw	130
  5976  002034  241C               	addwf	??___flmul^0,w,c
  5977  002036  6E2B               	movwf	___flmul@temp^0,c
  5978  002038  0EFF               	movlw	255
  5979  00203A  201D               	addwfc	(??___flmul+1)^0,w,c
  5980  00203C  6E2C               	movwf	(___flmul@temp+1)^0,c
  5981  00203E  EF36  F010         	goto	l2999
  5982  002042                     l2993:
  5983  002042  90D8               	bcf	status,0,c
  5984  002044  3627               	rlcf	___flmul@prod^0,f,c
  5985  002046  3628               	rlcf	(___flmul@prod+1)^0,f,c
  5986  002048  3629               	rlcf	(___flmul@prod+2)^0,f,c
  5987  00204A  362A               	rlcf	(___flmul@prod+3)^0,f,c
  5988  00204C  AE24               	btfss	(___flmul@grs+3)^0,7,c
  5989  00204E  EF2B  F010         	goto	u3221
  5990  002052  EF2D  F010         	goto	u3220
  5991  002056                     u3221:
  5992  002056  EF2E  F010         	goto	l704
  5993  00205A                     u3220:
  5994  00205A  8027               	bsf	___flmul@prod^0,0,c
  5995  00205C                     l704:
  5996  00205C  90D8               	bcf	status,0,c
  5997  00205E  3621               	rlcf	___flmul@grs^0,f,c
  5998  002060  3622               	rlcf	(___flmul@grs+1)^0,f,c
  5999  002062  3623               	rlcf	(___flmul@grs+2)^0,f,c
  6000  002064  3624               	rlcf	(___flmul@grs+3)^0,f,c
  6001  002066  062B               	decf	___flmul@temp^0,f,c
  6002  002068  A0D8               	btfss	status,0,c
  6003  00206A  062C               	decf	(___flmul@temp+1)^0,f,c
  6004  00206C                     l2999:
  6005  00206C  AE29               	btfss	(___flmul@prod+2)^0,7,c
  6006  00206E  EF3B  F010         	goto	u3231
  6007  002072  EF3D  F010         	goto	u3230
  6008  002076                     u3231:
  6009  002076  EF21  F010         	goto	l2993
  6010  00207A                     u3230:
  6011  00207A  0E00               	movlw	0
  6012  00207C  6E25               	movwf	___flmul@aexp^0,c
  6013  00207E  AE24               	btfss	(___flmul@grs+3)^0,7,c
  6014  002080  EF44  F010         	goto	u3241
  6015  002084  EF46  F010         	goto	u3240
  6016  002088                     u3241:
  6017  002088  EF6A  F010         	goto	l706
  6018  00208C                     u3240:
  6019  00208C  0EFF               	movlw	255
  6020  00208E  1421               	andwf	___flmul@grs^0,w,c
  6021  002090  6E1C               	movwf	??___flmul^0,c
  6022  002092  0EFF               	movlw	255
  6023  002094  1422               	andwf	(___flmul@grs+1)^0,w,c
  6024  002096  6E1D               	movwf	(??___flmul+1)^0,c
  6025  002098  0EFF               	movlw	255
  6026  00209A  1423               	andwf	(___flmul@grs+2)^0,w,c
  6027  00209C  6E1E               	movwf	(??___flmul+2)^0,c
  6028  00209E  0E7F               	movlw	127
  6029  0020A0  1424               	andwf	(___flmul@grs+3)^0,w,c
  6030  0020A2  6E1F               	movwf	(??___flmul+3)^0,c
  6031  0020A4  501C               	movf	??___flmul^0,w,c
  6032  0020A6  101D               	iorwf	(??___flmul+1)^0,w,c
  6033  0020A8  101E               	iorwf	(??___flmul+2)^0,w,c
  6034  0020AA  101F               	iorwf	(??___flmul+3)^0,w,c
  6035  0020AC  B4D8               	btfsc	status,2,c
  6036  0020AE  EF5B  F010         	goto	u3251
  6037  0020B2  EF5D  F010         	goto	u3250
  6038  0020B6                     u3251:
  6039  0020B6  EF61  F010         	goto	l707
  6040  0020BA                     u3250:
  6041  0020BA                     l3007:
  6042  0020BA  0E01               	movlw	1
  6043  0020BC  6E25               	movwf	___flmul@aexp^0,c
  6044  0020BE  EF6A  F010         	goto	l706
  6045  0020C2                     l707:
  6046  0020C2  A027               	btfss	___flmul@prod^0,0,c
  6047  0020C4  EF66  F010         	goto	u3261
  6048  0020C8  EF68  F010         	goto	u3260
  6049  0020CC                     u3261:
  6050  0020CC  EF6A  F010         	goto	l706
  6051  0020D0                     u3260:
  6052  0020D0  EF5D  F010         	goto	l3007
  6053  0020D4                     l706:
  6054  0020D4  5025               	movf	___flmul@aexp^0,w,c
  6055  0020D6  B4D8               	btfsc	status,2,c
  6056  0020D8  EF70  F010         	goto	u3271
  6057  0020DC  EF72  F010         	goto	u3270
  6058  0020E0                     u3271:
  6059  0020E0  EF96  F010         	goto	l3019
  6060  0020E4                     u3270:
  6061  0020E4  0E01               	movlw	1
  6062  0020E6  2627               	addwf	___flmul@prod^0,f,c
  6063  0020E8  0E00               	movlw	0
  6064  0020EA  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6065  0020EC  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6066  0020EE  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6067  0020F0  A02A               	btfss	(___flmul@prod+3)^0,0,c
  6068  0020F2  EF7D  F010         	goto	u3281
  6069  0020F6  EF7F  F010         	goto	u3280
  6070  0020FA                     u3281:
  6071  0020FA  EF96  F010         	goto	l3019
  6072  0020FE                     u3280:
  6073  0020FE  C027  F01C         	movff	___flmul@prod,??___flmul
  6074  002102  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6075  002106  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6076  00210A  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6077  00210E  341F               	rlcf	(??___flmul+3)^0,w,c
  6078  002110  321F               	rrcf	(??___flmul+3)^0,f,c
  6079  002112  321E               	rrcf	(??___flmul+2)^0,f,c
  6080  002114  321D               	rrcf	(??___flmul+1)^0,f,c
  6081  002116  321C               	rrcf	??___flmul^0,f,c
  6082  002118  C01C  F027         	movff	??___flmul,___flmul@prod
  6083  00211C  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6084  002120  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6085  002124  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6086  002128  4A2B               	infsnz	___flmul@temp^0,f,c
  6087  00212A  2A2C               	incf	(___flmul@temp+1)^0,f,c
  6088  00212C                     l3019:
  6089  00212C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6090  00212E  EFA1  F010         	goto	u3291
  6091  002132  502C               	movf	(___flmul@temp+1)^0,w,c
  6092  002134  E108               	bnz	u3290
  6093  002136  282B               	incf	___flmul@temp^0,w,c
  6094  002138  A0D8               	btfss	status,0,c
  6095  00213A  EFA1  F010         	goto	u3291
  6096  00213E  EFA3  F010         	goto	u3290
  6097  002142                     u3291:
  6098  002142  EFAD  F010         	goto	l3023
  6099  002146                     u3290:
  6100  002146  0E00               	movlw	0
  6101  002148  6E27               	movwf	___flmul@prod^0,c
  6102  00214A  0E00               	movlw	0
  6103  00214C  6E28               	movwf	(___flmul@prod+1)^0,c
  6104  00214E  0E80               	movlw	128
  6105  002150  6E29               	movwf	(___flmul@prod+2)^0,c
  6106  002152  0E7F               	movlw	127
  6107  002154  6E2A               	movwf	(___flmul@prod+3)^0,c
  6108  002156  EFDB  F010         	goto	l3035
  6109  00215A                     l3023:
  6110  00215A  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6111  00215C  EFBA  F010         	goto	u3300
  6112  002160  502C               	movf	(___flmul@temp+1)^0,w,c
  6113  002162  E106               	bnz	u3301
  6114  002164  042B               	decf	___flmul@temp^0,w,c
  6115  002166  B0D8               	btfsc	status,0,c
  6116  002168  EFB8  F010         	goto	u3301
  6117  00216C  EFBA  F010         	goto	u3300
  6118  002170                     u3301:
  6119  002170  EFC6  F010         	goto	l714
  6120  002174                     u3300:
  6121  002174  0E00               	movlw	0
  6122  002176  6E27               	movwf	___flmul@prod^0,c
  6123  002178  0E00               	movlw	0
  6124  00217A  6E28               	movwf	(___flmul@prod+1)^0,c
  6125  00217C  0E00               	movlw	0
  6126  00217E  6E29               	movwf	(___flmul@prod+2)^0,c
  6127  002180  0E00               	movlw	0
  6128  002182  6E2A               	movwf	(___flmul@prod+3)^0,c
  6129  002184  0E00               	movlw	0
  6130  002186  6E20               	movwf	___flmul@sign^0,c
  6131  002188  EFDB  F010         	goto	l3035
  6132  00218C                     l714:
  6133  00218C  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6134  002190  0EFF               	movlw	255
  6135  002192  1627               	andwf	___flmul@prod^0,f,c
  6136  002194  0EFF               	movlw	255
  6137  002196  1628               	andwf	(___flmul@prod+1)^0,f,c
  6138  002198  0E7F               	movlw	127
  6139  00219A  1629               	andwf	(___flmul@prod+2)^0,f,c
  6140  00219C  0E00               	movlw	0
  6141  00219E  162A               	andwf	(___flmul@prod+3)^0,f,c
  6142  0021A0  A026               	btfss	___flmul@bexp^0,0,c
  6143  0021A2  EFD5  F010         	goto	u3311
  6144  0021A6  EFD7  F010         	goto	u3310
  6145  0021AA                     u3311:
  6146  0021AA  EFD8  F010         	goto	l3033
  6147  0021AE                     u3310:
  6148  0021AE  8E29               	bsf	(___flmul@prod+2)^0,7,c
  6149  0021B0                     l3033:
  6150  0021B0  90D8               	bcf	status,0,c
  6151  0021B2  3026               	rrcf	___flmul@bexp^0,w,c
  6152  0021B4  6E2A               	movwf	(___flmul@prod+3)^0,c
  6153  0021B6                     l3035:
  6154  0021B6  5020               	movf	___flmul@sign^0,w,c
  6155  0021B8  122A               	iorwf	(___flmul@prod+3)^0,f,c
  6156  0021BA  C027  F014         	movff	___flmul@prod,?___flmul
  6157  0021BE  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6158  0021C2  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6159  0021C6  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6160  0021CA                     l701:
  6161  0021CA  0012               	return		;funcret
  6162  0021CC                     __end_of___flmul:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function ___flge *****************
  6166 ;; Defined at:
  6167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  ff1             4   44[COMRAM] unsigned char 
  6170 ;;  ff2             4   48[COMRAM] unsigned char 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         8       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6185 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:       12 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; This function calls:
  6189 ;;		Nothing
  6190 ;; This function is called by:
  6191 ;;		_efgtoa
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text21
  6196  002BC2                     __ptext21:
  6197                           	callstack 0
  6198  002BC2                     ___flge:
  6199                           	callstack 26
  6200  002BC2  0E00               	movlw	0
  6201  002BC4  142D               	andwf	___flge@ff1^0,w,c
  6202  002BC6  6E35               	movwf	??___flge^0,c
  6203  002BC8  0E00               	movlw	0
  6204  002BCA  142E               	andwf	(___flge@ff1+1)^0,w,c
  6205  002BCC  6E36               	movwf	(??___flge+1)^0,c
  6206  002BCE  0E80               	movlw	128
  6207  002BD0  142F               	andwf	(___flge@ff1+2)^0,w,c
  6208  002BD2  6E37               	movwf	(??___flge+2)^0,c
  6209  002BD4  0E7F               	movlw	127
  6210  002BD6  1430               	andwf	(___flge@ff1+3)^0,w,c
  6211  002BD8  6E38               	movwf	(??___flge+3)^0,c
  6212  002BDA  5035               	movf	??___flge^0,w,c
  6213  002BDC  1036               	iorwf	(??___flge+1)^0,w,c
  6214  002BDE  1037               	iorwf	(??___flge+2)^0,w,c
  6215  002BE0  1038               	iorwf	(??___flge+3)^0,w,c
  6216  002BE2  A4D8               	btfss	status,2,c
  6217  002BE4  EFF6  F015         	goto	u3471
  6218  002BE8  EFF8  F015         	goto	u3470
  6219  002BEC                     u3471:
  6220  002BEC  EF00  F016         	goto	l3147
  6221  002BF0                     u3470:
  6222  002BF0  0E00               	movlw	0
  6223  002BF2  6E2D               	movwf	___flge@ff1^0,c
  6224  002BF4  0E00               	movlw	0
  6225  002BF6  6E2E               	movwf	(___flge@ff1+1)^0,c
  6226  002BF8  0E00               	movlw	0
  6227  002BFA  6E2F               	movwf	(___flge@ff1+2)^0,c
  6228  002BFC  0E00               	movlw	0
  6229  002BFE  6E30               	movwf	(___flge@ff1+3)^0,c
  6230  002C00                     l3147:
  6231  002C00  0E00               	movlw	0
  6232  002C02  1431               	andwf	___flge@ff2^0,w,c
  6233  002C04  6E35               	movwf	??___flge^0,c
  6234  002C06  0E00               	movlw	0
  6235  002C08  1432               	andwf	(___flge@ff2+1)^0,w,c
  6236  002C0A  6E36               	movwf	(??___flge+1)^0,c
  6237  002C0C  0E80               	movlw	128
  6238  002C0E  1433               	andwf	(___flge@ff2+2)^0,w,c
  6239  002C10  6E37               	movwf	(??___flge+2)^0,c
  6240  002C12  0E7F               	movlw	127
  6241  002C14  1434               	andwf	(___flge@ff2+3)^0,w,c
  6242  002C16  6E38               	movwf	(??___flge+3)^0,c
  6243  002C18  5035               	movf	??___flge^0,w,c
  6244  002C1A  1036               	iorwf	(??___flge+1)^0,w,c
  6245  002C1C  1037               	iorwf	(??___flge+2)^0,w,c
  6246  002C1E  1038               	iorwf	(??___flge+3)^0,w,c
  6247  002C20  A4D8               	btfss	status,2,c
  6248  002C22  EF15  F016         	goto	u3481
  6249  002C26  EF17  F016         	goto	u3480
  6250  002C2A                     u3481:
  6251  002C2A  EF1F  F016         	goto	l3151
  6252  002C2E                     u3480:
  6253  002C2E  0E00               	movlw	0
  6254  002C30  6E31               	movwf	___flge@ff2^0,c
  6255  002C32  0E00               	movlw	0
  6256  002C34  6E32               	movwf	(___flge@ff2+1)^0,c
  6257  002C36  0E00               	movlw	0
  6258  002C38  6E33               	movwf	(___flge@ff2+2)^0,c
  6259  002C3A  0E00               	movlw	0
  6260  002C3C  6E34               	movwf	(___flge@ff2+3)^0,c
  6261  002C3E                     l3151:
  6262  002C3E  AE30               	btfss	(___flge@ff1+3)^0,7,c
  6263  002C40  EF24  F016         	goto	u3491
  6264  002C44  EF26  F016         	goto	u3490
  6265  002C48                     u3491:
  6266  002C48  EF2F  F016         	goto	l3155
  6267  002C4C                     u3490:
  6268  002C4C  6C2D               	negf	___flge@ff1^0,c
  6269  002C4E  1E2E               	comf	(___flge@ff1+1)^0,f,c
  6270  002C50  B0D8               	btfsc	status,0,c
  6271  002C52  2A2E               	incf	(___flge@ff1+1)^0,f,c
  6272  002C54  1E2F               	comf	(___flge@ff1+2)^0,f,c
  6273  002C56  B0D8               	btfsc	status,0,c
  6274  002C58  2A2F               	incf	(___flge@ff1+2)^0,f,c
  6275  002C5A  0E80               	movlw	128
  6276  002C5C  5630               	subfwb	(___flge@ff1+3)^0,f,c
  6277  002C5E                     l3155:
  6278  002C5E  AE34               	btfss	(___flge@ff2+3)^0,7,c
  6279  002C60  EF34  F016         	goto	u3501
  6280  002C64  EF36  F016         	goto	u3500
  6281  002C68                     u3501:
  6282  002C68  EF3F  F016         	goto	l348
  6283  002C6C                     u3500:
  6284  002C6C  6C31               	negf	___flge@ff2^0,c
  6285  002C6E  1E32               	comf	(___flge@ff2+1)^0,f,c
  6286  002C70  B0D8               	btfsc	status,0,c
  6287  002C72  2A32               	incf	(___flge@ff2+1)^0,f,c
  6288  002C74  1E33               	comf	(___flge@ff2+2)^0,f,c
  6289  002C76  B0D8               	btfsc	status,0,c
  6290  002C78  2A33               	incf	(___flge@ff2+2)^0,f,c
  6291  002C7A  0E80               	movlw	128
  6292  002C7C  5634               	subfwb	(___flge@ff2+3)^0,f,c
  6293  002C7E                     l348:
  6294  002C7E  0E00               	movlw	0
  6295  002C80  1A2D               	xorwf	___flge@ff1^0,f,c
  6296  002C82  0E00               	movlw	0
  6297  002C84  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  6298  002C86  0E00               	movlw	0
  6299  002C88  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  6300  002C8A  0E80               	movlw	128
  6301  002C8C  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  6302  002C8E  0E00               	movlw	0
  6303  002C90  1A31               	xorwf	___flge@ff2^0,f,c
  6304  002C92  0E00               	movlw	0
  6305  002C94  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  6306  002C96  0E00               	movlw	0
  6307  002C98  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  6308  002C9A  0E80               	movlw	128
  6309  002C9C  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  6310  002C9E  5031               	movf	___flge@ff2^0,w,c
  6311  002CA0  5C2D               	subwf	___flge@ff1^0,w,c
  6312  002CA2  5032               	movf	(___flge@ff2+1)^0,w,c
  6313  002CA4  582E               	subwfb	(___flge@ff1+1)^0,w,c
  6314  002CA6  5033               	movf	(___flge@ff2+2)^0,w,c
  6315  002CA8  582F               	subwfb	(___flge@ff1+2)^0,w,c
  6316  002CAA  5034               	movf	(___flge@ff2+3)^0,w,c
  6317  002CAC  5830               	subwfb	(___flge@ff1+3)^0,w,c
  6318  002CAE  B0D8               	btfsc	status,0,c
  6319  002CB0  EF5C  F016         	goto	u3511
  6320  002CB4  EF5E  F016         	goto	u3510
  6321  002CB8                     u3511:
  6322  002CB8  EF61  F016         	goto	l3161
  6323  002CBC                     u3510:
  6324  002CBC  90D8               	bcf	status,0,c
  6325  002CBE  EF62  F016         	goto	l353
  6326  002CC2                     l3161:
  6327  002CC2  80D8               	bsf	status,0,c
  6328  002CC4                     l353:
  6329  002CC4  0012               	return		;funcret
  6330  002CC6                     __end_of___flge:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function ___fleq *****************
  6334 ;; Defined at:
  6335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  ff1             4    0[COMRAM] unsigned char 
  6338 ;;  ff2             4    4[COMRAM] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6350 ;;      Params:         8       0       0       0       0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6352 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6353 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6354 ;;Total ram usage:       12 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_efgtoa
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text22
  6364  003268                     __ptext22:
  6365                           	callstack 0
  6366  003268                     ___fleq:
  6367                           	callstack 26
  6368  003268  0E00               	movlw	0
  6369  00326A  1401               	andwf	___fleq@ff1^0,w,c
  6370  00326C  6E09               	movwf	??___fleq^0,c
  6371  00326E  0E00               	movlw	0
  6372  003270  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6373  003272  6E0A               	movwf	(??___fleq+1)^0,c
  6374  003274  0E80               	movlw	128
  6375  003276  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6376  003278  6E0B               	movwf	(??___fleq+2)^0,c
  6377  00327A  0E7F               	movlw	127
  6378  00327C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6379  00327E  6E0C               	movwf	(??___fleq+3)^0,c
  6380  003280  5009               	movf	??___fleq^0,w,c
  6381  003282  100A               	iorwf	(??___fleq+1)^0,w,c
  6382  003284  100B               	iorwf	(??___fleq+2)^0,w,c
  6383  003286  100C               	iorwf	(??___fleq+3)^0,w,c
  6384  003288  A4D8               	btfss	status,2,c
  6385  00328A  EF49  F019         	goto	u3441
  6386  00328E  EF4B  F019         	goto	u3440
  6387  003292                     u3441:
  6388  003292  EF53  F019         	goto	l3131
  6389  003296                     u3440:
  6390  003296  0E00               	movlw	0
  6391  003298  6E01               	movwf	___fleq@ff1^0,c
  6392  00329A  0E00               	movlw	0
  6393  00329C  6E02               	movwf	(___fleq@ff1+1)^0,c
  6394  00329E  0E00               	movlw	0
  6395  0032A0  6E03               	movwf	(___fleq@ff1+2)^0,c
  6396  0032A2  0E00               	movlw	0
  6397  0032A4  6E04               	movwf	(___fleq@ff1+3)^0,c
  6398  0032A6                     l3131:
  6399  0032A6  0E00               	movlw	0
  6400  0032A8  1405               	andwf	___fleq@ff2^0,w,c
  6401  0032AA  6E09               	movwf	??___fleq^0,c
  6402  0032AC  0E00               	movlw	0
  6403  0032AE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6404  0032B0  6E0A               	movwf	(??___fleq+1)^0,c
  6405  0032B2  0E80               	movlw	128
  6406  0032B4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6407  0032B6  6E0B               	movwf	(??___fleq+2)^0,c
  6408  0032B8  0E7F               	movlw	127
  6409  0032BA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6410  0032BC  6E0C               	movwf	(??___fleq+3)^0,c
  6411  0032BE  5009               	movf	??___fleq^0,w,c
  6412  0032C0  100A               	iorwf	(??___fleq+1)^0,w,c
  6413  0032C2  100B               	iorwf	(??___fleq+2)^0,w,c
  6414  0032C4  100C               	iorwf	(??___fleq+3)^0,w,c
  6415  0032C6  A4D8               	btfss	status,2,c
  6416  0032C8  EF68  F019         	goto	u3451
  6417  0032CC  EF6A  F019         	goto	u3450
  6418  0032D0                     u3451:
  6419  0032D0  EF72  F019         	goto	l3135
  6420  0032D4                     u3450:
  6421  0032D4  0E00               	movlw	0
  6422  0032D6  6E05               	movwf	___fleq@ff2^0,c
  6423  0032D8  0E00               	movlw	0
  6424  0032DA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6425  0032DC  0E00               	movlw	0
  6426  0032DE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6427  0032E0  0E00               	movlw	0
  6428  0032E2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6429  0032E4                     l3135:
  6430  0032E4  5005               	movf	___fleq@ff2^0,w,c
  6431  0032E6  1801               	xorwf	___fleq@ff1^0,w,c
  6432  0032E8  E10F               	bnz	u3460
  6433  0032EA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6434  0032EC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6435  0032EE  E10C               	bnz	u3460
  6436  0032F0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6437  0032F2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6438  0032F4  E109               	bnz	u3460
  6439  0032F6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6440  0032F8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6441  0032FA  B4D8               	btfsc	status,2,c
  6442  0032FC  EF82  F019         	goto	u3461
  6443  003300  EF84  F019         	goto	u3460
  6444  003304                     u3461:
  6445  003304  EF87  F019         	goto	l3139
  6446  003308                     u3460:
  6447  003308  90D8               	bcf	status,0,c
  6448  00330A  EF88  F019         	goto	l342
  6449  00330E                     l3139:
  6450  00330E  80D8               	bsf	status,0,c
  6451  003310                     l342:
  6452  003310  0012               	return		;funcret
  6453  003312                     __end_of___fleq:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function ___fldiv *****************
  6457 ;; Defined at:
  6458 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  b               4    0[COMRAM] unsigned char 
  6461 ;;  a               4    4[COMRAM] unsigned char 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  grs             4   19[COMRAM] unsigned long 
  6464 ;;  rem             4   12[COMRAM] unsigned long 
  6465 ;;  new_exp         2   17[COMRAM] short 
  6466 ;;  aexp            1   24[COMRAM] unsigned char 
  6467 ;;  bexp            1   23[COMRAM] unsigned char 
  6468 ;;  sign            1   16[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  4    0[COMRAM] unsigned char 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6478 ;;      Params:         8       0       0       0       0       0       0       0       0
  6479 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6480 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6481 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6482 ;;Total ram usage:       25 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_efgtoa
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text23
  6492  0021CC                     __ptext23:
  6493                           	callstack 0
  6494  0021CC                     ___fldiv:
  6495                           	callstack 26
  6496  0021CC  5004               	movf	(___fldiv@b+3)^0,w,c
  6497  0021CE  0B80               	andlw	128
  6498  0021D0  6E11               	movwf	___fldiv@sign^0,c
  6499  0021D2  5004               	movf	(___fldiv@b+3)^0,w,c
  6500  0021D4  2404               	addwf	(___fldiv@b+3)^0,w,c
  6501  0021D6  6E18               	movwf	___fldiv@bexp^0,c
  6502  0021D8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6503  0021DA  EFF1  F010         	goto	u2901
  6504  0021DE  EFF3  F010         	goto	u2900
  6505  0021E2                     u2901:
  6506  0021E2  EFF4  F010         	goto	l2779
  6507  0021E6                     u2900:
  6508  0021E6  8018               	bsf	___fldiv@bexp^0,0,c
  6509  0021E8                     l2779:
  6510  0021E8  5018               	movf	___fldiv@bexp^0,w,c
  6511  0021EA  B4D8               	btfsc	status,2,c
  6512  0021EC  EFFA  F010         	goto	u2911
  6513  0021F0  EFFC  F010         	goto	u2910
  6514  0021F4                     u2911:
  6515  0021F4  EF11  F011         	goto	l2789
  6516  0021F8                     u2910:
  6517  0021F8  2818               	incf	___fldiv@bexp^0,w,c
  6518  0021FA  A4D8               	btfss	status,2,c
  6519  0021FC  EF02  F011         	goto	u2921
  6520  002200  EF04  F011         	goto	u2920
  6521  002204                     u2921:
  6522  002204  EF0C  F011         	goto	l2785
  6523  002208                     u2920:
  6524  002208  0E00               	movlw	0
  6525  00220A  6E01               	movwf	___fldiv@b^0,c
  6526  00220C  0E00               	movlw	0
  6527  00220E  6E02               	movwf	(___fldiv@b+1)^0,c
  6528  002210  0E00               	movlw	0
  6529  002212  6E03               	movwf	(___fldiv@b+2)^0,c
  6530  002214  0E00               	movlw	0
  6531  002216  6E04               	movwf	(___fldiv@b+3)^0,c
  6532  002218                     l2785:
  6533  002218  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6534  00221A  0E00               	movlw	0
  6535  00221C  6E04               	movwf	(___fldiv@b+3)^0,c
  6536  00221E  EF19  F011         	goto	l2791
  6537  002222                     l2789:
  6538  002222  0E00               	movlw	0
  6539  002224  6E01               	movwf	___fldiv@b^0,c
  6540  002226  0E00               	movlw	0
  6541  002228  6E02               	movwf	(___fldiv@b+1)^0,c
  6542  00222A  0E00               	movlw	0
  6543  00222C  6E03               	movwf	(___fldiv@b+2)^0,c
  6544  00222E  0E00               	movlw	0
  6545  002230  6E04               	movwf	(___fldiv@b+3)^0,c
  6546  002232                     l2791:
  6547  002232  5008               	movf	(___fldiv@a+3)^0,w,c
  6548  002234  0B80               	andlw	128
  6549  002236  1A11               	xorwf	___fldiv@sign^0,f,c
  6550  002238  5008               	movf	(___fldiv@a+3)^0,w,c
  6551  00223A  2408               	addwf	(___fldiv@a+3)^0,w,c
  6552  00223C  6E19               	movwf	___fldiv@aexp^0,c
  6553  00223E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6554  002240  EF24  F011         	goto	u2931
  6555  002244  EF26  F011         	goto	u2930
  6556  002248                     u2931:
  6557  002248  EF27  F011         	goto	l2799
  6558  00224C                     u2930:
  6559  00224C  8019               	bsf	___fldiv@aexp^0,0,c
  6560  00224E                     l2799:
  6561  00224E  5019               	movf	___fldiv@aexp^0,w,c
  6562  002250  B4D8               	btfsc	status,2,c
  6563  002252  EF2D  F011         	goto	u2941
  6564  002256  EF2F  F011         	goto	u2940
  6565  00225A                     u2941:
  6566  00225A  EF44  F011         	goto	l2809
  6567  00225E                     u2940:
  6568  00225E  2819               	incf	___fldiv@aexp^0,w,c
  6569  002260  A4D8               	btfss	status,2,c
  6570  002262  EF35  F011         	goto	u2951
  6571  002266  EF37  F011         	goto	u2950
  6572  00226A                     u2951:
  6573  00226A  EF3F  F011         	goto	l2805
  6574  00226E                     u2950:
  6575  00226E  0E00               	movlw	0
  6576  002270  6E05               	movwf	___fldiv@a^0,c
  6577  002272  0E00               	movlw	0
  6578  002274  6E06               	movwf	(___fldiv@a+1)^0,c
  6579  002276  0E00               	movlw	0
  6580  002278  6E07               	movwf	(___fldiv@a+2)^0,c
  6581  00227A  0E00               	movlw	0
  6582  00227C  6E08               	movwf	(___fldiv@a+3)^0,c
  6583  00227E                     l2805:
  6584  00227E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6585  002280  0E00               	movlw	0
  6586  002282  6E08               	movwf	(___fldiv@a+3)^0,c
  6587  002284  EF4C  F011         	goto	l2811
  6588  002288                     l2809:
  6589  002288  0E00               	movlw	0
  6590  00228A  6E05               	movwf	___fldiv@a^0,c
  6591  00228C  0E00               	movlw	0
  6592  00228E  6E06               	movwf	(___fldiv@a+1)^0,c
  6593  002290  0E00               	movlw	0
  6594  002292  6E07               	movwf	(___fldiv@a+2)^0,c
  6595  002294  0E00               	movlw	0
  6596  002296  6E08               	movwf	(___fldiv@a+3)^0,c
  6597  002298                     l2811:
  6598  002298  5005               	movf	___fldiv@a^0,w,c
  6599  00229A  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6600  00229C  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6601  00229E  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6602  0022A0  A4D8               	btfss	status,2,c
  6603  0022A2  EF55  F011         	goto	u2961
  6604  0022A6  EF57  F011         	goto	u2960
  6605  0022AA                     u2961:
  6606  0022AA  EF6F  F011         	goto	l2823
  6607  0022AE                     u2960:
  6608  0022AE  0E00               	movlw	0
  6609  0022B0  6E01               	movwf	___fldiv@b^0,c
  6610  0022B2  0E00               	movlw	0
  6611  0022B4  6E02               	movwf	(___fldiv@b+1)^0,c
  6612  0022B6  0E00               	movlw	0
  6613  0022B8  6E03               	movwf	(___fldiv@b+2)^0,c
  6614  0022BA  0E00               	movlw	0
  6615  0022BC  6E04               	movwf	(___fldiv@b+3)^0,c
  6616  0022BE  0E80               	movlw	128
  6617  0022C0  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6618  0022C2  0E7F               	movlw	127
  6619  0022C4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6620  0022C6                     l2817:
  6621  0022C6  5011               	movf	___fldiv@sign^0,w,c
  6622  0022C8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6623  0022CA  C001  F001         	movff	___fldiv@b,?___fldiv
  6624  0022CE  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6625  0022D2  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6626  0022D6  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6627  0022DA  EFB2  F012         	goto	l665
  6628  0022DE                     l2823:
  6629  0022DE  5018               	movf	___fldiv@bexp^0,w,c
  6630  0022E0  A4D8               	btfss	status,2,c
  6631  0022E2  EF75  F011         	goto	u2971
  6632  0022E6  EF77  F011         	goto	u2970
  6633  0022EA                     u2971:
  6634  0022EA  EF81  F011         	goto	l2831
  6635  0022EE                     u2970:
  6636  0022EE  0E00               	movlw	0
  6637  0022F0  6E01               	movwf	?___fldiv^0,c
  6638  0022F2  0E00               	movlw	0
  6639  0022F4  6E02               	movwf	(?___fldiv+1)^0,c
  6640  0022F6  0E00               	movlw	0
  6641  0022F8  6E03               	movwf	(?___fldiv+2)^0,c
  6642  0022FA  0E00               	movlw	0
  6643  0022FC  6E04               	movwf	(?___fldiv+3)^0,c
  6644  0022FE  EFB2  F012         	goto	l665
  6645  002302                     l2831:
  6646  002302  5019               	movf	___fldiv@aexp^0,w,c
  6647  002304  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6648  002308  6A0A               	clrf	(??___fldiv+1)^0,c
  6649  00230A  5E09               	subwf	??___fldiv^0,f,c
  6650  00230C  0E00               	movlw	0
  6651  00230E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6652  002310  0E7F               	movlw	127
  6653  002312  2409               	addwf	??___fldiv^0,w,c
  6654  002314  6E12               	movwf	___fldiv@new_exp^0,c
  6655  002316  0E00               	movlw	0
  6656  002318  200A               	addwfc	(??___fldiv+1)^0,w,c
  6657  00231A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6658  00231C  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6659  002320  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6660  002324  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6661  002328  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6662  00232C  0E00               	movlw	0
  6663  00232E  6E01               	movwf	___fldiv@b^0,c
  6664  002330  0E00               	movlw	0
  6665  002332  6E02               	movwf	(___fldiv@b+1)^0,c
  6666  002334  0E00               	movlw	0
  6667  002336  6E03               	movwf	(___fldiv@b+2)^0,c
  6668  002338  0E00               	movlw	0
  6669  00233A  6E04               	movwf	(___fldiv@b+3)^0,c
  6670  00233C  0E00               	movlw	0
  6671  00233E  6E14               	movwf	___fldiv@grs^0,c
  6672  002340  0E00               	movlw	0
  6673  002342  6E15               	movwf	(___fldiv@grs+1)^0,c
  6674  002344  0E00               	movlw	0
  6675  002346  6E16               	movwf	(___fldiv@grs+2)^0,c
  6676  002348  0E00               	movlw	0
  6677  00234A  6E17               	movwf	(___fldiv@grs+3)^0,c
  6678  00234C  0E00               	movlw	0
  6679  00234E  6E19               	movwf	___fldiv@aexp^0,c
  6680  002350  EFE2  F011         	goto	l667
  6681  002354                     l2841:
  6682  002354  5019               	movf	___fldiv@aexp^0,w,c
  6683  002356  B4D8               	btfsc	status,2,c
  6684  002358  EFB0  F011         	goto	u2981
  6685  00235C  EFB2  F011         	goto	u2980
  6686  002360                     u2981:
  6687  002360  EFC9  F011         	goto	l2849
  6688  002364                     u2980:
  6689  002364  90D8               	bcf	status,0,c
  6690  002366  360D               	rlcf	___fldiv@rem^0,f,c
  6691  002368  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6692  00236A  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6693  00236C  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6694  00236E  90D8               	bcf	status,0,c
  6695  002370  3601               	rlcf	___fldiv@b^0,f,c
  6696  002372  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6697  002374  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6698  002376  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6699  002378  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6700  00237A  EFC1  F011         	goto	u2991
  6701  00237E  EFC3  F011         	goto	u2990
  6702  002382                     u2991:
  6703  002382  EFC4  F011         	goto	l670
  6704  002386                     u2990:
  6705  002386  8001               	bsf	___fldiv@b^0,0,c
  6706  002388                     l670:
  6707  002388  90D8               	bcf	status,0,c
  6708  00238A  3614               	rlcf	___fldiv@grs^0,f,c
  6709  00238C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6710  00238E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6711  002390  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6712  002392                     l2849:
  6713  002392  5005               	movf	___fldiv@a^0,w,c
  6714  002394  5C0D               	subwf	___fldiv@rem^0,w,c
  6715  002396  5006               	movf	(___fldiv@a+1)^0,w,c
  6716  002398  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6717  00239A  5007               	movf	(___fldiv@a+2)^0,w,c
  6718  00239C  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6719  00239E  5008               	movf	(___fldiv@a+3)^0,w,c
  6720  0023A0  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6721  0023A2  A0D8               	btfss	status,0,c
  6722  0023A4  EFD6  F011         	goto	u3001
  6723  0023A8  EFD8  F011         	goto	u3000
  6724  0023AC                     u3001:
  6725  0023AC  EFE1  F011         	goto	l2855
  6726  0023B0                     u3000:
  6727  0023B0  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6728  0023B2  5005               	movf	___fldiv@a^0,w,c
  6729  0023B4  5E0D               	subwf	___fldiv@rem^0,f,c
  6730  0023B6  5006               	movf	(___fldiv@a+1)^0,w,c
  6731  0023B8  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6732  0023BA  5007               	movf	(___fldiv@a+2)^0,w,c
  6733  0023BC  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6734  0023BE  5008               	movf	(___fldiv@a+3)^0,w,c
  6735  0023C0  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6736  0023C2                     l2855:
  6737  0023C2  2A19               	incf	___fldiv@aexp^0,f,c
  6738  0023C4                     l667:
  6739  0023C4  0E19               	movlw	25
  6740  0023C6  6419               	cpfsgt	___fldiv@aexp^0,c
  6741  0023C8  EFE8  F011         	goto	u3011
  6742  0023CC  EFEA  F011         	goto	u3010
  6743  0023D0                     u3011:
  6744  0023D0  EFAA  F011         	goto	l2841
  6745  0023D4                     u3010:
  6746  0023D4  500D               	movf	___fldiv@rem^0,w,c
  6747  0023D6  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6748  0023D8  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6749  0023DA  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6750  0023DC  B4D8               	btfsc	status,2,c
  6751  0023DE  EFF3  F011         	goto	u3021
  6752  0023E2  EFF5  F011         	goto	u3020
  6753  0023E6                     u3021:
  6754  0023E6  EF0D  F012         	goto	l2867
  6755  0023EA                     u3020:
  6756  0023EA  8014               	bsf	___fldiv@grs^0,0,c
  6757  0023EC  EF0D  F012         	goto	l2867
  6758  0023F0                     l2861:
  6759  0023F0  90D8               	bcf	status,0,c
  6760  0023F2  3601               	rlcf	___fldiv@b^0,f,c
  6761  0023F4  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6762  0023F6  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6763  0023F8  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6764  0023FA  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6765  0023FC  EF02  F012         	goto	u3031
  6766  002400  EF04  F012         	goto	u3030
  6767  002404                     u3031:
  6768  002404  EF05  F012         	goto	l676
  6769  002408                     u3030:
  6770  002408  8001               	bsf	___fldiv@b^0,0,c
  6771  00240A                     l676:
  6772  00240A  90D8               	bcf	status,0,c
  6773  00240C  3614               	rlcf	___fldiv@grs^0,f,c
  6774  00240E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6775  002410  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6776  002412  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6777  002414  0612               	decf	___fldiv@new_exp^0,f,c
  6778  002416  A0D8               	btfss	status,0,c
  6779  002418  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6780  00241A                     l2867:
  6781  00241A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6782  00241C  EF12  F012         	goto	u3041
  6783  002420  EF14  F012         	goto	u3040
  6784  002424                     u3041:
  6785  002424  EFF8  F011         	goto	l2861
  6786  002428                     u3040:
  6787  002428  0E00               	movlw	0
  6788  00242A  6E19               	movwf	___fldiv@aexp^0,c
  6789  00242C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6790  00242E  EF1B  F012         	goto	u3051
  6791  002432  EF1D  F012         	goto	u3050
  6792  002436                     u3051:
  6793  002436  EF41  F012         	goto	l678
  6794  00243A                     u3050:
  6795  00243A  0EFF               	movlw	255
  6796  00243C  1414               	andwf	___fldiv@grs^0,w,c
  6797  00243E  6E09               	movwf	??___fldiv^0,c
  6798  002440  0EFF               	movlw	255
  6799  002442  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6800  002444  6E0A               	movwf	(??___fldiv+1)^0,c
  6801  002446  0EFF               	movlw	255
  6802  002448  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6803  00244A  6E0B               	movwf	(??___fldiv+2)^0,c
  6804  00244C  0E7F               	movlw	127
  6805  00244E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6806  002450  6E0C               	movwf	(??___fldiv+3)^0,c
  6807  002452  5009               	movf	??___fldiv^0,w,c
  6808  002454  100A               	iorwf	(??___fldiv+1)^0,w,c
  6809  002456  100B               	iorwf	(??___fldiv+2)^0,w,c
  6810  002458  100C               	iorwf	(??___fldiv+3)^0,w,c
  6811  00245A  B4D8               	btfsc	status,2,c
  6812  00245C  EF32  F012         	goto	u3061
  6813  002460  EF34  F012         	goto	u3060
  6814  002464                     u3061:
  6815  002464  EF38  F012         	goto	l679
  6816  002468                     u3060:
  6817  002468                     l2875:
  6818  002468  0E01               	movlw	1
  6819  00246A  6E19               	movwf	___fldiv@aexp^0,c
  6820  00246C  EF41  F012         	goto	l678
  6821  002470                     l679:
  6822  002470  A001               	btfss	___fldiv@b^0,0,c
  6823  002472  EF3D  F012         	goto	u3071
  6824  002476  EF3F  F012         	goto	u3070
  6825  00247A                     u3071:
  6826  00247A  EF41  F012         	goto	l678
  6827  00247E                     u3070:
  6828  00247E  EF34  F012         	goto	l2875
  6829  002482                     l678:
  6830  002482  5019               	movf	___fldiv@aexp^0,w,c
  6831  002484  B4D8               	btfsc	status,2,c
  6832  002486  EF47  F012         	goto	u3081
  6833  00248A  EF49  F012         	goto	u3080
  6834  00248E                     u3081:
  6835  00248E  EF6D  F012         	goto	l2887
  6836  002492                     u3080:
  6837  002492  0E01               	movlw	1
  6838  002494  2601               	addwf	___fldiv@b^0,f,c
  6839  002496  0E00               	movlw	0
  6840  002498  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6841  00249A  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6842  00249C  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6843  00249E  A004               	btfss	(___fldiv@b+3)^0,0,c
  6844  0024A0  EF54  F012         	goto	u3091
  6845  0024A4  EF56  F012         	goto	u3090
  6846  0024A8                     u3091:
  6847  0024A8  EF6D  F012         	goto	l2887
  6848  0024AC                     u3090:
  6849  0024AC  C001  F009         	movff	___fldiv@b,??___fldiv
  6850  0024B0  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6851  0024B4  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6852  0024B8  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6853  0024BC  340C               	rlcf	(??___fldiv+3)^0,w,c
  6854  0024BE  320C               	rrcf	(??___fldiv+3)^0,f,c
  6855  0024C0  320B               	rrcf	(??___fldiv+2)^0,f,c
  6856  0024C2  320A               	rrcf	(??___fldiv+1)^0,f,c
  6857  0024C4  3209               	rrcf	??___fldiv^0,f,c
  6858  0024C6  C009  F001         	movff	??___fldiv,___fldiv@b
  6859  0024CA  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6860  0024CE  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6861  0024D2  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6862  0024D6  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6863  0024D8  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6864  0024DA                     l2887:
  6865  0024DA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6866  0024DC  EF78  F012         	goto	u3101
  6867  0024E0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6868  0024E2  E108               	bnz	u3100
  6869  0024E4  2812               	incf	___fldiv@new_exp^0,w,c
  6870  0024E6  A0D8               	btfss	status,0,c
  6871  0024E8  EF78  F012         	goto	u3101
  6872  0024EC  EF7A  F012         	goto	u3100
  6873  0024F0                     u3101:
  6874  0024F0  EF85  F012         	goto	l2891
  6875  0024F4                     u3100:
  6876  0024F4  0E00               	movlw	0
  6877  0024F6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6878  0024F8  6812               	setf	___fldiv@new_exp^0,c
  6879  0024FA  0E00               	movlw	0
  6880  0024FC  6E01               	movwf	___fldiv@b^0,c
  6881  0024FE  0E00               	movlw	0
  6882  002500  6E02               	movwf	(___fldiv@b+1)^0,c
  6883  002502  0E00               	movlw	0
  6884  002504  6E03               	movwf	(___fldiv@b+2)^0,c
  6885  002506  0E00               	movlw	0
  6886  002508  6E04               	movwf	(___fldiv@b+3)^0,c
  6887  00250A                     l2891:
  6888  00250A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6889  00250C  EF92  F012         	goto	u3110
  6890  002510  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6891  002512  E106               	bnz	u3111
  6892  002514  0412               	decf	___fldiv@new_exp^0,w,c
  6893  002516  B0D8               	btfsc	status,0,c
  6894  002518  EF90  F012         	goto	u3111
  6895  00251C  EF92  F012         	goto	u3110
  6896  002520                     u3111:
  6897  002520  EFA0  F012         	goto	l2895
  6898  002524                     u3110:
  6899  002524  0E00               	movlw	0
  6900  002526  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6901  002528  0E00               	movlw	0
  6902  00252A  6E12               	movwf	___fldiv@new_exp^0,c
  6903  00252C  0E00               	movlw	0
  6904  00252E  6E01               	movwf	___fldiv@b^0,c
  6905  002530  0E00               	movlw	0
  6906  002532  6E02               	movwf	(___fldiv@b+1)^0,c
  6907  002534  0E00               	movlw	0
  6908  002536  6E03               	movwf	(___fldiv@b+2)^0,c
  6909  002538  0E00               	movlw	0
  6910  00253A  6E04               	movwf	(___fldiv@b+3)^0,c
  6911  00253C  0E00               	movlw	0
  6912  00253E  6E11               	movwf	___fldiv@sign^0,c
  6913  002540                     l2895:
  6914  002540  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6915  002544  A018               	btfss	___fldiv@bexp^0,0,c
  6916  002546  EFA7  F012         	goto	u3121
  6917  00254A  EFA9  F012         	goto	u3120
  6918  00254E                     u3121:
  6919  00254E  EFAC  F012         	goto	l2901
  6920  002552                     u3120:
  6921  002552  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6922  002554  EFAD  F012         	goto	l2903
  6923  002558                     l2901:
  6924  002558  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6925  00255A                     l2903:
  6926  00255A  90D8               	bcf	status,0,c
  6927  00255C  3018               	rrcf	___fldiv@bexp^0,w,c
  6928  00255E  6E04               	movwf	(___fldiv@b+3)^0,c
  6929  002560  EF63  F011         	goto	l2817
  6930  002564                     l665:
  6931  002564  0012               	return		;funcret
  6932  002566                     __end_of___fldiv:
  6933                           	callstack 0
  6934                           
  6935 ;; *************** function ___awmod *****************
  6936 ;; Defined at:
  6937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  dividend        2    0[COMRAM] int 
  6940 ;;  divisor         2    2[COMRAM] int 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  sign            1    5[COMRAM] unsigned char 
  6943 ;;  counter         1    4[COMRAM] unsigned char 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  2    0[COMRAM] int 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6953 ;;      Params:         4       0       0       0       0       0       0       0       0
  6954 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6956 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6957 ;;Total ram usage:        6 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_efgtoa
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text24
  6967  0031B8                     __ptext24:
  6968                           	callstack 0
  6969  0031B8                     ___awmod:
  6970                           	callstack 26
  6971  0031B8  0E00               	movlw	0
  6972  0031BA  6E06               	movwf	___awmod@sign^0,c
  6973  0031BC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6974  0031BE  EFE5  F018         	goto	u3380
  6975  0031C2  EFE3  F018         	goto	u3381
  6976  0031C6                     u3381:
  6977  0031C6  EFEB  F018         	goto	l3099
  6978  0031CA                     u3380:
  6979  0031CA  6C01               	negf	___awmod@dividend^0,c
  6980  0031CC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6981  0031CE  B0D8               	btfsc	status,0,c
  6982  0031D0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6983  0031D2  0E01               	movlw	1
  6984  0031D4  6E06               	movwf	___awmod@sign^0,c
  6985  0031D6                     l3099:
  6986  0031D6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6987  0031D8  EFF2  F018         	goto	u3390
  6988  0031DC  EFF0  F018         	goto	u3391
  6989  0031E0                     u3391:
  6990  0031E0  EFF6  F018         	goto	l3103
  6991  0031E4                     u3390:
  6992  0031E4  6C03               	negf	___awmod@divisor^0,c
  6993  0031E6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6994  0031E8  B0D8               	btfsc	status,0,c
  6995  0031EA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6996  0031EC                     l3103:
  6997  0031EC  5003               	movf	___awmod@divisor^0,w,c
  6998  0031EE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6999  0031F0  B4D8               	btfsc	status,2,c
  7000  0031F2  EFFD  F018         	goto	u3401
  7001  0031F6  EFFF  F018         	goto	u3400
  7002  0031FA                     u3401:
  7003  0031FA  EF23  F019         	goto	l3119
  7004  0031FE                     u3400:
  7005  0031FE  0E01               	movlw	1
  7006  003200  6E05               	movwf	___awmod@counter^0,c
  7007  003202  EF07  F019         	goto	l3109
  7008  003206                     l3107:
  7009  003206  90D8               	bcf	status,0,c
  7010  003208  3603               	rlcf	___awmod@divisor^0,f,c
  7011  00320A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7012  00320C  2A05               	incf	___awmod@counter^0,f,c
  7013  00320E                     l3109:
  7014  00320E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7015  003210  EF0C  F019         	goto	u3411
  7016  003214  EF0E  F019         	goto	u3410
  7017  003218                     u3411:
  7018  003218  EF03  F019         	goto	l3107
  7019  00321C                     u3410:
  7020  00321C                     l3111:
  7021  00321C  5003               	movf	___awmod@divisor^0,w,c
  7022  00321E  5C01               	subwf	___awmod@dividend^0,w,c
  7023  003220  5004               	movf	(___awmod@divisor+1)^0,w,c
  7024  003222  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7025  003224  A0D8               	btfss	status,0,c
  7026  003226  EF17  F019         	goto	u3421
  7027  00322A  EF19  F019         	goto	u3420
  7028  00322E                     u3421:
  7029  00322E  EF1D  F019         	goto	l3115
  7030  003232                     u3420:
  7031  003232  5003               	movf	___awmod@divisor^0,w,c
  7032  003234  5E01               	subwf	___awmod@dividend^0,f,c
  7033  003236  5004               	movf	(___awmod@divisor+1)^0,w,c
  7034  003238  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7035  00323A                     l3115:
  7036  00323A  90D8               	bcf	status,0,c
  7037  00323C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7038  00323E  3203               	rrcf	___awmod@divisor^0,f,c
  7039  003240  2E05               	decfsz	___awmod@counter^0,f,c
  7040  003242  EF0E  F019         	goto	l3111
  7041  003246                     l3119:
  7042  003246  5006               	movf	___awmod@sign^0,w,c
  7043  003248  B4D8               	btfsc	status,2,c
  7044  00324A  EF29  F019         	goto	u3431
  7045  00324E  EF2B  F019         	goto	u3430
  7046  003252                     u3431:
  7047  003252  EF2F  F019         	goto	l3123
  7048  003256                     u3430:
  7049  003256  6C01               	negf	___awmod@dividend^0,c
  7050  003258  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7051  00325A  B0D8               	btfsc	status,0,c
  7052  00325C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7053  00325E                     l3123:
  7054  00325E  C001  F001         	movff	___awmod@dividend,?___awmod
  7055  003262  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7056  003266  0012               	return		;funcret
  7057  003268                     __end_of___awmod:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function ___awdiv *****************
  7061 ;; Defined at:
  7062 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  dividend        2    0[COMRAM] int 
  7065 ;;  divisor         2    2[COMRAM] int 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  quotient        2    6[COMRAM] int 
  7068 ;;  sign            1    5[COMRAM] unsigned char 
  7069 ;;  counter         1    4[COMRAM] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  2    0[COMRAM] int 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7079 ;;      Params:         4       0       0       0       0       0       0       0       0
  7080 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7082 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        8 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_efgtoa
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text25
  7093  0030F4                     __ptext25:
  7094                           	callstack 0
  7095  0030F4                     ___awdiv:
  7096                           	callstack 26
  7097  0030F4  0E00               	movlw	0
  7098  0030F6  6E06               	movwf	___awdiv@sign^0,c
  7099  0030F8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7100  0030FA  EF83  F018         	goto	u3320
  7101  0030FE  EF81  F018         	goto	u3321
  7102  003102                     u3321:
  7103  003102  EF89  F018         	goto	l3055
  7104  003106                     u3320:
  7105  003106  6C03               	negf	___awdiv@divisor^0,c
  7106  003108  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7107  00310A  B0D8               	btfsc	status,0,c
  7108  00310C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7109  00310E  0E01               	movlw	1
  7110  003110  6E06               	movwf	___awdiv@sign^0,c
  7111  003112                     l3055:
  7112  003112  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7113  003114  EF90  F018         	goto	u3330
  7114  003118  EF8E  F018         	goto	u3331
  7115  00311C                     u3331:
  7116  00311C  EF96  F018         	goto	l3061
  7117  003120                     u3330:
  7118  003120  6C01               	negf	___awdiv@dividend^0,c
  7119  003122  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7120  003124  B0D8               	btfsc	status,0,c
  7121  003126  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7122  003128  0E01               	movlw	1
  7123  00312A  1A06               	xorwf	___awdiv@sign^0,f,c
  7124  00312C                     l3061:
  7125  00312C  0E00               	movlw	0
  7126  00312E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7127  003130  0E00               	movlw	0
  7128  003132  6E07               	movwf	___awdiv@quotient^0,c
  7129  003134  5003               	movf	___awdiv@divisor^0,w,c
  7130  003136  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7131  003138  B4D8               	btfsc	status,2,c
  7132  00313A  EFA1  F018         	goto	u3341
  7133  00313E  EFA3  F018         	goto	u3340
  7134  003142                     u3341:
  7135  003142  EFCB  F018         	goto	l3083
  7136  003146                     u3340:
  7137  003146  0E01               	movlw	1
  7138  003148  6E05               	movwf	___awdiv@counter^0,c
  7139  00314A  EFAB  F018         	goto	l3069
  7140  00314E                     l3067:
  7141  00314E  90D8               	bcf	status,0,c
  7142  003150  3603               	rlcf	___awdiv@divisor^0,f,c
  7143  003152  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7144  003154  2A05               	incf	___awdiv@counter^0,f,c
  7145  003156                     l3069:
  7146  003156  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7147  003158  EFB0  F018         	goto	u3351
  7148  00315C  EFB2  F018         	goto	u3350
  7149  003160                     u3351:
  7150  003160  EFA7  F018         	goto	l3067
  7151  003164                     u3350:
  7152  003164                     l3071:
  7153  003164  90D8               	bcf	status,0,c
  7154  003166  3607               	rlcf	___awdiv@quotient^0,f,c
  7155  003168  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7156  00316A  5003               	movf	___awdiv@divisor^0,w,c
  7157  00316C  5C01               	subwf	___awdiv@dividend^0,w,c
  7158  00316E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7159  003170  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7160  003172  A0D8               	btfss	status,0,c
  7161  003174  EFBE  F018         	goto	u3361
  7162  003178  EFC0  F018         	goto	u3360
  7163  00317C                     u3361:
  7164  00317C  EFC5  F018         	goto	l3079
  7165  003180                     u3360:
  7166  003180  5003               	movf	___awdiv@divisor^0,w,c
  7167  003182  5E01               	subwf	___awdiv@dividend^0,f,c
  7168  003184  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7169  003186  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7170  003188  8007               	bsf	___awdiv@quotient^0,0,c
  7171  00318A                     l3079:
  7172  00318A  90D8               	bcf	status,0,c
  7173  00318C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7174  00318E  3203               	rrcf	___awdiv@divisor^0,f,c
  7175  003190  2E05               	decfsz	___awdiv@counter^0,f,c
  7176  003192  EFB2  F018         	goto	l3071
  7177  003196                     l3083:
  7178  003196  5006               	movf	___awdiv@sign^0,w,c
  7179  003198  B4D8               	btfsc	status,2,c
  7180  00319A  EFD1  F018         	goto	u3371
  7181  00319E  EFD3  F018         	goto	u3370
  7182  0031A2                     u3371:
  7183  0031A2  EFD7  F018         	goto	l3087
  7184  0031A6                     u3370:
  7185  0031A6  6C07               	negf	___awdiv@quotient^0,c
  7186  0031A8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7187  0031AA  B0D8               	btfsc	status,0,c
  7188  0031AC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7189  0031AE                     l3087:
  7190  0031AE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7191  0031B2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7192  0031B6  0012               	return		;funcret
  7193  0031B8                     __end_of___awdiv:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _atoi *****************
  7197 ;; Defined at:
  7198 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7201 ;;		 -> STR_2(7), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  n               2   20[COMRAM] int 
  7204 ;;  neg             2   13[COMRAM] int 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2    7[COMRAM] int 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7214 ;;      Params:         2       0       0       0       0       0       0       0       0
  7215 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7216 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7217 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7218 ;;Total ram usage:       15 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    1
  7221 ;; This function calls:
  7222 ;;		___wmul
  7223 ;;		_isdigit
  7224 ;;		_isspace
  7225 ;; This function is called by:
  7226 ;;		_vfpfcnvrt
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text26
  7231  00292C                     __ptext26:
  7232                           	callstack 0
  7233  00292C                     _atoi:
  7234                           	callstack 26
  7235  00292C  0E00               	movlw	0
  7236  00292E  6E16               	movwf	(atoi@n+1)^0,c
  7237  002930  0E00               	movlw	0
  7238  002932  6E15               	movwf	atoi@n^0,c
  7239  002934  0E00               	movlw	0
  7240  002936  6E0F               	movwf	(atoi@neg+1)^0,c
  7241  002938  0E00               	movlw	0
  7242  00293A  6E0E               	movwf	atoi@neg^0,c
  7243  00293C  EFA2  F014         	goto	l3631
  7244  002940                     l3629:
  7245  002940  4A08               	infsnz	atoi@s^0,f,c
  7246  002942  2A09               	incf	(atoi@s+1)^0,f,c
  7247  002944                     l3631:
  7248  002944  0E01               	movlw	1
  7249  002946  6E14               	movwf	_atoi$735^0,c
  7250  002948  C008  FFF6         	movff	atoi@s,tblptrl
  7251  00294C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7252  002950                     	if	0	;tblptru may be non-zero
  7253  002950                     	endif
  7254  002950                     	if	0	;tblptru may be non-zero
  7255  002950                     	endif
  7256  002950  0008               	tblrd		*
  7257  002952  50F5               	movf	tablat,w,c
  7258  002954  0A20               	xorlw	32
  7259  002956  B4D8               	btfsc	status,2,c
  7260  002958  EFB0  F014         	goto	u4441
  7261  00295C  EFB2  F014         	goto	u4440
  7262  002960                     u4441:
  7263  002960  EFCF  F014         	goto	l3639
  7264  002964                     u4440:
  7265  002964  0EF7               	movlw	247
  7266  002966  6E0A               	movwf	??_atoi^0,c
  7267  002968  0EFF               	movlw	255
  7268  00296A  6E0B               	movwf	(??_atoi+1)^0,c
  7269  00296C  C008  FFF6         	movff	atoi@s,tblptrl
  7270  002970  C009  FFF7         	movff	atoi@s+1,tblptrh
  7271  002974                     	if	0	;tblptru may be non-zero
  7272  002974                     	endif
  7273  002974                     	if	0	;tblptru may be non-zero
  7274  002974                     	endif
  7275  002974  0008               	tblrd		*
  7276  002976  50F5               	movf	tablat,w,c
  7277  002978  6E0C               	movwf	(??_atoi+2)^0,c
  7278  00297A  6A0D               	clrf	(??_atoi+3)^0,c
  7279  00297C  500A               	movf	??_atoi^0,w,c
  7280  00297E  260C               	addwf	(??_atoi+2)^0,f,c
  7281  002980  500B               	movf	(??_atoi+1)^0,w,c
  7282  002982  220D               	addwfc	(??_atoi+3)^0,f,c
  7283  002984  500D               	movf	(??_atoi+3)^0,w,c
  7284  002986  E109               	bnz	u4450
  7285  002988  0E05               	movlw	5
  7286  00298A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7287  00298C  A0D8               	btfss	status,0,c
  7288  00298E  EFCB  F014         	goto	u4451
  7289  002992  EFCD  F014         	goto	u4450
  7290  002996                     u4451:
  7291  002996  EFCF  F014         	goto	l3639
  7292  00299A                     u4450:
  7293  00299A  0E00               	movlw	0
  7294  00299C  6E14               	movwf	_atoi$735^0,c
  7295  00299E                     l3639:
  7296  00299E  C014  F010         	movff	_atoi$735,_atoi$734
  7297  0029A2  6A11               	clrf	(_atoi$734+1)^0,c
  7298  0029A4  5010               	movf	_atoi$734^0,w,c
  7299  0029A6  1011               	iorwf	(_atoi$734+1)^0,w,c
  7300  0029A8  A4D8               	btfss	status,2,c
  7301  0029AA  EFD9  F014         	goto	u4461
  7302  0029AE  EFDB  F014         	goto	u4460
  7303  0029B2                     u4461:
  7304  0029B2  EFA0  F014         	goto	l3629
  7305  0029B6                     u4460:
  7306  0029B6  EFE5  F014         	goto	l3649
  7307  0029BA                     l3645:
  7308  0029BA  0E00               	movlw	0
  7309  0029BC  6E0F               	movwf	(atoi@neg+1)^0,c
  7310  0029BE  0E01               	movlw	1
  7311  0029C0  6E0E               	movwf	atoi@neg^0,c
  7312  0029C2                     l3647:
  7313  0029C2  4A08               	infsnz	atoi@s^0,f,c
  7314  0029C4  2A09               	incf	(atoi@s+1)^0,f,c
  7315  0029C6  EF1A  F015         	goto	l3655
  7316  0029CA                     l3649:
  7317  0029CA  C008  FFF6         	movff	atoi@s,tblptrl
  7318  0029CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7319  0029D2                     	if	0	;tblptru may be non-zero
  7320  0029D2                     	endif
  7321  0029D2                     	if	0	;tblptru may be non-zero
  7322  0029D2                     	endif
  7323  0029D2  0008               	tblrd		*
  7324  0029D4  50F5               	movf	tablat,w,c
  7325  0029D6  6E0A               	movwf	??_atoi^0,c
  7326  0029D8  6A0B               	clrf	(??_atoi+1)^0,c
  7327                           
  7328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7329                           ; Switch size 1, requested type "simple"
  7330                           ; Number of cases is 1, Range of values is 0 to 0
  7331                           ; switch strategies available:
  7332                           ; Name         Instructions Cycles
  7333                           ; simple_byte            4     3 (average)
  7334                           ;	Chosen strategy is simple_byte
  7335  0029DA  500B               	movf	(??_atoi+1)^0,w,c
  7336  0029DC  0A00               	xorlw	0	; case 0
  7337  0029DE  B4D8               	btfsc	status,2,c
  7338  0029E0  EFF4  F014         	goto	l3993
  7339  0029E4  EF1A  F015         	goto	l3655
  7340  0029E8                     l3993:
  7341                           
  7342                           ; Switch size 1, requested type "simple"
  7343                           ; Number of cases is 2, Range of values is 43 to 45
  7344                           ; switch strategies available:
  7345                           ; Name         Instructions Cycles
  7346                           ; simple_byte            7     4 (average)
  7347                           ;	Chosen strategy is simple_byte
  7348  0029E8  500A               	movf	??_atoi^0,w,c
  7349  0029EA  0A2B               	xorlw	43	; case 43
  7350  0029EC  B4D8               	btfsc	status,2,c
  7351  0029EE  EFE1  F014         	goto	l3647
  7352  0029F2  0A06               	xorlw	6	; case 45
  7353  0029F4  B4D8               	btfsc	status,2,c
  7354  0029F6  EFDD  F014         	goto	l3645
  7355  0029FA  EF1A  F015         	goto	l3655
  7356  0029FE                     l3651:
  7357  0029FE  C015  F001         	movff	atoi@n,___wmul@multiplier
  7358  002A02  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7359  002A06  0E00               	movlw	0
  7360  002A08  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7361  002A0A  0E0A               	movlw	10
  7362  002A0C  6E03               	movwf	___wmul@multiplicand^0,c
  7363  002A0E  ECF2  F01B         	call	___wmul	;wreg free
  7364  002A12  C008  FFF6         	movff	atoi@s,tblptrl
  7365  002A16  C009  FFF7         	movff	atoi@s+1,tblptrh
  7366  002A1A                     	if	0	;tblptru may be non-zero
  7367  002A1A                     	endif
  7368  002A1A                     	if	0	;tblptru may be non-zero
  7369  002A1A                     	endif
  7370  002A1A  0008               	tblrd		*
  7371  002A1C  50F5               	movf	tablat,w,c
  7372  002A1E  5E01               	subwf	?___wmul^0,f,c
  7373  002A20  0E00               	movlw	0
  7374  002A22  5A02               	subwfb	(?___wmul+1)^0,f,c
  7375  002A24  0E30               	movlw	48
  7376  002A26  2401               	addwf	?___wmul^0,w,c
  7377  002A28  6E15               	movwf	atoi@n^0,c
  7378  002A2A  0E00               	movlw	0
  7379  002A2C  2002               	addwfc	(?___wmul+1)^0,w,c
  7380  002A2E  6E16               	movwf	(atoi@n+1)^0,c
  7381  002A30  EFE1  F014         	goto	l3647
  7382  002A34                     l3655:
  7383  002A34  0ED0               	movlw	208
  7384  002A36  6E0A               	movwf	??_atoi^0,c
  7385  002A38  0EFF               	movlw	255
  7386  002A3A  6E0B               	movwf	(??_atoi+1)^0,c
  7387  002A3C  C008  FFF6         	movff	atoi@s,tblptrl
  7388  002A40  C009  FFF7         	movff	atoi@s+1,tblptrh
  7389  002A44                     	if	0	;tblptru may be non-zero
  7390  002A44                     	endif
  7391  002A44                     	if	0	;tblptru may be non-zero
  7392  002A44                     	endif
  7393  002A44  0008               	tblrd		*
  7394  002A46  50F5               	movf	tablat,w,c
  7395  002A48  6E0C               	movwf	(??_atoi+2)^0,c
  7396  002A4A  6A0D               	clrf	(??_atoi+3)^0,c
  7397  002A4C  500A               	movf	??_atoi^0,w,c
  7398  002A4E  260C               	addwf	(??_atoi+2)^0,f,c
  7399  002A50  500B               	movf	(??_atoi+1)^0,w,c
  7400  002A52  220D               	addwfc	(??_atoi+3)^0,f,c
  7401  002A54  500D               	movf	(??_atoi+3)^0,w,c
  7402  002A56  E10A               	bnz	u4470
  7403  002A58  0E0A               	movlw	10
  7404  002A5A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7405  002A5C  A0D8               	btfss	status,0,c
  7406  002A5E  EF33  F015         	goto	u4471
  7407  002A62  EF36  F015         	goto	u4470
  7408  002A66                     u4471:
  7409  002A66  0E01               	movlw	1
  7410  002A68  EF37  F015         	goto	u4480
  7411  002A6C                     u4470:
  7412  002A6C  0E00               	movlw	0
  7413  002A6E                     u4480:
  7414  002A6E  6E12               	movwf	_atoi$736^0,c
  7415  002A70  6A13               	clrf	(_atoi$736+1)^0,c
  7416  002A72  5012               	movf	_atoi$736^0,w,c
  7417  002A74  1013               	iorwf	(_atoi$736+1)^0,w,c
  7418  002A76  A4D8               	btfss	status,2,c
  7419  002A78  EF40  F015         	goto	u4491
  7420  002A7C  EF42  F015         	goto	u4490
  7421  002A80                     u4491:
  7422  002A80  EFFF  F014         	goto	l3651
  7423  002A84                     u4490:
  7424  002A84  500E               	movf	atoi@neg^0,w,c
  7425  002A86  100F               	iorwf	(atoi@neg+1)^0,w,c
  7426  002A88  A4D8               	btfss	status,2,c
  7427  002A8A  EF49  F015         	goto	u4501
  7428  002A8E  EF4B  F015         	goto	u4500
  7429  002A92                     u4501:
  7430  002A92  EF59  F015         	goto	l970
  7431  002A96                     u4500:
  7432  002A96  C015  F00A         	movff	atoi@n,??_atoi
  7433  002A9A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7434  002A9E  1E0A               	comf	??_atoi^0,f,c
  7435  002AA0  1E0B               	comf	(??_atoi+1)^0,f,c
  7436  002AA2  4A0A               	infsnz	??_atoi^0,f,c
  7437  002AA4  2A0B               	incf	(??_atoi+1)^0,f,c
  7438  002AA6  C00A  F008         	movff	??_atoi,?_atoi
  7439  002AAA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7440  002AAE  EF5D  F015         	goto	l973
  7441  002AB2                     l970:
  7442  002AB2  C015  F008         	movff	atoi@n,?_atoi
  7443  002AB6  C016  F009         	movff	atoi@n+1,?_atoi+1
  7444  002ABA                     l973:
  7445  002ABA  0012               	return		;funcret
  7446  002ABC                     __end_of_atoi:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function _isspace *****************
  7450 ;; Defined at:
  7451 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  c               2    0[COMRAM] int 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  2    0[COMRAM] int 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7465 ;;      Params:         2       0       0       0       0       0       0       0       0
  7466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7467 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7468 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7469 ;;Total ram usage:        7 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_atoi
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text27
  7479  003536                     __ptext27:
  7480                           	callstack 0
  7481  003536                     _isspace:
  7482                           	callstack 26
  7483  003536  0E01               	movlw	1
  7484  003538  6E07               	movwf	_isspace$765^0,c
  7485  00353A  0E20               	movlw	32
  7486  00353C  1801               	xorwf	isspace@c^0,w,c
  7487  00353E  1002               	iorwf	(isspace@c+1)^0,w,c
  7488  003540  B4D8               	btfsc	status,2,c
  7489  003542  EFA5  F01A         	goto	u3881
  7490  003546  EFA7  F01A         	goto	u3880
  7491  00354A                     u3881:
  7492  00354A  EFC0  F01A         	goto	l3315
  7493  00354E                     u3880:
  7494  00354E  0EF7               	movlw	247
  7495  003550  6E03               	movwf	??_isspace^0,c
  7496  003552  0EFF               	movlw	255
  7497  003554  6E04               	movwf	(??_isspace+1)^0,c
  7498  003556  C001  F005         	movff	isspace@c,??_isspace+2
  7499  00355A  C002  F006         	movff	isspace@c+1,??_isspace+3
  7500  00355E  5003               	movf	??_isspace^0,w,c
  7501  003560  2605               	addwf	(??_isspace+2)^0,f,c
  7502  003562  5004               	movf	(??_isspace+1)^0,w,c
  7503  003564  2206               	addwfc	(??_isspace+3)^0,f,c
  7504  003566  5006               	movf	(??_isspace+3)^0,w,c
  7505  003568  E109               	bnz	u3890
  7506  00356A  0E05               	movlw	5
  7507  00356C  5C05               	subwf	(??_isspace+2)^0,w,c
  7508  00356E  A0D8               	btfss	status,0,c
  7509  003570  EFBC  F01A         	goto	u3891
  7510  003574  EFBE  F01A         	goto	u3890
  7511  003578                     u3891:
  7512  003578  EFC0  F01A         	goto	l3315
  7513  00357C                     u3890:
  7514  00357C  0E00               	movlw	0
  7515  00357E  6E07               	movwf	_isspace$765^0,c
  7516  003580                     l3315:
  7517  003580  C007  F001         	movff	_isspace$765,?_isspace
  7518  003584  6A02               	clrf	(?_isspace+1)^0,c
  7519  003586  0012               	return		;funcret
  7520  003588                     __end_of_isspace:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _isdigit *****************
  7524 ;; Defined at:
  7525 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  c               2    0[COMRAM] int 
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  2    0[COMRAM] int 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2, status,0
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7539 ;;      Params:         2       0       0       0       0       0       0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7541 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7542 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7543 ;;Total ram usage:        6 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; This function calls:
  7546 ;;		Nothing
  7547 ;; This function is called by:
  7548 ;;		_vfpfcnvrt
  7549 ;;		_atoi
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	text28
  7554  003714                     __ptext28:
  7555                           	callstack 0
  7556  003714                     _isdigit:
  7557                           	callstack 27
  7558  003714  0ED0               	movlw	208
  7559  003716  6E03               	movwf	??_isdigit^0,c
  7560  003718  0EFF               	movlw	255
  7561  00371A  6E04               	movwf	(??_isdigit+1)^0,c
  7562  00371C  C001  F005         	movff	isdigit@c,??_isdigit+2
  7563  003720  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7564  003724  5003               	movf	??_isdigit^0,w,c
  7565  003726  2605               	addwf	(??_isdigit+2)^0,f,c
  7566  003728  5004               	movf	(??_isdigit+1)^0,w,c
  7567  00372A  2206               	addwfc	(??_isdigit+3)^0,f,c
  7568  00372C  5006               	movf	(??_isdigit+3)^0,w,c
  7569  00372E  E10A               	bnz	u3860
  7570  003730  0E0A               	movlw	10
  7571  003732  5C05               	subwf	(??_isdigit+2)^0,w,c
  7572  003734  A0D8               	btfss	status,0,c
  7573  003736  EF9F  F01B         	goto	u3861
  7574  00373A  EFA2  F01B         	goto	u3860
  7575  00373E                     u3861:
  7576  00373E  0E01               	movlw	1
  7577  003740  EFA3  F01B         	goto	u3870
  7578  003744                     u3860:
  7579  003744  0E00               	movlw	0
  7580  003746                     u3870:
  7581  003746  6E01               	movwf	?_isdigit^0,c
  7582  003748  6A02               	clrf	(?_isdigit+1)^0,c
  7583  00374A  0012               	return		;funcret
  7584  00374C                     __end_of_isdigit:
  7585                           	callstack 0
  7586                           
  7587 ;; *************** function ___wmul *****************
  7588 ;; Defined at:
  7589 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  multiplier      2    0[COMRAM] unsigned int 
  7592 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  product         2    4[COMRAM] unsigned int 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  2    0[COMRAM] unsigned int 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0, prodl, prodh
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7604 ;;      Params:         4       0       0       0       0       0       0       0       0
  7605 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7607 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7608 ;;Total ram usage:        6 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_atoi
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text29
  7618  0037E4                     __ptext29:
  7619                           	callstack 0
  7620  0037E4                     ___wmul:
  7621                           	callstack 26
  7622  0037E4  5001               	movf	___wmul@multiplier^0,w,c
  7623  0037E6  0203               	mulwf	___wmul@multiplicand^0,c
  7624  0037E8  CFF3 F005          	movff	prodl,___wmul@product
  7625  0037EC  CFF4 F006          	movff	prodh,___wmul@product+1
  7626  0037F0  5001               	movf	___wmul@multiplier^0,w,c
  7627  0037F2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7628  0037F4  50F3               	movf	243,w,c
  7629  0037F6  2606               	addwf	(___wmul@product+1)^0,f,c
  7630  0037F8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7631  0037FA  0203               	mulwf	___wmul@multiplicand^0,c
  7632  0037FC  50F3               	movf	243,w,c
  7633  0037FE  2606               	addwf	(___wmul@product+1)^0,f,c
  7634  003800  C005  F001         	movff	___wmul@product,?___wmul
  7635  003804  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7636  003808  0012               	return		;funcret
  7637  00380A                     __end_of___wmul:
  7638                           	callstack 0
  7639                           
  7640 ;; *************** function ___xxtofl *****************
  7641 ;; Defined at:
  7642 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  sign            1    wreg     unsigned char 
  7645 ;;  val             4    5[COMRAM] long 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  sign            1   13[COMRAM] unsigned char 
  7648 ;;  arg             4   15[COMRAM] unsigned long 
  7649 ;;  exp             1   14[COMRAM] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  4    5[COMRAM] unsigned char 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7659 ;;      Params:         4       0       0       0       0       0       0       0       0
  7660 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7661 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7662 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7663 ;;Total ram usage:       14 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_main
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text30
  7673  002778                     __ptext30:
  7674                           	callstack 0
  7675  002778                     ___xxtofl:
  7676                           	callstack 30
  7677                           
  7678                           ;incstack = 0
  7679                           ;___xxtofl@sign stored from wreg
  7680  002778  6E0E               	movwf	___xxtofl@sign^0,c
  7681  00277A  500E               	movf	___xxtofl@sign^0,w,c
  7682  00277C  B4D8               	btfsc	status,2,c
  7683  00277E  EFC3  F013         	goto	u4751
  7684  002782  EFC5  F013         	goto	u4750
  7685  002786                     u4751:
  7686  002786  EFE7  F013         	goto	l738
  7687  00278A                     u4750:
  7688  00278A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7689  00278C  EFCC  F013         	goto	u4760
  7690  002790  EFCA  F013         	goto	u4761
  7691  002794                     u4761:
  7692  002794  EFE7  F013         	goto	l738
  7693  002798                     u4760:
  7694  002798  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7695  00279C  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7696  0027A0  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7697  0027A4  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7698  0027A8  1E0A               	comf	??___xxtofl^0,f,c
  7699  0027AA  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7700  0027AC  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7701  0027AE  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7702  0027B0  2A0A               	incf	??___xxtofl^0,f,c
  7703  0027B2  0E00               	movlw	0
  7704  0027B4  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7705  0027B6  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7706  0027B8  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7707  0027BA  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7708  0027BE  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7709  0027C2  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7710  0027C6  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7711  0027CA  EFEF  F013         	goto	l3889
  7712  0027CE                     l738:
  7713  0027CE  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7714  0027D2  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7715  0027D6  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7716  0027DA  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7717  0027DE                     l3889:
  7718  0027DE  5006               	movf	___xxtofl@val^0,w,c
  7719  0027E0  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7720  0027E2  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7721  0027E4  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7722  0027E6  A4D8               	btfss	status,2,c
  7723  0027E8  EFF8  F013         	goto	u4771
  7724  0027EC  EFFA  F013         	goto	u4770
  7725  0027F0                     u4771:
  7726  0027F0  EF04  F014         	goto	l3895
  7727  0027F4                     u4770:
  7728  0027F4  0E00               	movlw	0
  7729  0027F6  6E06               	movwf	?___xxtofl^0,c
  7730  0027F8  0E00               	movlw	0
  7731  0027FA  6E07               	movwf	(?___xxtofl+1)^0,c
  7732  0027FC  0E00               	movlw	0
  7733  0027FE  6E08               	movwf	(?___xxtofl+2)^0,c
  7734  002800  0E00               	movlw	0
  7735  002802  6E09               	movwf	(?___xxtofl+3)^0,c
  7736  002804  EF95  F014         	goto	l741
  7737  002808                     l3895:
  7738  002808  0E96               	movlw	150
  7739  00280A  6E0F               	movwf	___xxtofl@exp^0,c
  7740  00280C  EF0E  F014         	goto	l3899
  7741  002810                     l3897:
  7742  002810  2A0F               	incf	___xxtofl@exp^0,f,c
  7743  002812  90D8               	bcf	status,0,c
  7744  002814  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7745  002816  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7746  002818  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7747  00281A  3210               	rrcf	___xxtofl@arg^0,f,c
  7748  00281C                     l3899:
  7749  00281C  0E00               	movlw	0
  7750  00281E  1410               	andwf	___xxtofl@arg^0,w,c
  7751  002820  6E0A               	movwf	??___xxtofl^0,c
  7752  002822  0E00               	movlw	0
  7753  002824  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7754  002826  6E0B               	movwf	(??___xxtofl+1)^0,c
  7755  002828  0E00               	movlw	0
  7756  00282A  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7757  00282C  6E0C               	movwf	(??___xxtofl+2)^0,c
  7758  00282E  0EFE               	movlw	254
  7759  002830  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7760  002832  6E0D               	movwf	(??___xxtofl+3)^0,c
  7761  002834  500A               	movf	??___xxtofl^0,w,c
  7762  002836  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7763  002838  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7764  00283A  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7765  00283C  A4D8               	btfss	status,2,c
  7766  00283E  EF23  F014         	goto	u4781
  7767  002842  EF25  F014         	goto	u4780
  7768  002846                     u4781:
  7769  002846  EF08  F014         	goto	l3897
  7770  00284A                     u4780:
  7771  00284A  EF33  F014         	goto	l745
  7772  00284E                     l3901:
  7773  00284E  2A0F               	incf	___xxtofl@exp^0,f,c
  7774  002850  0E01               	movlw	1
  7775  002852  2610               	addwf	___xxtofl@arg^0,f,c
  7776  002854  0E00               	movlw	0
  7777  002856  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7778  002858  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7779  00285A  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7780  00285C  90D8               	bcf	status,0,c
  7781  00285E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7782  002860  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7783  002862  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7784  002864  3210               	rrcf	___xxtofl@arg^0,f,c
  7785  002866                     l745:
  7786  002866  0E00               	movlw	0
  7787  002868  1410               	andwf	___xxtofl@arg^0,w,c
  7788  00286A  6E0A               	movwf	??___xxtofl^0,c
  7789  00286C  0E00               	movlw	0
  7790  00286E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7791  002870  6E0B               	movwf	(??___xxtofl+1)^0,c
  7792  002872  0E00               	movlw	0
  7793  002874  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7794  002876  6E0C               	movwf	(??___xxtofl+2)^0,c
  7795  002878  0EFF               	movlw	255
  7796  00287A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7797  00287C  6E0D               	movwf	(??___xxtofl+3)^0,c
  7798  00287E  500A               	movf	??___xxtofl^0,w,c
  7799  002880  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7800  002882  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7801  002884  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7802  002886  A4D8               	btfss	status,2,c
  7803  002888  EF48  F014         	goto	u4791
  7804  00288C  EF4A  F014         	goto	u4790
  7805  002890                     u4791:
  7806  002890  EF27  F014         	goto	l3901
  7807  002894                     u4790:
  7808  002894  EF52  F014         	goto	l3909
  7809  002898                     l3907:
  7810  002898  060F               	decf	___xxtofl@exp^0,f,c
  7811  00289A  90D8               	bcf	status,0,c
  7812  00289C  3610               	rlcf	___xxtofl@arg^0,f,c
  7813  00289E  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7814  0028A0  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7815  0028A2  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7816  0028A4                     l3909:
  7817  0028A4  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7818  0028A6  EF57  F014         	goto	u4801
  7819  0028AA  EF59  F014         	goto	u4800
  7820  0028AE                     u4801:
  7821  0028AE  EF61  F014         	goto	l752
  7822  0028B2                     u4800:
  7823  0028B2  0E02               	movlw	2
  7824  0028B4  600F               	cpfslt	___xxtofl@exp^0,c
  7825  0028B6  EF5F  F014         	goto	u4811
  7826  0028BA  EF61  F014         	goto	u4810
  7827  0028BE                     u4811:
  7828  0028BE  EF4C  F014         	goto	l3907
  7829  0028C2                     u4810:
  7830  0028C2                     l752:
  7831  0028C2  B00F               	btfsc	___xxtofl@exp^0,0,c
  7832  0028C4  EF66  F014         	goto	u4821
  7833  0028C8  EF68  F014         	goto	u4820
  7834  0028CC                     u4821:
  7835  0028CC  EF69  F014         	goto	l3915
  7836  0028D0                     u4820:
  7837  0028D0  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7838  0028D2                     l3915:
  7839  0028D2  90D8               	bcf	status,0,c
  7840  0028D4  320F               	rrcf	___xxtofl@exp^0,f,c
  7841  0028D6  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7842  0028DA  6A0B               	clrf	(??___xxtofl+1)^0,c
  7843  0028DC  6A0C               	clrf	(??___xxtofl+2)^0,c
  7844  0028DE  6A0D               	clrf	(??___xxtofl+3)^0,c
  7845  0028E0  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7846  0028E4  6A0C               	clrf	(??___xxtofl+2)^0,c
  7847  0028E6  6A0B               	clrf	(??___xxtofl+1)^0,c
  7848  0028E8  6A0A               	clrf	??___xxtofl^0,c
  7849  0028EA  500A               	movf	??___xxtofl^0,w,c
  7850  0028EC  1210               	iorwf	___xxtofl@arg^0,f,c
  7851  0028EE  500B               	movf	(??___xxtofl+1)^0,w,c
  7852  0028F0  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7853  0028F2  500C               	movf	(??___xxtofl+2)^0,w,c
  7854  0028F4  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7855  0028F6  500D               	movf	(??___xxtofl+3)^0,w,c
  7856  0028F8  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7857  0028FA  500E               	movf	___xxtofl@sign^0,w,c
  7858  0028FC  B4D8               	btfsc	status,2,c
  7859  0028FE  EF83  F014         	goto	u4831
  7860  002902  EF85  F014         	goto	u4830
  7861  002906                     u4831:
  7862  002906  EF8D  F014         	goto	l3925
  7863  00290A                     u4830:
  7864  00290A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7865  00290C  EF8C  F014         	goto	u4840
  7866  002910  EF8A  F014         	goto	u4841
  7867  002914                     u4841:
  7868  002914  EF8D  F014         	goto	l3925
  7869  002918                     u4840:
  7870  002918  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7871  00291A                     l3925:
  7872  00291A  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7873  00291E  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7874  002922  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7875  002926  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7876  00292A                     l741:
  7877  00292A  0012               	return		;funcret
  7878  00292C                     __end_of___xxtofl:
  7879                           	callstack 0
  7880                           
  7881 ;; *************** function _LCD_setCursor *****************
  7882 ;; Defined at:
  7883 ;;		line 51 in file "LCD_4bits.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  x               1    wreg     unsigned char 
  7886 ;;  y               1    2[COMRAM] unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  x               1    5[COMRAM] unsigned char 
  7889 ;;  location        1    6[COMRAM] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7899 ;;      Params:         1       0       0       0       0       0       0       0       0
  7900 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7901 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7902 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7903 ;;Total ram usage:        5 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    1
  7906 ;; This function calls:
  7907 ;;		_LCD_Command
  7908 ;; This function is called by:
  7909 ;;		_main
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text31
  7914  00348E                     __ptext31:
  7915                           	callstack 0
  7916  00348E                     _LCD_setCursor:
  7917                           	callstack 29
  7918                           
  7919                           ;incstack = 0
  7920                           ;LCD_setCursor@x stored from wreg
  7921  00348E  6E06               	movwf	LCD_setCursor@x^0,c
  7922  003490                     
  7923                           ;LCD_4bits.c: 53:     switch(y){
  7924  003490  EF5C  F01A         	goto	l3851
  7925  003494                     l3841:
  7926                           
  7927                           ;LCD_4bits.c: 56:         location=(0x80)|((x)&0x0F);
  7928  003494  5006               	movf	LCD_setCursor@x^0,w,c
  7929  003496  0B0F               	andlw	15
  7930  003498  0980               	iorlw	128
  7931  00349A  6E07               	movwf	LCD_setCursor@location^0,c
  7932  00349C                     
  7933                           ;LCD_4bits.c: 57:         LCD_Command(location);
  7934  00349C  5007               	movf	LCD_setCursor@location^0,w,c
  7935  00349E  ECC4  F01A         	call	_LCD_Command
  7936                           
  7937                           ;LCD_4bits.c: 58:         break;
  7938  0034A2  EF71  F01A         	goto	l80
  7939  0034A6                     l3845:
  7940                           
  7941                           ;LCD_4bits.c: 61:         location=(0xC0)|((x)&0x0F);
  7942  0034A6  5006               	movf	LCD_setCursor@x^0,w,c
  7943  0034A8  0B0F               	andlw	15
  7944  0034AA  09C0               	iorlw	192
  7945  0034AC  6E07               	movwf	LCD_setCursor@location^0,c
  7946  0034AE                     
  7947                           ;LCD_4bits.c: 62:         LCD_Command(location);
  7948  0034AE  5007               	movf	LCD_setCursor@location^0,w,c
  7949  0034B0  ECC4  F01A         	call	_LCD_Command
  7950                           
  7951                           ;LCD_4bits.c: 63:         break;
  7952  0034B4  EF71  F01A         	goto	l80
  7953  0034B8                     l3851:
  7954  0034B8  5003               	movf	LCD_setCursor@y^0,w,c
  7955  0034BA  6E04               	movwf	??_LCD_setCursor^0,c
  7956  0034BC  6A05               	clrf	(??_LCD_setCursor+1)^0,c
  7957                           
  7958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7959                           ; Switch size 1, requested type "simple"
  7960                           ; Number of cases is 1, Range of values is 0 to 0
  7961                           ; switch strategies available:
  7962                           ; Name         Instructions Cycles
  7963                           ; simple_byte            4     3 (average)
  7964                           ;	Chosen strategy is simple_byte
  7965  0034BE  5005               	movf	(??_LCD_setCursor+1)^0,w,c
  7966  0034C0  0A00               	xorlw	0	; case 0
  7967  0034C2  B4D8               	btfsc	status,2,c
  7968  0034C4  EF66  F01A         	goto	l3995
  7969  0034C8  EF71  F01A         	goto	l80
  7970  0034CC                     l3995:
  7971                           
  7972                           ; Switch size 1, requested type "simple"
  7973                           ; Number of cases is 2, Range of values is 0 to 1
  7974                           ; switch strategies available:
  7975                           ; Name         Instructions Cycles
  7976                           ; simple_byte            7     4 (average)
  7977                           ;	Chosen strategy is simple_byte
  7978  0034CC  5004               	movf	??_LCD_setCursor^0,w,c
  7979  0034CE  0A00               	xorlw	0	; case 0
  7980  0034D0  B4D8               	btfsc	status,2,c
  7981  0034D2  EF4A  F01A         	goto	l3841
  7982  0034D6  0A01               	xorlw	1	; case 1
  7983  0034D8  B4D8               	btfsc	status,2,c
  7984  0034DA  EF53  F01A         	goto	l3845
  7985  0034DE  EF71  F01A         	goto	l80
  7986  0034E2                     l80:
  7987  0034E2  0012               	return		;funcret
  7988  0034E4                     __end_of_LCD_setCursor:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _LCD_Print *****************
  7992 ;; Defined at:
  7993 ;;		line 45 in file "LCD_4bits.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  str             2    2[COMRAM] PTR const unsigned char 
  7996 ;;		 -> main@buffer(8), STR_1(14), 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8008 ;;      Params:         2       0       0       0       0       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8012 ;;Total ram usage:        2 bytes
  8013 ;; Hardware stack levels used:    1
  8014 ;; Hardware stack levels required when called:    1
  8015 ;; This function calls:
  8016 ;;		_LCD_Char
  8017 ;; This function is called by:
  8018 ;;		_main
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text32
  8023  0033D4                     __ptext32:
  8024                           	callstack 0
  8025  0033D4                     _LCD_Print:
  8026                           	callstack 29
  8027  0033D4                     
  8028                           ;LCD_4bits.c: 46:     while((*str)!=0){
  8029  0033D4  EF00  F01A         	goto	l3863
  8030  0033D8                     l3859:
  8031                           
  8032                           ;LCD_4bits.c: 47:         LCD_Char(*str);
  8033  0033D8  C003  FFF6         	movff	LCD_Print@str,tblptrl
  8034  0033DC  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  8035  0033E0  6AF8               	clrf	tblptru,c
  8036  0033E2  0E07               	movlw	(high __ramtop+-1)
  8037  0033E4  64F7               	cpfsgt	tblptrh,c
  8038  0033E6  D003               	bra	u4717
  8039  0033E8  0008               	tblrd		*
  8040  0033EA  50F5               	movf	tablat,w,c
  8041  0033EC  D005               	bra	u4710
  8042  0033EE                     u4717:
  8043  0033EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8044  0033F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8045  0033F6  50E7               	movf	indf1,w,c
  8046  0033F8                     u4710:
  8047  0033F8  EC31  F01B         	call	_LCD_Char
  8048  0033FC                     
  8049                           ;LCD_4bits.c: 48:         str++;
  8050  0033FC  4A03               	infsnz	LCD_Print@str^0,f,c
  8051  0033FE  2A04               	incf	(LCD_Print@str+1)^0,f,c
  8052  003400                     l3863:
  8053                           
  8054                           ;LCD_4bits.c: 46:     while((*str)!=0){
  8055  003400  C003  FFF6         	movff	LCD_Print@str,tblptrl
  8056  003404  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  8057  003408  6AF8               	clrf	tblptru,c
  8058  00340A  0E07               	movlw	(high __ramtop+-1)
  8059  00340C  64F7               	cpfsgt	tblptrh,c
  8060  00340E  D003               	bra	u4727
  8061  003410  0008               	tblrd		*
  8062  003412  50F5               	movf	tablat,w,c
  8063  003414  D005               	bra	u4720
  8064  003416                     u4727:
  8065  003416  CFF6 FFE1          	movff	tblptrl,fsr1l
  8066  00341A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8067  00341E  50E7               	movf	indf1,w,c
  8068  003420                     u4720:
  8069  003420  0900               	iorlw	0
  8070  003422  A4D8               	btfss	status,2,c
  8071  003424  EF16  F01A         	goto	u4731
  8072  003428  EF18  F01A         	goto	u4730
  8073  00342C                     u4731:
  8074  00342C  EFEC  F019         	goto	l3859
  8075  003430                     u4730:
  8076  003430  0012               	return		;funcret
  8077  003432                     __end_of_LCD_Print:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function _LCD_Char *****************
  8081 ;; Defined at:
  8082 ;;		line 33 in file "LCD_4bits.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  x               1    wreg     unsigned char 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  x               1    1[COMRAM] unsigned char 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8099 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:        2 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_LCD_Print
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text33
  8110  003662                     __ptext33:
  8111                           	callstack 0
  8112  003662                     _LCD_Char:
  8113                           	callstack 29
  8114                           
  8115                           ;incstack = 0
  8116                           ;LCD_Char@x stored from wreg
  8117  003662  6E02               	movwf	LCD_Char@x^0,c
  8118  003664                     
  8119                           ;LCD_4bits.c: 34:     LATD = (LATD & 0x0F)|(x & 0xF0);
  8120  003664  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  8121  003668  0EF0               	movlw	240
  8122  00366A  1601               	andwf	??_LCD_Char^0,f,c
  8123  00366C  508C               	movf	140,w,c	;volatile
  8124  00366E  0B0F               	andlw	15
  8125  003670  1001               	iorwf	??_LCD_Char^0,w,c
  8126  003672  6E8C               	movwf	140,c	;volatile
  8127  003674                     
  8128                           ;LCD_4bits.c: 35:     LATD |=(1<<2);
  8129  003674  848C               	bsf	140,2,c	;volatile
  8130  003676                     
  8131                           ;LCD_4bits.c: 36:     LATD |=(1<<3);
  8132  003676  868C               	bsf	140,3,c	;volatile
  8133  003678                     
  8134                           ;LCD_4bits.c: 37:     __nop();
  8135  003678  F000               	nop	
  8136  00367A                     
  8137                           ;LCD_4bits.c: 38:     LATD &=~(1<<3);
  8138  00367A  968C               	bcf	140,3,c	;volatile
  8139  00367C                     
  8140                           ;LCD_4bits.c: 39:     LATD = (LATD & 0x0F)|(x<<4);
  8141  00367C  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  8142  003680  3A01               	swapf	??_LCD_Char^0,f,c
  8143  003682  0EF0               	movlw	240
  8144  003684  1601               	andwf	??_LCD_Char^0,f,c
  8145  003686  508C               	movf	140,w,c	;volatile
  8146  003688  0B0F               	andlw	15
  8147  00368A  1001               	iorwf	??_LCD_Char^0,w,c
  8148  00368C  6E8C               	movwf	140,c	;volatile
  8149                           
  8150                           ;LCD_4bits.c: 40:     LATD |=(1<<3);
  8151  00368E  868C               	bsf	140,3,c	;volatile
  8152  003690                     
  8153                           ;LCD_4bits.c: 41:     __nop();
  8154  003690  F000               	nop	
  8155                           
  8156                           ;LCD_4bits.c: 42:     LATD &=~(1<<3);
  8157  003692  968C               	bcf	140,3,c	;volatile
  8158  003694                     
  8159                           ;LCD_4bits.c: 43:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8160  003694  0E08               	movlw	8
  8161  003696  6E01               	movwf	??_LCD_Char^0,c
  8162  003698  0ECA               	movlw	202
  8163  00369A                     u4867:
  8164  00369A  2EE8               	decfsz	wreg,f,c
  8165  00369C  D7FE               	bra	u4867
  8166  00369E  2E01               	decfsz	??_LCD_Char^0,f,c
  8167  0036A0  D7FC               	bra	u4867
  8168  0036A2  0012               	return		;funcret
  8169  0036A4                     __end_of_LCD_Char:
  8170                           	callstack 0
  8171                           
  8172 ;; *************** function _LCD_Begin *****************
  8173 ;; Defined at:
  8174 ;;		line 4 in file "LCD_4bits.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      void 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8190 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8191 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    1
  8195 ;; This function calls:
  8196 ;;		_LCD_Command
  8197 ;; This function is called by:
  8198 ;;		_main
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text34
  8203  003782                     __ptext34:
  8204                           	callstack 0
  8205  003782                     _LCD_Begin:
  8206                           	callstack 29
  8207  003782                     
  8208                           ;LCD_4bits.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  8209  003782  0E27               	movlw	39
  8210  003784  6E03               	movwf	??_LCD_Begin^0,c
  8211  003786  0EF5               	movlw	245
  8212  003788                     u4877:
  8213  003788  2EE8               	decfsz	wreg,f,c
  8214  00378A  D7FE               	bra	u4877
  8215  00378C  2E03               	decfsz	??_LCD_Begin^0,f,c
  8216  00378E  D7FC               	bra	u4877
  8217  003790  F000               	nop	
  8218  003792                     
  8219                           ;LCD_4bits.c: 7:     TRISD &=~((1<<2)|(1<<3)|(0b11110000));
  8220  003792  0E03               	movlw	3
  8221  003794  1695               	andwf	149,f,c	;volatile
  8222  003796                     
  8223                           ;LCD_4bits.c: 8:     LCD_Command(0x02);
  8224  003796  0E02               	movlw	2
  8225  003798  ECC4  F01A         	call	_LCD_Command
  8226  00379C                     
  8227                           ;LCD_4bits.c: 9:     LCD_Command(0x28);
  8228  00379C  0E28               	movlw	40
  8229  00379E  ECC4  F01A         	call	_LCD_Command
  8230  0037A2                     
  8231                           ;LCD_4bits.c: 10:     LCD_Command(0x01);
  8232  0037A2  0E01               	movlw	1
  8233  0037A4  ECC4  F01A         	call	_LCD_Command
  8234  0037A8                     
  8235                           ;LCD_4bits.c: 11:     LCD_Command(0x0C);
  8236  0037A8  0E0C               	movlw	12
  8237  0037AA  ECC4  F01A         	call	_LCD_Command
  8238  0037AE                     
  8239                           ;LCD_4bits.c: 12:     LCD_Command(0x06);
  8240  0037AE  0E06               	movlw	6
  8241  0037B0  ECC4  F01A         	call	_LCD_Command
  8242  0037B4  0012               	return		;funcret
  8243  0037B6                     __end_of_LCD_Begin:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _LCD_Command *****************
  8247 ;; Defined at:
  8248 ;;		line 20 in file "LCD_4bits.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  dat             1    wreg     unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  dat             1    1[COMRAM] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0
  8263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8264 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8265 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8266 ;;Total ram usage:        2 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		_LCD_Begin
  8272 ;;		_LCD_setCursor
  8273 ;;		_LCD_Clear
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text35
  8278  003588                     __ptext35:
  8279                           	callstack 0
  8280  003588                     _LCD_Command:
  8281                           	callstack 29
  8282                           
  8283                           ;incstack = 0
  8284                           ;LCD_Command@dat stored from wreg
  8285  003588  6E02               	movwf	LCD_Command@dat^0,c
  8286  00358A                     
  8287                           ;LCD_4bits.c: 21:     LATD = (LATD & 0x0F)|(dat & 0xF0);
  8288  00358A  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  8289  00358E  0EF0               	movlw	240
  8290  003590  1601               	andwf	??_LCD_Command^0,f,c
  8291  003592  508C               	movf	140,w,c	;volatile
  8292  003594  0B0F               	andlw	15
  8293  003596  1001               	iorwf	??_LCD_Command^0,w,c
  8294  003598  6E8C               	movwf	140,c	;volatile
  8295  00359A                     
  8296                           ;LCD_4bits.c: 22:     LATD &=~(1<<2);
  8297  00359A  948C               	bcf	140,2,c	;volatile
  8298  00359C                     
  8299                           ;LCD_4bits.c: 23:     LATD |=(1<<3);
  8300  00359C  868C               	bsf	140,3,c	;volatile
  8301  00359E                     
  8302                           ;LCD_4bits.c: 24:     __nop();
  8303  00359E  F000               	nop	
  8304  0035A0                     
  8305                           ;LCD_4bits.c: 25:     LATD &=~(1<<3);
  8306  0035A0  968C               	bcf	140,3,c	;volatile
  8307                           
  8308                           ;LCD_4bits.c: 26:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8309  0035A2  0E03               	movlw	3
  8310  0035A4  6E01               	movwf	??_LCD_Command^0,c
  8311  0035A6  0E98               	movlw	152
  8312  0035A8                     u4887:
  8313  0035A8  2EE8               	decfsz	wreg,f,c
  8314  0035AA  D7FE               	bra	u4887
  8315  0035AC  2E01               	decfsz	??_LCD_Command^0,f,c
  8316  0035AE  D7FC               	bra	u4887
  8317  0035B0                     
  8318                           ;LCD_4bits.c: 27:     LATD = (LATD & 0x0F)|(dat<<4);
  8319  0035B0  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  8320  0035B4  3A01               	swapf	??_LCD_Command^0,f,c
  8321  0035B6  0EF0               	movlw	240
  8322  0035B8  1601               	andwf	??_LCD_Command^0,f,c
  8323  0035BA  508C               	movf	140,w,c	;volatile
  8324  0035BC  0B0F               	andlw	15
  8325  0035BE  1001               	iorwf	??_LCD_Command^0,w,c
  8326  0035C0  6E8C               	movwf	140,c	;volatile
  8327                           
  8328                           ;LCD_4bits.c: 28:     LATD |=(1<<3);
  8329  0035C2  868C               	bsf	140,3,c	;volatile
  8330  0035C4                     
  8331                           ;LCD_4bits.c: 29:     __nop();
  8332  0035C4  F000               	nop	
  8333                           
  8334                           ;LCD_4bits.c: 30:     LATD &=~(1<<3);
  8335  0035C6  968C               	bcf	140,3,c	;volatile
  8336  0035C8                     
  8337                           ;LCD_4bits.c: 31:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8338  0035C8  0E08               	movlw	8
  8339  0035CA  6E01               	movwf	??_LCD_Command^0,c
  8340  0035CC  0ECA               	movlw	202
  8341  0035CE                     u4897:
  8342  0035CE  2EE8               	decfsz	wreg,f,c
  8343  0035D0  D7FE               	bra	u4897
  8344  0035D2  2E01               	decfsz	??_LCD_Command^0,f,c
  8345  0035D4  D7FC               	bra	u4897
  8346  0035D6  0012               	return		;funcret
  8347  0035D8                     __end_of_LCD_Command:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _ADC_Read *****************
  8351 ;; Defined at:
  8352 ;;		line 49 in file "main.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  canal           1    wreg     unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  canal           1    4[COMRAM] unsigned char 
  8357 ;;  valor           2    2[COMRAM] unsigned short 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  2    0[COMRAM] unsigned short 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8367 ;;      Params:         2       0       0       0       0       0       0       0       0
  8368 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8370 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8371 ;;Total ram usage:        5 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text36
  8381  0037B6                     __ptext36:
  8382                           	callstack 0
  8383  0037B6                     _ADC_Read:
  8384                           	callstack 30
  8385                           
  8386                           ;incstack = 0
  8387                           ;ADC_Read@canal stored from wreg
  8388  0037B6  6E05               	movwf	ADC_Read@canal^0,c
  8389  0037B8                     
  8390                           ;main.c: 51:     uint16_t valor;;main.c: 53:     ADCON0=(canal<<2);
  8391  0037B8  4405               	rlncf	ADC_Read@canal^0,w,c
  8392  0037BA  46E8               	rlncf	wreg,f,c
  8393  0037BC  0BFC               	andlw	252
  8394  0037BE  6EC2               	movwf	194,c	;volatile
  8395  0037C0                     
  8396                           ;main.c: 54:     ADON=1;
  8397  0037C0  80C2               	bsf	4034,0,c	;volatile
  8398  0037C2                     
  8399                           ;main.c: 55:     GO_DONE=1;
  8400  0037C2  82C2               	bsf	4034,1,c	;volatile
  8401  0037C4                     l42:
  8402  0037C4  B2C2               	btfsc	4034,1,c	;volatile
  8403  0037C6  EFE7  F01B         	goto	u4741
  8404  0037CA  EFE9  F01B         	goto	u4740
  8405  0037CE                     u4741:
  8406  0037CE  EFE2  F01B         	goto	l42
  8407  0037D2                     u4740:
  8408  0037D2                     
  8409                           ;main.c: 57:     valor=ADRES;
  8410  0037D2  CFC3 F003          	movff	4035,ADC_Read@valor	;volatile
  8411  0037D6  CFC4 F004          	movff	4036,ADC_Read@valor+1	;volatile
  8412                           
  8413                           ;main.c: 59:     return valor;
  8414  0037DA  C003  F001         	movff	ADC_Read@valor,?_ADC_Read
  8415  0037DE  C004  F002         	movff	ADC_Read@valor+1,?_ADC_Read+1
  8416  0037E2  0012               	return		;funcret
  8417  0037E4                     __end_of_ADC_Read:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _ADC_Begin *****************
  8421 ;; Defined at:
  8422 ;;		line 42 in file "main.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  N_canales       1    wreg     unsigned char 
  8425 ;; Auto vars:     Size  Location     Type
  8426 ;;  N_canales       1    0[COMRAM] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      void 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0
  8437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8440 ;;Total ram usage:        1 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_main
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text37
  8450  00382C                     __ptext37:
  8451                           	callstack 0
  8452  00382C                     _ADC_Begin:
  8453                           	callstack 30
  8454                           
  8455                           ;incstack = 0
  8456                           ;ADC_Begin@N_canales stored from wreg
  8457  00382C  6E01               	movwf	ADC_Begin@N_canales^0,c
  8458  00382E                     
  8459                           ;main.c: 44:     ADCON1=~N_canales & 0x0F;
  8460  00382E  5001               	movf	ADC_Begin@N_canales^0,w,c
  8461  003830  0AFF               	xorlw	255
  8462  003832  0B0F               	andlw	15
  8463  003834  6EC1               	movwf	193,c	;volatile
  8464  003836                     
  8465                           ;main.c: 45:     ADCON2=0x91;
  8466  003836  0E91               	movlw	145
  8467  003838  6EC0               	movwf	192,c	;volatile
  8468  00383A                     
  8469                           ;main.c: 46:     ADRES=0;
  8470  00383A  0E00               	movlw	0
  8471  00383C  6EC4               	movwf	196,c	;volatile
  8472  00383E  0E00               	movlw	0
  8473  003840  6EC3               	movwf	195,c	;volatile
  8474  003842  0012               	return		;funcret
  8475  003844                     __end_of_ADC_Begin:
  8476                           	callstack 0
  8477                           
  8478                           	psect	rparam
  8479  0000                     
  8480                           	psect	idloc
  8481                           
  8482                           ;Config register IDLOC0 @ 0x200000
  8483                           ;	unspecified, using default values
  8484  200000                     	org	2097152
  8485  200000  FF                 	db	255
  8486                           
  8487                           ;Config register IDLOC1 @ 0x200001
  8488                           ;	unspecified, using default values
  8489  200001                     	org	2097153
  8490  200001  FF                 	db	255
  8491                           
  8492                           ;Config register IDLOC2 @ 0x200002
  8493                           ;	unspecified, using default values
  8494  200002                     	org	2097154
  8495  200002  FF                 	db	255
  8496                           
  8497                           ;Config register IDLOC3 @ 0x200003
  8498                           ;	unspecified, using default values
  8499  200003                     	org	2097155
  8500  200003  FF                 	db	255
  8501                           
  8502                           ;Config register IDLOC4 @ 0x200004
  8503                           ;	unspecified, using default values
  8504  200004                     	org	2097156
  8505  200004  FF                 	db	255
  8506                           
  8507                           ;Config register IDLOC5 @ 0x200005
  8508                           ;	unspecified, using default values
  8509  200005                     	org	2097157
  8510  200005  FF                 	db	255
  8511                           
  8512                           ;Config register IDLOC6 @ 0x200006
  8513                           ;	unspecified, using default values
  8514  200006                     	org	2097158
  8515  200006  FF                 	db	255
  8516                           
  8517                           ;Config register IDLOC7 @ 0x200007
  8518                           ;	unspecified, using default values
  8519  200007                     	org	2097159
  8520  200007  FF                 	db	255
  8521                           
  8522                           	psect	config
  8523                           
  8524                           ;Config register CONFIG1L @ 0x300000
  8525                           ;	PLL Prescaler Selection bits
  8526                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8527                           ;	System Clock Postscaler Selection bits
  8528                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8529                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8530                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8531  300000                     	org	3145728
  8532  300000  00                 	db	0
  8533                           
  8534                           ;Config register CONFIG1H @ 0x300001
  8535                           ;	Oscillator Selection bits
  8536                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  8537                           ;	Fail-Safe Clock Monitor Enable bit
  8538                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8539                           ;	Internal/External Oscillator Switchover bit
  8540                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8541  300001                     	org	3145729
  8542  300001  08                 	db	8
  8543                           
  8544                           ;Config register CONFIG2L @ 0x300002
  8545                           ;	Power-up Timer Enable bit
  8546                           ;	PWRT = OFF, PWRT disabled
  8547                           ;	Brown-out Reset Enable bits
  8548                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8549                           ;	Brown-out Reset Voltage bits
  8550                           ;	BORV = 3, Minimum setting 2.05V
  8551                           ;	USB Voltage Regulator Enable bit
  8552                           ;	VREGEN = OFF, USB voltage regulator disabled
  8553  300002                     	org	3145730
  8554  300002  1F                 	db	31
  8555                           
  8556                           ;Config register CONFIG2H @ 0x300003
  8557                           ;	Watchdog Timer Enable bit
  8558                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8559                           ;	Watchdog Timer Postscale Select bits
  8560                           ;	WDTPS = 32768, 1:32768
  8561  300003                     	org	3145731
  8562  300003  1E                 	db	30
  8563                           
  8564                           ; Padding undefined space
  8565  300004                     	org	3145732
  8566  300004  FF                 	db	255
  8567                           
  8568                           ;Config register CONFIG3H @ 0x300005
  8569                           ;	CCP2 MUX bit
  8570                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8571                           ;	PORTB A/D Enable bit
  8572                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8573                           ;	Low-Power Timer 1 Oscillator Enable bit
  8574                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8575                           ;	MCLR Pin Enable bit
  8576                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8577  300005                     	org	3145733
  8578  300005  01                 	db	1
  8579                           
  8580                           ;Config register CONFIG4L @ 0x300006
  8581                           ;	Stack Full/Underflow Reset Enable bit
  8582                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8583                           ;	Single-Supply ICSP Enable bit
  8584                           ;	LVP = OFF, Single-Supply ICSP disabled
  8585                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8586                           ;	ICPRT = OFF, ICPORT disabled
  8587                           ;	Extended Instruction Set Enable bit
  8588                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8589                           ;	Background Debugger Enable bit
  8590                           ;	DEBUG = 0x1, unprogrammed default
  8591  300006                     	org	3145734
  8592  300006  81                 	db	129
  8593                           
  8594                           ; Padding undefined space
  8595  300007                     	org	3145735
  8596  300007  FF                 	db	255
  8597                           
  8598                           ;Config register CONFIG5L @ 0x300008
  8599                           ;	Code Protection bit
  8600                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8601                           ;	Code Protection bit
  8602                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8603                           ;	Code Protection bit
  8604                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8605                           ;	Code Protection bit
  8606                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8607  300008                     	org	3145736
  8608  300008  0F                 	db	15
  8609                           
  8610                           ;Config register CONFIG5H @ 0x300009
  8611                           ;	Boot Block Code Protection bit
  8612                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8613                           ;	Data EEPROM Code Protection bit
  8614                           ;	CPD = OFF, Data EEPROM is not code-protected
  8615  300009                     	org	3145737
  8616  300009  C0                 	db	192
  8617                           
  8618                           ;Config register CONFIG6L @ 0x30000A
  8619                           ;	Write Protection bit
  8620                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8621                           ;	Write Protection bit
  8622                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8623                           ;	Write Protection bit
  8624                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8625                           ;	Write Protection bit
  8626                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8627  30000A                     	org	3145738
  8628  30000A  0F                 	db	15
  8629                           
  8630                           ;Config register CONFIG6H @ 0x30000B
  8631                           ;	Configuration Register Write Protection bit
  8632                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8633                           ;	Boot Block Write Protection bit
  8634                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8635                           ;	Data EEPROM Write Protection bit
  8636                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8637  30000B                     	org	3145739
  8638  30000B  E0                 	db	224
  8639                           
  8640                           ;Config register CONFIG7L @ 0x30000C
  8641                           ;	Table Read Protection bit
  8642                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8643                           ;	Table Read Protection bit
  8644                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8645                           ;	Table Read Protection bit
  8646                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8647                           ;	Table Read Protection bit
  8648                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8649  30000C                     	org	3145740
  8650  30000C  0F                 	db	15
  8651                           
  8652                           ;Config register CONFIG7H @ 0x30000D
  8653                           ;	Boot Block Table Read Protection bit
  8654                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8655  30000D                     	org	3145741
  8656  30000D  40                 	db	64
  8657                           tosu	equ	0xFFF
  8658                           tosh	equ	0xFFE
  8659                           tosl	equ	0xFFD
  8660                           stkptr	equ	0xFFC
  8661                           pclatu	equ	0xFFB
  8662                           pclath	equ	0xFFA
  8663                           pcl	equ	0xFF9
  8664                           tblptru	equ	0xFF8
  8665                           tblptrh	equ	0xFF7
  8666                           tblptrl	equ	0xFF6
  8667                           tablat	equ	0xFF5
  8668                           prodh	equ	0xFF4
  8669                           prodl	equ	0xFF3
  8670                           indf0	equ	0xFEF
  8671                           postinc0	equ	0xFEE
  8672                           postdec0	equ	0xFED
  8673                           preinc0	equ	0xFEC
  8674                           plusw0	equ	0xFEB
  8675                           fsr0h	equ	0xFEA
  8676                           fsr0l	equ	0xFE9
  8677                           wreg	equ	0xFE8
  8678                           indf1	equ	0xFE7
  8679                           postinc1	equ	0xFE6
  8680                           postdec1	equ	0xFE5
  8681                           preinc1	equ	0xFE4
  8682                           plusw1	equ	0xFE3
  8683                           fsr1h	equ	0xFE2
  8684                           fsr1l	equ	0xFE1
  8685                           bsr	equ	0xFE0
  8686                           indf2	equ	0xFDF
  8687                           postinc2	equ	0xFDE
  8688                           postdec2	equ	0xFDD
  8689                           preinc2	equ	0xFDC
  8690                           plusw2	equ	0xFDB
  8691                           fsr2h	equ	0xFDA
  8692                           fsr2l	equ	0xFD9
  8693                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     92     108
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@buffer(BANK0[8]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 8
		 -> main@buffer(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S545_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@buffer(BANK0[8]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 8
		 -> main@buffer(BANK0[8]), 

    LCD_Print@str	PTR const unsigned char  size(2) Largest target is 14
		 -> main@buffer(BANK0[8]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    ___xxtofl->_ADC_Read
    _LCD_setCursor->_LCD_Command
    _LCD_Print->_LCD_Char
    _LCD_Begin->_LCD_Command

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   32208
                                             92 COMRAM     2     2      0
                                             80 BANK0     12    12      0
                          _ADC_Begin
                           _ADC_Read
                          _LCD_Begin
                          _LCD_Print
                      _LCD_setCursor
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28268
                                             62 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27911
                                             90 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27539
                                             68 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22240
                                             56 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             44 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             19 COMRAM    25    17      8
                           _ADC_Read (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     309
                                              2 COMRAM     5     4      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            2     0      2     241
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      45
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Begin                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Begin
   _ADC_Read
   _LCD_Begin
     _LCD_Command
   _LCD_Print
     _LCD_Char
   _LCD_setCursor
     _LCD_Command
   ___flmul
     _ADC_Read (ARG)
     ___xxtofl (ARG)
       _ADC_Read (ARG)
   ___xxtofl
     _ADC_Read (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               _ADC_Read (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
           ___flmul
             _ADC_Read (ARG)
             ___xxtofl (ARG)
               _ADC_Read (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               _ADC_Read (ARG)
               ___xxtofl (ARG)
                 _ADC_Read (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      6C       5       67.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      20        0.0%
DATA                 0      0     11A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jun 22 12:26:26 2022

           ___fldiv@aexp 0019             ___fldiv@bexp 0018       __size_of_ADC_Begin 0018  
           ___fldiv@sign 0011             ?_LCD_Command 0001                       l42 37C4  
                     l44 37D2                       l45 37E2                       l39 3842  
                     l64 35D6                       l80 34E2                       l73 3430  
                     l58 37B4                       l67 36A2                       l83 3808  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l314 31B6  
                    l342 3310                      l327 3266                      l353 2CC4  
                    l611 1670                      l348 2C7E                      l620 1940  
                    l612 165E                      l380 2BC0                      l701 21CA  
                    l357 3712                      l613 1624                      l704 205C  
                    l714 218C                      l706 20D4                      l802 3074  
                    l707 20C2                      l628 178A                      l741 292A  
                    l637 185A                      l653 361C                      l805 30B6  
                    l670 2388                      l638 1848                      l807 30F2  
                    l752 28C2                      l745 2866                      l665 2564  
                    l825 1480                      l761 3534                      l738 27CE  
                    l930 336A                      l667 23C4                      l843 0C16  
                    l931 3372                      l676 240A                      l924 1CEA  
                    l941 2DC2                      l917 1DA0                      l678 2482  
                    l679 2470                      l871 1056                      l697 1E66  
                    l970 2AB2                      l973 2ABA                      l982 26BA  
                    l979 2776                      l989 374A                      l997 3586  
                    _pad 302E             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0025             ___flmul@bexp 0026              _tolower$829 000D  
           ___flmul@sign 0020             ___flmul@temp 002B             ___flmul@prod 0027  
           ___fltol@exp1 000A                     l1003 36DA                     l1041 3780  
                   l1018 302C                     l1026 3660                     l1035 348C  
                   l1060 33D2                     l1029 3844                     l1045 2E98  
                   l1055 33CA                     l3001 207A                     l3011 20E4  
                   l3003 207E                     l3101 31E4                     l3021 2146  
                   l3013 20F0                     l3005 208C                     l3111 321C  
                   l3103 31EC                     l3031 21AE                     l3023 215A  
                   l3015 20FE                     l3007 20BA                     l3121 3256  
                   l3113 3232                     l3105 31FE                     l3033 21B0  
                   l3025 2174                     l3017 2128                     l3041 35D8  
                   l3051 3106                     l3123 325E                     l3115 323A  
                   l3107 3206                     l3131 32A6                     l3027 2190  
                   l3035 21B6                     l3019 212C                     l3043 35E8  
                   l3211 2BA0                     l3061 312C                     l3053 310E  
                   l3117 3240                     l3109 320E                     l3133 32D4  
                   l3037 21BA                     l3029 21A0                     l3213 2BB0  
                   l3205 2B74                     l3221 3052                     l3303 3714  
                   l3311 354E                     l3071 3164                     l3063 3134  
                   l3055 3112                     l3047 30F4                     l3119 3246  
                   l3135 32E4                     l3127 3268                     l3151 2C3E  
                   l3143 2BC2                     l3207 2B80                     l3231 3098  
                   l3223 3060                     l3313 357C                     l3081 3190  
                   l3073 316A                     l3065 3146                     l3057 3120  
                   l3049 30F8                     l3137 3308                     l3129 3296  
                   l3161 2CC2                     l3153 2C4C                     l3145 2BF0  
                   l2601 159A                     l3209 2B90                     l3241 2CE6  
                   l3233 30C6                     l3225 306C                     l3217 302E  
                   l3401 0B7E                     l3321 0834                     l3315 3580  
                   l3307 3536                     l3075 3180                     l3067 314E  
                   l3083 3196                     l3059 3128                     l3091 31B8  
                   l3139 330E                     l3155 2C5E                     l3147 2C00  
                   l2611 15AE                     l2603 159E                     l3243 2D24  
                   l3251 2D64                     l2531 2F76                     l3235 30DA  
                   l3227 3080                     l3219 303E                     l3411 0BE8  
                   l3403 0BB0                     l3331 0888                     l3323 0844  
                   l3309 353A                     l3085 31A6                     l3077 3188  
                   l3069 3156                     l3093 31BC                     l3157 2C6C  
                   l3149 2C2E                     l3165 36DC                     l2701 180A  
                   l2613 15B2                     l2605 15A2                     l2621 15C2  
                   l3181 2B10                     l3173 2ABC                     l3253 2D76  
                   l3245 2D4C                     l2533 2F88                     l3229 3094  
                   l3261 3432                     l3501 1072                     l3413 0BF0  
                   l3405 0BC0                     l3341 08CE                     l3333 0890  
                   l3325 0852                     l3087 31AE                     l3079 318A  
                   l3095 31CA                     l3159 2CBC                     l3167 36F2  
                   l2703 1818                     l2631 1632                     l2623 15C6  
                   l2615 15B6                     l2607 15A6                     l2551 14AE  
                   l2543 1482                     l3183 2B12                     l3175 2AD2  
                   l3247 2D58                     l3239 2CC6                     l2535 2F92  
                   l3263 3442                     l3271 33BC                     l3511 1118  
                   l3503 10D6                     l3431 0CA0                     l3423 0C34  
                   l3415 0C0A                     l3407 0BC4                     l3351 090A  
                   l3343 08D6                     l3335 08A2                     l3327 085A  
                   l3319 082A                     l3097 31D2                     l2801 225E  
                   l3169 3702                     l2713 186A                     l2721 18C0  
                   l2705 181C                     l2641 165C                     l2633 163E  
                   l2625 15F0                     l2617 15BA                     l2609 15AA  
                   l2561 14E8                     l2553 14BE                     l2545 148E  
                   l3185 2B22                     l3257 2DBA                     l3281 25F0  
                   l2537 2FB0                     l2529 2F64                     l3265 3374  
                   l3601 13D4                     l3521 1154                     l3505 10E6  
                   l3513 1120                     l3441 0CDE                     l3425 0C46  
                   l3433 0CA4                     l3409 0BD6                     l3417 0C22  
                   l3361 0986                     l3345 08DA                     l3337 08B0  
                   l3329 087E                     l3099 31D6                     l2811 2298  
                   l2803 226E                     l2731 1912                     l2723 18D0  
                   l2715 1876                     l2707 182A                     l2651 16B2  
                   l2643 167E                     l2635 1642                     l2627 160C  
                   l2619 15BE                     l2571 1516                     l2563 14EE  
                   l2555 14CE                     l2547 149C                     l3195 2B4C  
                   l3187 2B26                     l3179 2AE6                     l3283 25FE  
                   l3291 26DE                     l3275 2566                     l2539 2FE6  
                   l3611 1424                     l3603 13E4                     l3531 1180  
                   l3523 115A                     l3515 1132                     l3507 10F8  
                   l3451 0D2C                     l3443 0CE2                     l3435 0CAC  
                   l3427 0C62                     l3363 0990                     l3355 0940  
                   l3347 08DE                     l3339 08C2                     l2901 2558  
                   l2813 22AE                     l2805 227E                     l2741 1930  
                   l2733 1918                     l2725 18E0                     l2717 1884  
                   l2709 1840                     l2661 16EC                     l2653 16C0  
                   l2645 168E                     l2637 1650                     l2629 161C  
                   l2581 154A                     l2573 1518                     l2565 1500  
                   l2557 14D0                     l2549 149E                     l3197 2B56  
                   l3189 2B34                     l3293 271A                     l3277 2586  
                   l3269 33AA                     l3621 1460                     l3613 1436  
                   l3605 13EA                     l3525 1166                     l3517 1140  
                   l3533 1186                     l3541 11B4                     l3509 110A  
                   l3461 0DC4                     l3445 0CF4                     l3453 0D34  
                   l3437 0CBE                     l3429 0C98                     l3373 0A14  
                   l3357 0952                     l3349 08E4                     l3701 19B6  
                   l3631 2944                     l2903 255A                     l2831 2302  
                   l2815 22BE                     l2823 22DE                     l2807 2280  
                   l2911 1DA2                     l2735 191A                     l2727 1900  
                   l2719 18BE                     l2671 1758                     l2663 16EE  
                   l2655 16CE                     l2639 1652                     l2591 1586  
                   l2575 1528                     l2583 1552                     l2567 1502  
                   l2559 14D8                     l3199 2B60                     l3295 272E  
                   l3287 266E                     l3279 25DC                     l2751 3640  
                   l3615 1442                     l3607 13F0                     l3551 126A  
                   l3543 120C                     l3535 1198                     l3527 1176  
                   l3519 1150                     l3471 0EA8                     l3463 0E1C  
                   l3455 0D3C                     l3447 0D02                     l3439 0CD0  
                   l3391 0AAE                     l3375 0A26                     l3359 096E  
                   l3367 09B8                     l3711 1A50                     l3703 19C4  
                   l3801 3678                     l3633 2948                     l2841 2354  
                   l2833 231C                     l2825 22EE                     l2817 22C6  
                   l2809 2288                     l2921 1DDE                     l2913 1DAE  
                   l2737 1920                     l2729 1904                     l2681 17B0  
                   l2673 175A                     l2665 16F8                     l2657 16DA  
                   l2649 16A2                     l2593 158A                     l2585 1562  
                   l2577 1538                     l2569 1508                     l3297 2756  
                   l3289 26AA                     l2745 361E                     l2753 374C  
                   l3617 144A                     l3561 12BA                     l3553 1286  
                   l3545 1240                     l3537 11AA                     l3529 117A  
                   l3481 0F42                     l3473 0EDA                     l3465 0E50  
                   l3457 0D4C                     l3449 0D1A                     l3393 0AE2  
                   l3377 0A42                     l3369 09DE                     l3385 0A5E  
                   l3721 1AD8                     l3705 19E8                     l3803 367A  
                   l3651 29FE                     l3643 29A4                     l3635 2964  
                   l3627 292C                     l2851 23B0                     l2843 2364  
                   l2835 232C                     l2827 22EE                     l2819 22CA  
                   l2931 1E10                     l2923 1DEE                     l2915 1DBC  
                   l2739 192E                     l2691 17DE                     l2675 176A  
                   l2659 16DE                     l2667 16FE                     l2595 158E  
                   l2587 1574                     l2579 1548                     l3299 2766  
                   l2747 362A                     l2755 3758                     l2763 36A4  
                   l3619 145A                     l3571 12FC                     l3563 12CA  
                   l3555 1298                     l3547 1248                     l3539 11AE  
                   l3491 101A                     l3483 0F76                     l3475 0EF0  
                   l3459 0D60                     l3467 0E56                     l3395 0AE8  
                   l3387 0A78                     l3731 1B70                     l3723 1B08  
                   l3715 1A96                     l3707 1A22                     l3811 3312  
                   l3821 3836                     l3805 367C                     l3901 284E  
                   l3661 2A84                     l3645 29BA                     l3637 299A  
                   l3629 2940                     l2861 23F0                     l2853 23B2  
                   l2845 2378                     l2837 233C                     l2781 21F8  
                   l2773 21CC                     l2941 1E50                     l2933 1E1E  
                   l2925 1DF4                     l2917 1DBE                     l2693 17EC  
                   l2685 17C4                     l2669 1724                     l2677 177A  
                   l2597 1592                     l2589 1582                     l2749 363C  
                   l2757 375C                     l3581 132C                     l3573 130A  
                   l3565 12DC                     l3557 12A6                     l3549 124C  
                   l3485 0FCC                     l3493 101E                     l3477 0F22  
                   l3469 0E74                     l3397 0B42                     l3741 1C08  
                   l3733 1B7E                     l3725 1B18                     l3709 1A42  
                   l3717 1AA8                     l3813 331A                     ?_pad 0011  
                   l3823 383A                     l3831 379C                     l3807 3690  
                   l3911 28B2                     l3903 2850                     l2767 37E4  
                   l3663 2A96                     l3655 2A34                     l3647 29C2  
                   l3639 299E                     l2871 242C                     l2863 23FA  
                   l2855 23C2                     l2847 2386                     l2839 234C  
                   l2791 2232                     l2783 2208                     l2775 21D8  
                   l2951 1E9A                     l2943 1E56                     l2935 1E20  
                   l2927 1E04                     l2919 1DCE                     l2695 17F4  
                   l2687 17CE                     l2679 17A0                     l2599 1596  
                   l2759 3774                     l3591 138E                     l3583 1352  
                   l3575 1312                     l3567 12E4                     l3559 12B6  
                   l3495 102E                     l3487 0FD2                     l3479 0F32  
                   l3399 0B76                     l3671 2DEE                     l3735 1BAE  
                   l3727 1B48                     l3719 1AC8                     l3815 3328  
                   l3833 37A2                     l3825 3782                     l3809 3694  
                   l3841 3494                     l3921 290A                     l3913 28D0  
                   l3905 285C                     l2769 3800                     l3649 29CA  
                   l2881 249E                     l2873 243A                     l2865 2408  
                   l2857 23D4                     l2849 2392                     l2793 2238  
                   l2785 2218                     l2777 21E6                     l2961 1EEA  
                   l2953 1EA6                     l2945 1E76                     l2937 1E30  
                   l2929 1E0A                     l2697 17F8                     l2689 17DC  
                   l3593 13A8                     l3585 136E                     l3577 131A  
                   l3569 12F4                     l3497 1042                     l3489 1006  
                   l3681 2E3C                     l3761 1D44                     l3745 1C74  
                   l3729 1B5A                     l3817 334E                     l3819 382E  
                   l3835 37A8                     l3827 3792                     l3843 349C  
                   l3851 34B8                     l3923 2918                     l3915 28D2  
                   l3907 2898                     l3659 2A72                     l2891 250A  
                   l2883 24AC                     l2875 2468                     l2859 23EA  
                   l2867 241A                     l2795 223E                     l2787 221A  
                   l2779 21E8                     l2971 1F2C                     l2963 1EF6  
                   l2955 1EB0                     l2947 1E86                     l2939 1E40  
                   l2699 1808                     l3595 13AE                     l3587 1376  
                   l3579 1326                     l3499 104E                     l3683 2E4E  
                   l3675 2DFA                     l3747 1C86                     l3755 1CFE  
                   l3739 1BDA                     l3691 1966                     l3771 1D6A  
                   l3931 2E9E                     l3781 359A                     l3837 37AE  
                   l3829 3796                     l3861 33FC                     l3845 34A6  
                   l3925 291A                     l3917 28D6                     l3909 28A4  
                   l2893 2524                     l2885 24D6                     l2869 2428  
                   l2797 224C                     l2789 2222                     l2981 1F8E  
                   l2973 1F38                     l2965 1F02                     l2957 1EC6  
                   l3597 13C0                     l3589 137C                     l3685 2E76  
                   l3677 2E08                     l3669 2DC4                     l3773 1D8E  
                   l3757 1D22                     l3765 1D50                     l3749 1CBA  
                   l3693 1974                     l3941 2F0A                     l3933 2EA4  
                   l3791 35C4                     l3783 359C                     l3863 3400  
                   l3847 34AE                     l3839 3490                     l3919 28FA  
                   l2895 2540                     l2879 2492                     l2887 24DA  
                   l2799 224E                     l2991 2024                     l2983 1F9A  
                   l2975 1F48                     l2967 1F10                     l2959 1ED2  
                   l3599 13CC                     l3679 2E20                     l3767 1D5E  
                   l3759 1D30                     l3695 1986                     l3871 34E4  
                   l3943 2F30                     l3935 2EA8                     l3865 37B8  
                   l3793 35C8                     l3785 359E                     l3857 33D4  
                   l2897 2544                     l2889 24F4                     l2993 2042  
                   l2985 1FB6                     l2977 1F62                     l2969 1F1C  
                   l3697 198A                     l3689 1942                     l3873 34F6  
                   l3945 2F3A                     l3937 2EB2                     l3929 2E9A  
                   l3867 37C0                     l3787 35A0                     l3779 358A  
                   l3795 3664                     l3859 33D8                     l3891 27F4  
                   l3883 277A                     l2899 2552                     l2995 204C  
                   l2987 1FE0                     l2979 1F72                     l3699 19AE  
                   l3875 34FE                     l3947 2F46                     l3939 2EBE  
                   l3869 37C2                     l3789 35B0                     l3797 3674  
                   l3885 278A                     l2997 205A                     l2989 2016  
                   l3877 3506                     l3799 3676                     l3895 2808  
                   l3887 2798                     l2999 206C                     l3879 3522  
                   l3897 2810                     l3889 27DE                     l3993 29E8  
                   l3995 34CC                     l3899 281C                     _ADON 007E10  
                   STR_1 0801                     STR_2 080F                     STR_3 0816  
                   STR_4 081E                     STR_7 081A                     STR_8 0822  
                   u3000 23B0                     u3001 23AC                     u3010 23D4  
                   u3011 23D0                     u3100 24F4                     u3020 23EA  
                   u3101 24F0                     u3021 23E6                     u3110 2524  
                   u3030 2408                     u3111 2520                     u3031 2404  
                   u3120 2552                     u3040 2428                     u3200 1E86  
                   u4000 0A0E                     _LATD 000F8C                     u3121 254E  
                   u3041 2424                     u3201 1E82                     u3050 243A  
                   u3210 2000                     u3130 1DBC                     u4010 0A26  
                   u3051 2436                     u3131 1DB8                     u4011 0A22  
                   u3060 2468                     u3300 2174                     u3220 205A  
                   u3140 1DCE                     u2500 1500                     u4100 0C62  
                   u4020 0AAA                     u3061 2464                     u3301 2170  
                   u3221 2056                     u3141 1DCA                     u2501 14FC  
                   u4101 0C5E                     u4021 0AA6                     u3070 247E  
                   u3310 21AE                     u3230 207A                     u3150 1DDE  
                   u2510 1516                     u2430 2F76                     u4110 0C98  
                   u4030 0B3E                     u3071 247A                     u3311 21AA  
                   u3231 2076                     u3215 1FF6                     u3151 1DDA  
                   u2511 1512                     u2431 2F72                     u4111 0C94  
                   u4031 0B3A                     u3320 3106                     u3400 31FE  
                   u3080 2492                     u3240 208C                     u3160 1E1E  
                   u2600 1650                     u2520 1528                     u2440 2F88  
                   u4200 0F22                     u4120 0CBE                     u4040 0BB0  
                   u3321 3102                     u3401 31FA                     u3081 248E  
                   u3241 2088                     u3161 1E1A                     u2601 164C  
                   u2521 1524                     u2441 2F84                     u4201 0F1E  
                   u4121 0CBA                     u4041 0BAC                     u3330 3120  
                   u3410 321C                     u3090 24AC                     u3250 20BA  
                   u3170 1E30                     u2610 1670                     u2530 1538  
                   u2450 2FB0                     u4210 0F32                     u4130 0CD0  
                   u4050 0BD6                     u3331 311C                     u3411 3218  
                   u3091 24A8                     u3251 20B6                     u3171 1E2C  
                   u2611 166C                     u2531 1534                     u2451 2FAC  
                   u4211 0F2E                     u4131 0CCC                     u4051 0BD2  
                   u3340 3146                     u3420 3232                     u3500 2C6C  
                   u3260 20D0                     u3180 1E40                     u2700 17B0  
                   u2620 167E                     u2540 1574                     u2460 2FE6  
                   u4300 1140                     u4220 0FCC                     u4140 0CDE  
                   u4060 0BE8                     u3341 3142                     u3421 322E  
                   u3501 2C68                     u3261 20CC                     u3181 1E3C  
                   u2701 17AC                     u2621 167A                     u2541 1570  
                   u2461 2FE2                     u4301 113C                     u4221 0FC8  
                   u4141 0CDA                     u4061 0BE4                     u3350 3164  
                   u3430 3256                     u3510 2CBC                     u3270 20E4  
                   u3190 1E76                     u2710 17DC                     u2630 168E  
                   u2550 1582                     u2470 149C                     u4310 1198  
                   u4230 101A                     u4150 0CF4                     u4070 0C0A  
                   u3351 3160                     u3431 3252                     u3511 2CB8  
                   u3271 20E0                     u3191 1E72                     u2711 17D8  
                   u2631 168A                     u2551 157E                     u2471 1498  
                   u4311 1194                     u4231 1016                     u4151 0CF0  
                   u4071 0C06                     u3360 3180                     u3440 3296  
                   u3280 20FE                     u3520 36F2                     u2800 18BE  
                   u2720 17EC                     u2640 16C0                     u2560 15F0  
                   u2480 14AE                     u3600 303E                     u4400 13C0  
                   u4320 126A                     u4240 1042                     u4160 0D02  
                   u4080 0C30                     u3361 317C                     u3441 3292  
                   u3281 20FA                     u3521 36EE                     u2801 18BA  
                   u2721 17E8                     u2641 16BC                     u2561 15EC  
                   u2481 14AA                     u3601 303A                     u4401 13BC  
                   u4321 1266                     u4241 103E                     u4161 0CFE  
                   u4081 0C2C                     u3370 31A6                     u3450 32D4  
                   u3290 2146                     u2810 18D0                     u2730 1808  
                   u2650 16CE                     u2570 1608                     u2490 14BE  
                   u3530 2AD2                     u3610 3060                     u4410 141E  
                   u4330 1286                     u4250 10E6                     u4170 0D2C  
                   u4090 0C46                     u3371 31A2                     u3451 32D0  
                   u3291 2142                     u2811 18CC                     u2731 1804  
                   u2651 16CA                     u2571 1602                     u2491 14BA  
                   u3531 2ACE                     u3611 305C                     u4411 1418  
                   u4331 1282                     u4251 10E2                     u4171 0D28  
                   u4091 0C42                     u4500 2A96                     u3380 31CA  
                   u2900 21E6                     u3460 3308                     u2820 18E0  
                   u2740 1818                     u2660 16EC                     u2580 160A  
                   u3540 2B06                     u3700 2DB2                     u3620 30B6  
                   u4420 1420                     u4340 1298                     u4260 10F8  
                   u4180 0E74                     u4501 2A92                     u3381 31C6  
                   u2901 21E2                     u3461 3304                     u2821 18DC  
                   u2741 1814                     u2661 16E8                     u3621 30B2  
                   u4341 1294                     u4261 10F4                     u4181 0E70  
                   u3390 31E4                     u2910 21F8                     u3470 2BF0  
                   u2830 1900                     u2750 182A                     u2670 1724  
                   u2590 1632                     u3550 2B34                     u3630 30C6  
                   u3710 347A                     u4430 1436                     u4350 12A6  
                   u4270 110A                     u4190 0EDA                     u4510 2DEE  
                   u3391 31E0                     u2911 21F4                     u3471 2BEC  
                   u2831 18FC                     u2751 1826                     u2671 1720  
                   u2591 162E                     u3551 2B30                     u3631 30C2  
                   u4431 1432                     u4351 12A2                     u4271 1106  
                   u4191 0ED6                     u4511 2DEA                     u4440 2964  
                   u2920 2208                     u3480 2C2E                     u2840 1912  
                   u2760 1840                     u2680 176A                     u3560 2B48  
                   u3640 2D06                     u3800 266A                     u3720 348C  
                   u4360 12DC                     u4280 1118                     u4520 2E20  
                   u4600 1A92                     u4441 2960                     u2921 2204  
                   u3481 2C2A                     u2841 190E                     u2761 183C  
                   u2681 1766                     u3561 2B44                     u3545 2AFC  
                   u3801 2666                     u3721 3488                     u4361 12D8  
                   u4281 1114                     u4521 2E1C                     u4450 299A  
                   u2930 224C                     u3490 2C4C                     u2850 192E  
                   u2770 1856                     u2690 17A0                     u3570 2B70  
                   u3650 2D24                     u3810 268E                     u3730 33A4  
                   u4370 130A                     u4290 1132                     u4530 2E3C  
                   u4610 1AA8                     u4451 2996                     u2931 2248  
                   u3491 2C48                     u2851 192A                     u2771 1852  
                   u2691 179C                     u3571 2B6C                     u3651 2D20  
                   u3731 339E                     u4371 1306                     u4291 112E  
                   u4531 2E38                     u4611 1AA4                     u4460 29B6  
                   u2940 225E                     u2780 186A                     u3580 2B90  
                   u3660 2D4C                     u3820 26AA                     u2860 3660  
                   u3740 33A6                     u4380 138E                     u3900 0852  
                   u4540 2E4E                     u4620 1AD8                     u4700 336A  
                   u4461 29B2                     u2941 225A                     u2781 1866  
                   u3581 2B8C                     u3661 2D48                     u3645 2CFC  
                   u3821 26A6                     u2861 365C                     u3717 3470  
                   u4381 138A                     u3901 084E                     u4541 2E4A  
                   u4621 1AD4                     u4701 3366                     u4710 33F8  
                   u4470 2A6C                     u2950 226E                     u2790 1884  
                   u3590 2BA0                     u3670 2D76                     u3830 26FE  
                   u2870 3774                     u3750 33BC                     u4390 13A8  
                   u3910 08A2                     u4550 2E76                     u4630 1B18  
                   u4471 2A66                     u2951 226A                     u2791 1880  
                   u3591 2B9C                     u3671 2D72                     u3815 2684  
                   u2871 3770                     u3751 33B8                     u4391 13A4  
                   u3911 089E                     u4551 2E72                     u4631 1B14  
                   u4720 3420                     u4800 28B2                     u4480 2A6E  
                   u2960 22AE                     u3840 271A                     u3760 25AE  
                   u2880 36D4                     u3920 08B0                     u4640 1B5A  
                   u4560 1966                     u4801 28AE                     u2961 22AA  
                   u3841 2716                     u2881 36CE                     u3921 08AC  
                   u4641 1B56                     u4561 1962                     u4730 3430  
                   u4810 28C2                     u4490 2A84                     u2970 22EE  
                   u3690 2DB0                     u3850 2756                     u3770 25DC  
                   u2890 36D6                     u3930 08C2                     u4650 1C08  
                   u4570 19AE                     u4731 342C                     u4811 28BE  
                   u4491 2A80                     u2971 22EA                     u3691 2DAA  
                   u3851 2752                     u3835 26F4                     u3771 25D8  
                   u3931 08BE                     u4651 1C04                     u4571 19AA  
                   u4740 37D2                     u4820 28D0                     u3860 3744  
                   u2980 2364                     u3780 25FE                     u3940 090A  
                   u4660 1C6E                     u4580 19E8                     u4741 37CE  
                   u4717 33EE                     u4821 28CC                     u3861 373E  
                   u2981 2360                     u3685 2D88                     u3781 25FA  
                   u3765 25A4                     u3941 0906                     u4661 1C68  
                   u4581 19E4                     u4830 290A                     u4750 278A  
                   u3870 3746                     u2990 2386                     u3950 0938  
                   u4670 1C70                     u4590 1A90                     u4727 3416  
                   u4831 2906                     u4751 2786                     u2991 2382  
                   u3951 0932                     u4591 1A8A                     u4840 2918  
                   u4760 2798                     u3880 354E                     u3960 093A  
                   u4680 1C86                     u4841 2914                     u4761 2794  
                   u3881 354A                     u4681 1C82                     u4770 27F4  
                   u3890 357C                     u3970 0952                     u4690 1D22  
                   u4771 27F0                     u3891 3578                     u3795 2612  
                   u3971 094E                     u4691 1D1E                     u4780 284A  
                   u3796 261C                     u3980 09DE                     u4781 2846  
                   u3797 262C                     u3981 09DA                     u4790 2894  
                   u3990 0A0C                     u4791 2890                     u3991 0A06  
                   u4857 2F50                     u4867 369A                     u4877 3788  
                   u4887 35A8                     u4897 35CE                     _dbuf 0100  
                   _atoi 292C                     _main 2E9A       __size_of_LCD_Begin 0034  
                   _prec 00C8                     _nout 00C4                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9   __size_of_LCD_setCursor 0056  
       __end_of_ADC_Read 37E4            ___fpclassifyf 2CC6                     prodh 000FF4  
                   prodl 000FF3       __size_of_LCD_Print 005E                     start 0000  
        ___fldiv@new_exp 0012             ___param_bank 000000                    ??_pad 0017  
       __end_of_LCD_Char 36A4            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 1942                    ?_main 0001          __end_of___fldiv 2566  
        __end_of___awdiv 31B8          __end_of___flneg 3714                    _ADRES 000FC3  
                  STR_11 0826                    STR_13 0826          __end_of___awmod 3268  
        __end_of___flmul 21CC          __end_of___flsub 361E          __end_of___fltol 2BC2  
        ___awdiv@divisor 0003          ___awdiv@counter 0005             vfpfcnvrt@fmt 0047  
                  _TRISD 000F95                    _flags 00CA                    _fputc 2F64  
                  _fputs 361E          __end_of_isdigit 374C                    atoi@n 0015  
                  pad@fp 0011                    atoi@s 0008        __end_of_ADC_Begin 3844  
                  _width 00C6                    _putch 3844          __end_of_isspace 3588  
        __end_of_isupper 36DC                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 3536           ?___fpclassifyf 0001          __end_of_tolower 33D4  
        __end_of_strncmp 2E9A             main@voltaje1 00B8          __initialization 380A  
           __end_of_atoi 2ABC             __end_of_main 2F64                   ??_atoi 000A  
                 ??_main 005D            _LCD_setCursor 348E           LCD_setCursor@x 0006  
         LCD_setCursor@y 0003        __end_of_LCD_Begin 37B6            __activetblptr 000002  
      __end_of_LCD_Print 3432                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0             LCD_Print@str 0003                   ?_fputc 0001  
                 ?_fputs 000A         ___awdiv@dividend 0001                   ?_putch 0001  
                 _OSCCON 000FD3         __end_of___xxtofl 292C             vfprintf@cfmt 005B  
                 ___flge 2BC2                   ___fleq 3268                ??___fladd 0009  
                 ___wmul 37E4                ??___fldiv 0009                ??___awdiv 0005  
              ??___flneg 0005                ??___awmod 0005                ??___flmul 001C  
              ??___flsub 0035                ??___fltol 0005                   _efgtoa 082A  
                 _floorf 2566                   clear_0 3810                   clear_1 381C  
       ___awdiv@quotient 0007          ___awmod@divisor 0003           ?_LCD_setCursor 0003  
        ___awmod@counter 0005                   pad@buf 0013     __size_of_LCD_Command 0050  
                 _strcpy 3432                   _strlen 374C                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
              ?_ADC_Read 0001          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3374                ??_sprintf 005D                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 002D               ___flge@ff2 0031  
        ??___fpclassifyf 0005             ___xxtofl@arg 0010             ___xxtofl@exp 000F  
           ___xxtofl@val 0006               ___fleq@ff1 0001               ___fleq@ff2 0005  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 3822  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
              LCD_Char@x 0002           __pcstackCOMRAM 0001            __end_of_fputc 302E  
          __end_of_fputs 3662            __end_of_putch 3846       ADC_Begin@N_canales 0001  
             ??_ADC_Read 0003                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00BC               __pbssBANK1 0100  
             ??_LCD_Char 0001               _efgtoa$670 0060               _efgtoa$671 0062  
             _efgtoa$680 0066               _efgtoa$681 0068               _efgtoa$682 006A  
             _efgtoa$676 0064                  ?___flge 002D                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 0039          ??_LCD_setCursor 0004  
                ?_floorf 001A                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0006                  _GO_DONE 007E11       __size_of_vfpfcnvrt 0460  
              _ADC_Begin 382C                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___fladd 1482  
                ___fldiv 21CC                  ___awdiv 30F4                  ___flneg 36DC  
                ___awmod 31B8                  ___flmul 1DA2                  ___flsub 35D8  
                ___fltol 2ABC          __size_of___wmul 0026                ?_vfprintf 0098  
           __psmallconst 0800          __size_of_efgtoa 0C58          __size_of_floorf 0212  
                __pcinit 380A                  __ramtop 0800                  __ptext0 2E9A  
                __ptext1 34E4                  __ptext2 3312                  __ptext3 1942  
                __ptext4 2DC4                  __ptext5 082A                  __ptext6 3374  
                __ptext7 36A4                  __ptext8 3432                  __ptext9 302E  
        __size_of_strcpy 005C          __size_of_strlen 0036             __size_of_pad 00C6  
                _isdigit 3714               ??___xxtofl 000A         ___awmod@dividend 0001  
                _isspace 3536                  _isupper 36A4                  efgtoa@c 003F  
                efgtoa@d 0078                  efgtoa@e 0090                  efgtoa@f 003B  
                efgtoa@g 008C                  efgtoa@h 0082                  efgtoa@i 008A  
                efgtoa@l 0086                  efgtoa@m 0072                  efgtoa@n 0092  
                efgtoa@p 007C                  efgtoa@t 006C                  efgtoa@u 0094  
                efgtoa@w 007E                _LCD_Begin 3782                  atoi@neg 000E  
              _LCD_Print 33D4                  _sprintf 34E4                  _tolower 3374  
                _strncmp 2DC4     end_of_initialization 3822                  floorf@e 0028  
                floorf@m 0024                  floorf@u 002A                  floorf@x 001A  
                fputc@fp 0003           LCD_Command@dat 0002            __Lmediumconst 0000  
                fputs@fp 000C               ?_ADC_Begin 0001        __end_of_vfpfcnvrt 1DA2  
             efgtoa@mode 0081               efgtoa@sign 007A                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 005B                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 0010  
          ___xxtofl@sign 000E               ?_LCD_Begin 0001              ___fldiv@grs 0014  
            ___fldiv@rem 000D        __size_of_ADC_Read 002E               ?_LCD_Print 0003  
            ___flmul@grs 0021               main@buffer 00B0        __size_of_LCD_Char 0042  
          ??_LCD_Command 0001           __end_of___flge 2CC6           __end_of___fleq 3312  
            vfpfcnvrt@ap 0049              vfpfcnvrt@ct 0057              vfpfcnvrt@fp 0045  
         __end_of___wmul 380A           __end_of_efgtoa 1482           __end_of_floorf 2778  
             floorf@F527 00BC           __end_of_strcpy 348E           __end_of_strlen 3782  
    start_initialization 380A              __end_of_pad 30F4    __end_of___fpclassifyf 2DC4  
            ??_ADC_Begin 0001              vfprintf@fmt 009A                 ??___flge 0035  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0040  
               ??_floorf 001E                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 0005  
              ___fldiv@b 0001      __end_of_LCD_Command 35D8                ___flmul@a 0018  
              ___flmul@b 0014                ___flsub@a 0031                ___flsub@b 002D  
          __pcstackBANK0 0060              ??_LCD_Begin 0003        __size_of___xxtofl 01B4  
            ??_LCD_Print 0005                 ?___fladd 0001                 ?___fldiv 0001  
               ?___awdiv 0001                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 0014                 ?___flsub 002D                 ?___fltol 0001  
  __end_of_LCD_setCursor 34E4        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0001                 _ADC_Read 37B6                 ?_isspace 0001  
               ?_isupper 0001                 ?_sprintf 009E                 ?_tolower 0007  
         __size_of_fputc 00CA           __size_of_fputs 0044                 ?_strncmp 0001  
         __size_of_putch 0002                 _LCD_Char 3662           ___wmul@product 0005  
  LCD_setCursor@location 0007              _LCD_Command 3588                _vfpfcnvrt 1942  
      ___wmul@multiplier 0001               vfpfcnvrt@c 005A               vfpfcnvrt@f 0053  
               __Hrparam 0000               vfprintf@ap 009C                 __Lrparam 0000  
             vfprintf@fp 0098            ADC_Read@canal 0005            ADC_Read@valor 0003  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 0045  
     ___fpclassifyf@F465 00C0               sprintf@fmt 00A0                 ___xxtofl 2778  
               _atoi$734 0010                 _atoi$735 0014                 _atoi$736 0012  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 374C  
               __ptext11 361E                 __ptext20 1DA2                 __ptext12 2F64  
               __ptext21 2BC2                 __ptext13 3844                 __ptext30 2778  
               __ptext22 3268                 __ptext14 2566                 __ptext31 348E  
               __ptext23 21CC                 __ptext15 2CC6                 __ptext32 33D4  
               __ptext24 31B8                 __ptext16 2ABC                 __ptext33 3662  
               __ptext25 30F4                 __ptext17 35D8                 __ptext34 3782  
               __ptext26 292C                 __ptext18 1482                 __ptext35 3588  
               __ptext27 3536                 __ptext19 36DC                 __ptext36 37B6  
               __ptext28 3714                 __ptext37 382C                 __ptext29 37E4  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0001         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 00CA                 efgtoa@fp 0039                 efgtoa@ne 0070  
               efgtoa@pp 006E                 efgtoa@ou 0074                 _vfprintf 3312  
            _isspace$765 0007                 isdigit@c 0001                sprintf@ap 00A8  
               isspace@c 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003              efgtoa@nmode 0080  
            ??_vfpfcnvrt 004B            _vfpfcnvrt$700 0051            _vfpfcnvrt$696 004F  
               sprintf@f 00AA                 tolower@c 0007                 sprintf@s 009E  
 __size_of___fpclassifyf 00FE                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A            ___fladd@signs 000D             ___fladd@aexp 000E  
           ___fladd@bexp 000F  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jun 18 21:20:58 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4550 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     _TMR0	set	4054
    90  0000                     _LATD	set	3980
    91  0000                     _TRISD	set	3989
    92  0000                     _PORTBbits	set	3969
    93  0000                     _T0CON	set	4053
    94  0000                     _TRISBbits	set	3987
    95  0000                     _TRISCbits	set	3988
    96  0000                     _OSCCON	set	4051
    97  0000                     _TMR0ON	set	32431
    98  0000                     _TMR0IF	set	32658
    99  0000                     _LATC0	set	31832
   100                           
   101                           	psect	smallconst
   102  000800                     __psmallconst:
   103                           	callstack 0
   104  000800  00                 	db	0
   105  000801                     STR_1:
   106  000801  44                 	db	68	;'D'
   107  000802  69                 	db	105	;'i'
   108  000803  73                 	db	115	;'s'
   109  000804  74                 	db	116	;'t'
   110  000805  61                 	db	97	;'a'
   111  000806  6E                 	db	110	;'n'
   112  000807  63                 	db	99	;'c'
   113  000808  69                 	db	105	;'i'
   114  000809  61                 	db	97	;'a'
   115  00080A  20                 	db	32
   116  00080B  65                 	db	101	;'e'
   117  00080C  73                 	db	115	;'s'
   118  00080D  20                 	db	32
   119  00080E  3A                 	db	58	;':'
   120  00080F  20                 	db	32
   121  000810  00                 	db	0
   122  000811                     STR_2:
   123  000811  25                 	db	37
   124  000812  35                 	db	53	;'5'
   125  000813  2E                 	db	46
   126  000814  31                 	db	49	;'1'
   127  000815  66                 	db	102	;'f'
   128  000816  00                 	db	0
   129  000817                     STR_4:
   130  000817  49                 	db	73	;'I'
   131  000818  4E                 	db	78	;'N'
   132  000819  46                 	db	70	;'F'
   133  00081A  00                 	db	0
   134  00081B                     STR_8:
   135  00081B  4E                 	db	78	;'N'
   136  00081C  41                 	db	65	;'A'
   137  00081D  4E                 	db	78	;'N'
   138  00081E  00                 	db	0
   139  00081F                     STR_5:
   140  00081F  69                 	db	105	;'i'
   141  000820  6E                 	db	110	;'n'
   142  000821  66                 	db	102	;'f'
   143  000822  00                 	db	0
   144  000823                     STR_9:
   145  000823  6E                 	db	110	;'n'
   146  000824  61                 	db	97	;'a'
   147  000825  6E                 	db	110	;'n'
   148  000826  00                 	db	0
   149  000827                     STR_12:
   150  000827  6C                 	db	108	;'l'
   151  000828  66                 	db	102	;'f'
   152  000829  00                 	db	0
   153  00082A                     STR_3:
   154  00082A  63                 	db	99	;'c'
   155  00082B  6D                 	db	109	;'m'
   156  00082C  00                 	db	0
   157  00082D  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  00392C                     __pcinit:
   163                           	callstack 0
   164  00392C                     start_initialization:
   165                           	callstack 0
   166  00392C                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Clear objects allocated to BANK1 (80 bytes)
   170  00392C  EE01  F000         	lfsr	0,__pbssBANK1
   171  003930  0E50               	movlw	80
   172  003932                     clear_0:
   173  003932  6AEE               	clrf	postinc0,c
   174  003934  06E8               	decf	wreg,f,c
   175  003936  E1FD               	bnz	clear_0
   176                           
   177                           ; Clear objects allocated to BANK0 (12 bytes)
   178  003938  EE00  F0B8         	lfsr	0,__pbssBANK0
   179  00393C  0E0C               	movlw	12
   180  00393E                     clear_1:
   181  00393E  6AEE               	clrf	postinc0,c
   182  003940  06E8               	decf	wreg,f,c
   183  003942  E1FD               	bnz	clear_1
   184                           
   185                           ; Clear objects allocated to COMRAM (4 bytes)
   186  003944  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   187  003946  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   188  003948  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   189  00394A  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   190  00394C                     end_of_initialization:
   191                           	callstack 0
   192  00394C                     __end_of__initialization:
   193                           	callstack 0
   194  00394C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   195  00394E  6EF8               	movwf	tblptru,c
   196  003950  0100               	movlb	0
   197  003952  EFA3  F019         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMRAM
   200  00005C                     __pbssCOMRAM:
   201                           	callstack 0
   202  00005C                     _prec:
   203                           	callstack 0
   204  00005C                     	ds	2
   205  00005E                     _flags:
   206                           	callstack 0
   207  00005E                     	ds	2
   208                           
   209                           	psect	bssBANK0
   210  0000B8                     __pbssBANK0:
   211                           	callstack 0
   212  0000B8                     floorf@F527:
   213                           	callstack 0
   214  0000B8                     	ds	4
   215  0000BC                     ___fpclassifyf@F465:
   216                           	callstack 0
   217  0000BC                     	ds	4
   218  0000C0                     _nout:
   219                           	callstack 0
   220  0000C0                     	ds	2
   221  0000C2                     _width:
   222                           	callstack 0
   223  0000C2                     	ds	2
   224                           
   225                           	psect	bssBANK1
   226  000100                     __pbssBANK1:
   227                           	callstack 0
   228  000100                     _dbuf:
   229                           	callstack 0
   230  000100                     	ds	80
   231                           
   232                           	psect	cstackBANK0
   233  000060                     __pcstackBANK0:
   234                           	callstack 0
   235  000060                     _efgtoa$805:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000060                     	ds	2
   240  000062                     _efgtoa$806:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244  000062                     	ds	2
   245  000064                     _efgtoa$811:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x4
   249  000064                     	ds	2
   250  000066                     _efgtoa$815:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x6
   254  000066                     	ds	2
   255  000068                     _efgtoa$816:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x8
   259  000068                     	ds	2
   260  00006A                     _efgtoa$817:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xA
   264  00006A                     	ds	2
   265  00006C                     efgtoa@t:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xC
   269  00006C                     	ds	2
   270  00006E                     efgtoa@pp:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xE
   274  00006E                     	ds	2
   275  000070                     efgtoa@ne:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x10
   279  000070                     	ds	2
   280  000072                     efgtoa@m:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x12
   284  000072                     	ds	2
   285  000074                     efgtoa@ou:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x14
   289  000074                     	ds	4
   290  000078                     efgtoa@d:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x18
   294  000078                     	ds	2
   295  00007A                     efgtoa@sign:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x1A
   299  00007A                     	ds	2
   300  00007C                     efgtoa@p:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x1C
   304  00007C                     	ds	2
   305  00007E                     efgtoa@w:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x1E
   309  00007E                     	ds	2
   310  000080                     efgtoa@nmode:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x20
   314  000080                     	ds	1
   315  000081                     efgtoa@mode:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x21
   319  000081                     	ds	1
   320  000082                     efgtoa@h:
   321                           	callstack 0
   322                           
   323                           ; 4 bytes @ 0x22
   324  000082                     	ds	4
   325  000086                     efgtoa@l:
   326                           	callstack 0
   327                           
   328                           ; 4 bytes @ 0x26
   329  000086                     	ds	4
   330  00008A                     efgtoa@i:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x2A
   334  00008A                     	ds	2
   335  00008C                     efgtoa@g:
   336                           	callstack 0
   337                           
   338                           ; 4 bytes @ 0x2C
   339  00008C                     	ds	4
   340  000090                     efgtoa@e:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x30
   344  000090                     	ds	2
   345  000092                     efgtoa@n:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x32
   349  000092                     	ds	2
   350  000094                     efgtoa@u:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x34
   354  000094                     	ds	4
   355  000098                     ?_sprintf:
   356                           	callstack 0
   357  000098                     sprintf@s:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x38
   361  000098                     	ds	2
   362  00009A                     sprintf@fmt:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x3A
   366  00009A                     	ds	8
   367  0000A2                     sprintf@ap:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x42
   371  0000A2                     	ds	2
   372  0000A4                     sprintf@f:
   373                           	callstack 0
   374                           
   375                           ; 6 bytes @ 0x44
   376  0000A4                     	ds	6
   377  0000AA                     main@distancia_str:
   378                           	callstack 0
   379                           
   380                           ; 10 bytes @ 0x4A
   381  0000AA                     	ds	10
   382  0000B4                     main@distancia:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x54
   386  0000B4                     	ds	4
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	callstack 0
   391  000001                     ??_LCD_Command:
   392  000001                     ??_LCD_Char:
   393  000001                     ?_strlen:
   394                           	callstack 0
   395  000001                     ?___fpclassifyf:
   396                           	callstack 0
   397  000001                     ?_isupper:
   398                           	callstack 0
   399  000001                     ?_isdigit:
   400                           	callstack 0
   401  000001                     ?_strncmp:
   402                           	callstack 0
   403  000001                     ?_isspace:
   404                           	callstack 0
   405  000001                     ?___wmul:
   406                           	callstack 0
   407  000001                     ?___awdiv:
   408                           	callstack 0
   409  000001                     ?___awmod:
   410                           	callstack 0
   411  000001                     ?___fladd:
   412                           	callstack 0
   413  000001                     ?___fldiv:
   414                           	callstack 0
   415  000001                     ?___flmul:
   416                           	callstack 0
   417  000001                     ?___flneg:
   418                           	callstack 0
   419  000001                     ?___fltol:
   420                           	callstack 0
   421  000001                     ?___xxtofl:
   422                           	callstack 0
   423  000001                     ___wmul@multiplier:
   424                           	callstack 0
   425  000001                     ___awdiv@dividend:
   426                           	callstack 0
   427  000001                     ___awmod@dividend:
   428                           	callstack 0
   429  000001                     isdigit@c:
   430                           	callstack 0
   431  000001                     isspace@c:
   432                           	callstack 0
   433  000001                     isupper@c:
   434                           	callstack 0
   435  000001                     fputc@c:
   436                           	callstack 0
   437  000001                     strcpy@dest:
   438                           	callstack 0
   439  000001                     strlen@s:
   440                           	callstack 0
   441  000001                     strncmp@_l:
   442                           	callstack 0
   443  000001                     ___fleq@ff1:
   444                           	callstack 0
   445  000001                     ___flneg@f1:
   446                           	callstack 0
   447  000001                     ___fltol@f1:
   448                           	callstack 0
   449  000001                     ___fladd@b:
   450                           	callstack 0
   451  000001                     ___fldiv@b:
   452                           	callstack 0
   453  000001                     ___flmul@b:
   454                           	callstack 0
   455  000001                     ___xxtofl@val:
   456                           	callstack 0
   457  000001                     ___fpclassifyf@x:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x0
   461  000001                     	ds	1
   462  000002                     LCD_Command@dat:
   463                           	callstack 0
   464  000002                     LCD_Char@x:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x1
   468  000002                     	ds	1
   469  000003                     ??_LCD_Begin:
   470  000003                     ??_isupper:
   471  000003                     ??_isdigit:
   472  000003                     ??_isspace:
   473  000003                     LCD_setCursor@y:
   474                           	callstack 0
   475  000003                     LCD_Print@str:
   476                           	callstack 0
   477  000003                     ___wmul@multiplicand:
   478                           	callstack 0
   479  000003                     ___awdiv@divisor:
   480                           	callstack 0
   481  000003                     ___awmod@divisor:
   482                           	callstack 0
   483  000003                     fputc@fp:
   484                           	callstack 0
   485  000003                     strcpy@src:
   486                           	callstack 0
   487  000003                     strlen@a:
   488                           	callstack 0
   489  000003                     strncmp@_r:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2
   493  000003                     	ds	1
   494  000004                     ??_LCD_setCursor:
   495                           
   496                           ; 1 bytes @ 0x3
   497  000004                     	ds	1
   498  000005                     ??_fputc:
   499  000005                     ??___fpclassifyf:
   500  000005                     ??_strcpy:
   501  000005                     ??___fltol:
   502  000005                     ??___xxtofl:
   503  000005                     ___awdiv@counter:
   504                           	callstack 0
   505  000005                     ___awmod@counter:
   506                           	callstack 0
   507  000005                     ___wmul@product:
   508                           	callstack 0
   509  000005                     strncmp@n:
   510                           	callstack 0
   511  000005                     ___fleq@ff2:
   512                           	callstack 0
   513  000005                     ___fladd@a:
   514                           	callstack 0
   515  000005                     ___fldiv@a:
   516                           	callstack 0
   517  000005                     ___flmul@a:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x4
   521  000005                     	ds	1
   522  000006                     LCD_setCursor@x:
   523                           	callstack 0
   524  000006                     ___awdiv@sign:
   525                           	callstack 0
   526  000006                     ___awmod@sign:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x5
   530  000006                     	ds	1
   531  000007                     ??_strncmp:
   532  000007                     ?_tolower:
   533                           	callstack 0
   534  000007                     LCD_setCursor@location:
   535                           	callstack 0
   536  000007                     _isspace$901:
   537                           	callstack 0
   538  000007                     ___awdiv@quotient:
   539                           	callstack 0
   540  000007                     strcpy@s:
   541                           	callstack 0
   542  000007                     tolower@c:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546  000007                     	ds	1
   547  000008                     ?_atoi:
   548                           	callstack 0
   549  000008                     atoi@s:
   550                           	callstack 0
   551  000008                     strncmp@l:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x7
   555  000008                     	ds	1
   556  000009                     ??___fladd:
   557  000009                     ??___fldiv:
   558  000009                     ??___flmul:
   559  000009                     ??_tolower:
   560  000009                     ??___fleq:
   561  000009                     ___fltol@sign1:
   562                           	callstack 0
   563  000009                     ___xxtofl@sign:
   564                           	callstack 0
   565  000009                     ___fpclassifyf@e:
   566                           	callstack 0
   567  000009                     strcpy@d:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x8
   571  000009                     	ds	1
   572  00000A                     ??_atoi:
   573  00000A                     ___fltol@exp1:
   574                           	callstack 0
   575  00000A                     ___xxtofl@exp:
   576                           	callstack 0
   577  00000A                     fputs@s:
   578                           	callstack 0
   579  00000A                     strncmp@r:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x9
   583  00000A                     	ds	1
   584  00000B                     ___xxtofl@arg:
   585                           	callstack 0
   586  00000B                     ___fpclassifyf@u:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0xA
   590  00000B                     	ds	1
   591  00000C                     fputs@fp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xB
   595  00000C                     	ds	1
   596  00000D                     ___fladd@signs:
   597                           	callstack 0
   598  00000D                     ___flmul@sign:
   599                           	callstack 0
   600  00000D                     _tolower$965:
   601                           	callstack 0
   602  00000D                     ___fldiv@rem:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0xC
   606  00000D                     	ds	1
   607  00000E                     ___fladd@aexp:
   608                           	callstack 0
   609  00000E                     fputs@c:
   610                           	callstack 0
   611  00000E                     atoi@neg:
   612                           	callstack 0
   613  00000E                     ___flmul@grs:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0xD
   617  00000E                     	ds	1
   618  00000F                     ___fladd@bexp:
   619                           	callstack 0
   620  00000F                     fputs@i:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xE
   624  00000F                     	ds	1
   625  000010                     ___fladd@grs:
   626                           	callstack 0
   627  000010                     _atoi$870:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xF
   631  000010                     	ds	1
   632  000011                     ?_pad:
   633                           	callstack 0
   634  000011                     ___fldiv@sign:
   635                           	callstack 0
   636  000011                     pad@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x10
   640  000011                     	ds	1
   641  000012                     ___flmul@aexp:
   642                           	callstack 0
   643  000012                     ___fldiv@new_exp:
   644                           	callstack 0
   645  000012                     _atoi$872:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x11
   649  000012                     	ds	1
   650  000013                     ___flmul@bexp:
   651                           	callstack 0
   652  000013                     pad@buf:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x12
   656  000013                     	ds	1
   657  000014                     _atoi$871:
   658                           	callstack 0
   659  000014                     ___fldiv@grs:
   660                           	callstack 0
   661  000014                     ___flmul@prod:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x13
   665  000014                     	ds	1
   666  000015                     pad@p:
   667                           	callstack 0
   668  000015                     atoi@n:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x14
   672  000015                     	ds	2
   673  000017                     ??_pad:
   674                           
   675                           ; 1 bytes @ 0x16
   676  000017                     	ds	1
   677  000018                     ___fldiv@bexp:
   678                           	callstack 0
   679  000018                     ___flmul@temp:
   680                           	callstack 0
   681  000018                     pad@i:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x17
   685  000018                     	ds	1
   686  000019                     ___fldiv@aexp:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x18
   690  000019                     	ds	1
   691  00001A                     ?_Ultrasonico_read:
   692                           	callstack 0
   693  00001A                     ?___flsub:
   694                           	callstack 0
   695  00001A                     ?_floorf:
   696                           	callstack 0
   697  00001A                     pad@w:
   698                           	callstack 0
   699  00001A                     ___flge@ff1:
   700                           	callstack 0
   701  00001A                     ___flsub@b:
   702                           	callstack 0
   703  00001A                     floorf@x:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x19
   707  00001A                     	ds	4
   708  00001E                     ??_floorf:
   709  00001E                     Ultrasonico_read@tiempo:
   710                           	callstack 0
   711  00001E                     ___flge@ff2:
   712                           	callstack 0
   713  00001E                     ___flsub@a:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x1D
   717  00001E                     	ds	4
   718  000022                     ??___flge:
   719                           
   720                           ; 1 bytes @ 0x21
   721  000022                     	ds	2
   722  000024                     floorf@m:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x23
   726  000024                     	ds	4
   727  000028                     floorf@e:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x27
   731  000028                     	ds	2
   732  00002A                     floorf@u:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x29
   736  00002A                     	ds	4
   737  00002E                     ?_efgtoa:
   738                           	callstack 0
   739  00002E                     efgtoa@fp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x2D
   743  00002E                     	ds	2
   744  000030                     efgtoa@f:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x2F
   748  000030                     	ds	4
   749  000034                     efgtoa@c:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x33
   753  000034                     	ds	1
   754  000035                     ??_efgtoa:
   755                           
   756                           ; 1 bytes @ 0x34
   757  000035                     	ds	5
   758  00003A                     ?_vfpfcnvrt:
   759                           	callstack 0
   760  00003A                     vfpfcnvrt@fp:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x39
   764  00003A                     	ds	2
   765  00003C                     vfpfcnvrt@fmt:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x3B
   769  00003C                     	ds	2
   770  00003E                     vfpfcnvrt@ap:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x3D
   774  00003E                     	ds	2
   775  000040                     ??_vfpfcnvrt:
   776                           
   777                           ; 1 bytes @ 0x3F
   778  000040                     	ds	4
   779  000044                     _vfpfcnvrt$831:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x43
   783  000044                     	ds	2
   784  000046                     _vfpfcnvrt$832:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x45
   788  000046                     	ds	2
   789  000048                     _vfpfcnvrt$836:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x47
   793  000048                     	ds	2
   794  00004A                     vfpfcnvrt@f:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x49
   798  00004A                     	ds	4
   799  00004E                     vfpfcnvrt@ct:
   800                           	callstack 0
   801                           
   802                           ; 3 bytes @ 0x4D
   803  00004E                     	ds	3
   804  000051                     vfpfcnvrt@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x50
   808  000051                     	ds	1
   809  000052                     ?_vfprintf:
   810                           	callstack 0
   811  000052                     vfprintf@fp:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x51
   815  000052                     	ds	2
   816  000054                     vfprintf@fmt:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x53
   820  000054                     	ds	2
   821  000056                     vfprintf@ap:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x55
   825  000056                     	ds	2
   826  000058                     vfprintf@cfmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x57
   830  000058                     	ds	2
   831  00005A                     ??_main:
   832                           
   833                           ; 1 bytes @ 0x59
   834  00005A                     	ds	2
   835                           
   836 ;;
   837 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   838 ;;
   839 ;; *************** function _main *****************
   840 ;; Defined at:
   841 ;;		line 17 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  distancia_st   10   74[BANK0 ] unsigned char [10]
   846 ;;  distancia       4   84[BANK0 ] float 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2   36[None  ] int 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0      14       0       0       0       0       0       0       0
   858 ;;      Temps:          2       0       0       0       0       0       0       0       0
   859 ;;      Totals:         2      14       0       0       0       0       0       0       0
   860 ;;Total ram usage:       16 bytes
   861 ;; Hardware stack levels required when called:    8
   862 ;; This function calls:
   863 ;;		_LCD_Begin
   864 ;;		_LCD_Print
   865 ;;		_LCD_setCursor
   866 ;;		_Ultrasonico_Begin
   867 ;;		_Ultrasonico_read
   868 ;;		_sprintf
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text0
   875  003346                     __ptext0:
   876                           	callstack 0
   877  003346                     _main:
   878                           	callstack 23
   879  003346                     
   880                           ;main.c: 19:     OSCCON=0x72;
   881  003346  0E72               	movlw	114
   882  003348  6ED3               	movwf	211,c	;volatile
   883  00334A                     
   884                           ;main.c: 21:     float distancia;;main.c: 22:     char distancia_str[10];;main.c: 24:   
      +                            Ultrasonico_Begin();
   885  00334A  ECBE  F01C         	call	_Ultrasonico_Begin	;wreg free
   886  00334E                     
   887                           ;main.c: 25:     LCD_Begin();
   888  00334E  EC7C  F01C         	call	_LCD_Begin	;wreg free
   889  003352                     
   890                           ;main.c: 26:     LCD_setCursor(0,0);
   891  003352  0E00               	movlw	0
   892  003354  6E03               	movwf	LCD_setCursor@y^0,c
   893  003356  0E00               	movlw	0
   894  003358  EC02  F01B         	call	_LCD_setCursor
   895  00335C                     
   896                           ;main.c: 27:     LCD_Print("Distancia es : ");
   897  00335C  0E01               	movlw	low STR_1
   898  00335E  6E03               	movwf	LCD_Print@str^0,c
   899  003360  0E08               	movlw	high STR_1
   900  003362  6E04               	movwf	(LCD_Print@str+1)^0,c
   901  003364  ECA5  F01A         	call	_LCD_Print	;wreg free
   902  003368                     l4018:
   903                           
   904                           ;main.c: 31:         distancia=Ultrasonico_read();
   905  003368  ECF6  F019         	call	_Ultrasonico_read	;wreg free
   906  00336C  C01A  F0B4         	movff	?_Ultrasonico_read,main@distancia
   907  003370  C01B  F0B5         	movff	?_Ultrasonico_read+1,main@distancia+1
   908  003374  C01C  F0B6         	movff	?_Ultrasonico_read+2,main@distancia+2
   909  003378  C01D  F0B7         	movff	?_Ultrasonico_read+3,main@distancia+3
   910  00337C                     
   911                           ;main.c: 32:         sprintf(distancia_str,"%5.1f",distancia);
   912  00337C  0EAA               	movlw	low main@distancia_str
   913  00337E  0100               	movlb	0	; () banked
   914  003380  6F98               	movwf	sprintf@s& (0+255),b
   915  003382  0E00               	movlw	high main@distancia_str
   916  003384  6F99               	movwf	(sprintf@s+1)& (0+255),b
   917  003386  0E11               	movlw	low STR_2
   918  003388  6F9A               	movwf	sprintf@fmt& (0+255),b
   919  00338A  0E08               	movlw	high STR_2
   920  00338C  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
   921  00338E  C0B4  F09C         	movff	main@distancia,?_sprintf+4
   922  003392  C0B5  F09D         	movff	main@distancia+1,?_sprintf+5
   923  003396  C0B6  F09E         	movff	main@distancia+2,?_sprintf+6
   924  00339A  C0B7  F09F         	movff	main@distancia+3,?_sprintf+7
   925  00339E  EC2D  F01B         	call	_sprintf	;wreg free
   926  0033A2                     
   927                           ;main.c: 33:         LCD_setCursor(0,1);
   928  0033A2  0E01               	movlw	1
   929  0033A4  6E03               	movwf	LCD_setCursor@y^0,c
   930  0033A6  0E00               	movlw	0
   931  0033A8  EC02  F01B         	call	_LCD_setCursor
   932  0033AC                     
   933                           ;main.c: 34:         LCD_Print(distancia_str);
   934  0033AC  0EAA               	movlw	low main@distancia_str
   935  0033AE  6E03               	movwf	LCD_Print@str^0,c
   936  0033B0  0E00               	movlw	high main@distancia_str
   937  0033B2  6E04               	movwf	(LCD_Print@str+1)^0,c
   938  0033B4  ECA5  F01A         	call	_LCD_Print	;wreg free
   939  0033B8                     
   940                           ;main.c: 35:         LCD_setCursor(6,1);
   941  0033B8  0E01               	movlw	1
   942  0033BA  6E03               	movwf	LCD_setCursor@y^0,c
   943  0033BC  0E06               	movlw	6
   944  0033BE  EC02  F01B         	call	_LCD_setCursor
   945  0033C2                     
   946                           ;main.c: 36:         LCD_Print("cm");
   947  0033C2  0E2A               	movlw	low STR_3
   948  0033C4  6E03               	movwf	LCD_Print@str^0,c
   949  0033C6  0E08               	movlw	high STR_3
   950  0033C8  6E04               	movwf	(LCD_Print@str+1)^0,c
   951  0033CA  ECA5  F01A         	call	_LCD_Print	;wreg free
   952  0033CE                     
   953                           ;main.c: 37:         _delay((unsigned long)((500)*(8000000/4000.0)));
   954  0033CE  0E06               	movlw	6
   955  0033D0  6E5B               	movwf	(??_main+1)^0,c
   956  0033D2  0E13               	movlw	19
   957  0033D4  6E5A               	movwf	??_main^0,c
   958  0033D6  0EAE               	movlw	174
   959  0033D8                     u4997:
   960  0033D8  2EE8               	decfsz	wreg,f,c
   961  0033DA  D7FE               	bra	u4997
   962  0033DC  2E5A               	decfsz	??_main^0,f,c
   963  0033DE  D7FC               	bra	u4997
   964  0033E0  2E5B               	decfsz	(??_main+1)^0,f,c
   965  0033E2  D7FA               	bra	u4997
   966  0033E4  EFB4  F019         	goto	l4018
   967  0033E8  EF00  F000         	goto	start
   968  0033EC                     __end_of_main:
   969                           	callstack 0
   970                           
   971 ;; *************** function _sprintf *****************
   972 ;; Defined at:
   973 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  s               2   56[BANK0 ] PTR unsigned char 
   976 ;;		 -> main@distancia_str(10), 
   977 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
   978 ;;		 -> STR_2(6), 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  f               6   68[BANK0 ] struct _IO_FILE
   981 ;;  ap              2   66[BANK0 ] PTR void [1]
   982 ;;		 -> ?_sprintf(2), 
   983 ;;  ret             2    0        int 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2   56[BANK0 ] int 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   993 ;;      Params:         0       8       0       0       0       0       0       0       0
   994 ;;      Locals:         0      10       0       0       0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0
   996 ;;      Totals:         0      18       0       0       0       0       0       0       0
   997 ;;Total ram usage:       18 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    7
  1000 ;; This function calls:
  1001 ;;		_vfprintf
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text1
  1008  00365A                     __ptext1:
  1009                           	callstack 0
  1010  00365A                     _sprintf:
  1011                           	callstack 23
  1012  00365A  0E9C               	movlw	low (?_sprintf+4)
  1013  00365C  0100               	movlb	0	; () banked
  1014  00365E  6FA2               	movwf	sprintf@ap& (0+255),b
  1015  003660  0E00               	movlw	high (?_sprintf+4)
  1016  003662  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1017  003664  C098  F0A4         	movff	sprintf@s,sprintf@f
  1018  003668  C099  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1019  00366C                     
  1020                           ; BSR set to: 0
  1021  00366C  0E00               	movlw	0
  1022  00366E  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1023  003670  0E00               	movlw	0
  1024  003672  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1025  003674                     
  1026                           ; BSR set to: 0
  1027  003674  0E00               	movlw	0
  1028  003676  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1029  003678  0E00               	movlw	0
  1030  00367A  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1031  00367C                     
  1032                           ; BSR set to: 0
  1033  00367C  0EA4               	movlw	low sprintf@f
  1034  00367E  6E52               	movwf	vfprintf@fp^0,c
  1035  003680  0E00               	movlw	high sprintf@f
  1036  003682  6E53               	movwf	(vfprintf@fp+1)^0,c
  1037  003684  C09A  F054         	movff	sprintf@fmt,vfprintf@fmt
  1038  003688  C09B  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1039  00368C  0EA2               	movlw	low sprintf@ap
  1040  00368E  6E56               	movwf	vfprintf@ap^0,c
  1041  003690  0E00               	movlw	high sprintf@ap
  1042  003692  6E57               	movwf	(vfprintf@ap+1)^0,c
  1043  003694  EC44  F01A         	call	_vfprintf	;wreg free
  1044  003698  0100               	movlb	0	; () banked
  1045  00369A  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1046  00369C  2598               	addwf	sprintf@s& (0+255),w,b
  1047  00369E  6ED9               	movwf	fsr2l,c
  1048  0036A0  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1049  0036A2  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1050  0036A4  6EDA               	movwf	fsr2h,c
  1051  0036A6  0E00               	movlw	0
  1052  0036A8  6EDF               	movwf	indf2,c
  1053  0036AA                     
  1054                           ; BSR set to: 0
  1055  0036AA  0012               	return		;funcret
  1056  0036AC                     __end_of_sprintf:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _vfprintf *****************
  1060 ;; Defined at:
  1061 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1064 ;;		 -> sprintf@f(6), 
  1065 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1066 ;;		 -> STR_2(6), 
  1067 ;;  ap              2   85[COMRAM] PTR PTR void 
  1068 ;;		 -> sprintf@ap(2), 
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1071 ;;		 -> STR_2(6), 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2   81[COMRAM] int 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         6       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    6
  1088 ;; This function calls:
  1089 ;;		_vfpfcnvrt
  1090 ;; This function is called by:
  1091 ;;		_sprintf
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text2
  1096  003488                     __ptext2:
  1097                           	callstack 0
  1098  003488                     _vfprintf:
  1099                           	callstack 23
  1100  003488                     
  1101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1102  003488  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1103  00348C  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1104  003490                     
  1105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1106  003490  0E00               	movlw	0
  1107  003492  0100               	movlb	0	; () banked
  1108  003494  6FC1               	movwf	(_nout+1)& (0+255),b
  1109  003496  0E00               	movlw	0
  1110  003498  6FC0               	movwf	_nout& (0+255),b
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1113  00349A  EF62  F01A         	goto	l3932
  1114  00349E                     l3930:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1118  00349E  C052  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1119  0034A2  C053  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1120  0034A6  0E58               	movlw	low vfprintf@cfmt
  1121  0034A8  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1122  0034AA  0E00               	movlw	high vfprintf@cfmt
  1123  0034AC  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1124  0034AE  C056  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1125  0034B2  C057  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1126  0034B6  EC44  F00A         	call	_vfpfcnvrt	;wreg free
  1127  0034BA  503A               	movf	?_vfpfcnvrt^0,w,c
  1128  0034BC  0100               	movlb	0	; () banked
  1129  0034BE  27C0               	addwf	_nout& (0+255),f,b
  1130  0034C0  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1131  0034C2  23C1               	addwfc	(_nout+1)& (0+255),f,b
  1132  0034C4                     l3932:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1136  0034C4  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1137  0034C8  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1138  0034CC                     	if	0	;tblptru may be non-zero
  1139  0034CC                     	endif
  1140  0034CC                     	if	0	;tblptru may be non-zero
  1141  0034CC                     	endif
  1142  0034CC  0008               	tblrd		*
  1143  0034CE  50F5               	movf	tablat,w,c
  1144  0034D0  0900               	iorlw	0
  1145  0034D2  A4D8               	btfss	status,2,c
  1146  0034D4  EF6E  F01A         	goto	u4921
  1147  0034D8  EF70  F01A         	goto	u4920
  1148  0034DC                     u4921:
  1149  0034DC  EF4F  F01A         	goto	l3930
  1150  0034E0                     u4920:
  1151  0034E0                     
  1152                           ; BSR set to: 0
  1153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1154  0034E0  C0C0  F052         	movff	_nout,?_vfprintf
  1155  0034E4  C0C1  F053         	movff	_nout+1,?_vfprintf+1
  1156  0034E8                     
  1157                           ; BSR set to: 0
  1158  0034E8  0012               	return		;funcret
  1159  0034EA                     __end_of_vfprintf:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _vfpfcnvrt *****************
  1163 ;; Defined at:
  1164 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1167 ;;		 -> sprintf@f(6), 
  1168 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1169 ;;		 -> vfprintf@cfmt(2), 
  1170 ;;  ap              2   61[COMRAM] PTR PTR void 
  1171 ;;		 -> sprintf@ap(2), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  llu             8    0        unsigned long long 
  1174 ;;  ll              8    0        long long 
  1175 ;;  f               4   73[COMRAM] long long 
  1176 ;;  ct              3   77[COMRAM] unsigned char [3]
  1177 ;;  vp              3    0        PTR void 
  1178 ;;  cp              3    0        PTR unsigned char 
  1179 ;;  i               2    0        int 
  1180 ;;  done            2    0        int 
  1181 ;;  c               1   80[COMRAM] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2   57[COMRAM] int 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1191 ;;      Params:         6       0       0       0       0       0       0       0       0
  1192 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1193 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1194 ;;      Totals:        24       0       0       0       0       0       0       0       0
  1195 ;;Total ram usage:       24 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    5
  1198 ;; This function calls:
  1199 ;;		_atoi
  1200 ;;		_efgtoa
  1201 ;;		_fputc
  1202 ;;		_isdigit
  1203 ;;		_isupper
  1204 ;;		_strncmp
  1205 ;;		_tolower
  1206 ;; This function is called by:
  1207 ;;		_vfprintf
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text3
  1212  001488                     __ptext3:
  1213                           	callstack 0
  1214  001488                     _vfpfcnvrt:
  1215                           	callstack 23
  1216  001488                     
  1217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1218  001488  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1219  00148C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1220  001490  CFDE FFF6          	movff	postinc2,tblptrl
  1221  001494  CFDD FFF7          	movff	postdec2,tblptrh
  1222  001498                     	if	0	;tblptru may be non-zero
  1223  001498                     	endif
  1224  001498                     	if	0	;tblptru may be non-zero
  1225  001498                     	endif
  1226  001498  0008               	tblrd		*
  1227  00149A  50F5               	movf	tablat,w,c
  1228  00149C  0A25               	xorlw	37
  1229  00149E  A4D8               	btfss	status,2,c
  1230  0014A0  EF54  F00A         	goto	u4631
  1231  0014A4  EF56  F00A         	goto	u4630
  1232  0014A8                     u4631:
  1233  0014A8  EFD6  F00C         	goto	l3840
  1234  0014AC                     u4630:
  1235  0014AC                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1237  0014AC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1238  0014B0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1239  0014B4  2ADE               	incf	postinc2,f,c
  1240  0014B6  0E00               	movlw	0
  1241  0014B8  22DD               	addwfc	postdec2,f,c
  1242  0014BA                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1244  0014BA  0E00               	movlw	0
  1245  0014BC  0100               	movlb	0	; () banked
  1246  0014BE  6FC3               	movwf	(_width+1)& (0+255),b
  1247  0014C0  0E00               	movlw	0
  1248  0014C2  6FC2               	movwf	_width& (0+255),b
  1249  0014C4  C0C2  F05E         	movff	_width,_flags
  1250  0014C8  C0C3  F05F         	movff	_width+1,_flags+1
  1251  0014CC                     
  1252                           ; BSR set to: 0
  1253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1254  0014CC  685C               	setf	_prec^0,c
  1255  0014CE  685D               	setf	(_prec+1)^0,c
  1256  0014D0                     
  1257                           ; BSR set to: 0
  1258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1259  0014D0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260  0014D4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261  0014D8  CFDE FFF6          	movff	postinc2,tblptrl
  1262  0014DC  CFDD FFF7          	movff	postdec2,tblptrh
  1263  0014E0                     	if	0	;tblptru may be non-zero
  1264  0014E0                     	endif
  1265  0014E0                     	if	0	;tblptru may be non-zero
  1266  0014E0                     	endif
  1267  0014E0  0008               	tblrd		*
  1268  0014E2  50F5               	movf	tablat,w,c
  1269  0014E4  0A2A               	xorlw	42
  1270  0014E6  A4D8               	btfss	status,2,c
  1271  0014E8  EF78  F00A         	goto	u4641
  1272  0014EC  EF7A  F00A         	goto	u4640
  1273  0014F0                     u4641:
  1274  0014F0  EFA3  F00A         	goto	l3756
  1275  0014F4                     u4640:
  1276  0014F4                     
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1279  0014F4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1280  0014F8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1281  0014FC  2ADE               	incf	postinc2,f,c
  1282  0014FE  0E00               	movlw	0
  1283  001500  22DD               	addwfc	postdec2,f,c
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1286  001502  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1287  001506  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1288  00150A  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1289  00150E  0E02               	movlw	2
  1290  001510  26DE               	addwf	postinc2,f,c
  1291  001512  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1292  001516  0E00               	movlw	0
  1293  001518  22DD               	addwfc	postdec2,f,c
  1294  00151A  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1295  00151E  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1296  001522  CFDE F0C2          	movff	postinc2,_width
  1297  001526  CFDD F0C3          	movff	postdec2,_width+1
  1298  00152A                     
  1299                           ; BSR set to: 0
  1300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1301  00152A  BFC3               	btfsc	(_width+1)& (0+255),7,b
  1302  00152C  EF9C  F00A         	goto	u4650
  1303  001530  EF9A  F00A         	goto	u4651
  1304  001534                     u4651:
  1305  001534  EFE6  F00A         	goto	l3766
  1306  001538                     u4650:
  1307  001538                     
  1308                           ; BSR set to: 0
  1309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1310  001538  805E               	bsf	_flags^0,0,c
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1313  00153A  6DC2               	negf	_width& (0+255),b
  1314  00153C  1FC3               	comf	(_width+1)& (0+255),f,b
  1315  00153E  B0D8               	btfsc	status,0,c
  1316  001540  2BC3               	incf	(_width+1)& (0+255),f,b
  1317  001542  EFE6  F00A         	goto	l3766
  1318  001546                     l3756:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1322  001546  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1323  00154A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1324  00154E  CFDE F008          	movff	postinc2,atoi@s
  1325  001552  CFDD F009          	movff	postdec2,atoi@s+1
  1326  001556  EC17  F015         	call	_atoi	;wreg free
  1327  00155A  C008  F0C2         	movff	?_atoi,_width
  1328  00155E  C009  F0C3         	movff	?_atoi+1,_width+1
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1331  001562  EFBA  F00A         	goto	l3760
  1332  001566                     l3758:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1335  001566  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336  00156A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337  00156E  2ADE               	incf	postinc2,f,c
  1338  001570  0E00               	movlw	0
  1339  001572  22DD               	addwfc	postdec2,f,c
  1340  001574                     l3760:
  1341  001574  0ED0               	movlw	208
  1342  001576  6E40               	movwf	??_vfpfcnvrt^0,c
  1343  001578  0EFF               	movlw	255
  1344  00157A  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1345  00157C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  001580  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  001584  CFDE FFF6          	movff	postinc2,tblptrl
  1348  001588  CFDD FFF7          	movff	postdec2,tblptrh
  1349  00158C                     	if	0	;tblptru may be non-zero
  1350  00158C                     	endif
  1351  00158C                     	if	0	;tblptru may be non-zero
  1352  00158C                     	endif
  1353  00158C  0008               	tblrd		*
  1354  00158E  50F5               	movf	tablat,w,c
  1355  001590  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1356  001592  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1357  001594  5040               	movf	??_vfpfcnvrt^0,w,c
  1358  001596  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1359  001598  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1360  00159A  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1361  00159C  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1362  00159E  E10A               	bnz	u4660
  1363  0015A0  0E0A               	movlw	10
  1364  0015A2  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1365  0015A4  A0D8               	btfss	status,0,c
  1366  0015A6  EFD7  F00A         	goto	u4661
  1367  0015AA  EFDA  F00A         	goto	u4660
  1368  0015AE                     u4661:
  1369  0015AE  0E01               	movlw	1
  1370  0015B0  EFDB  F00A         	goto	u4670
  1371  0015B4                     u4660:
  1372  0015B4  0E00               	movlw	0
  1373  0015B6                     u4670:
  1374  0015B6  6E44               	movwf	_vfpfcnvrt$831^0,c
  1375  0015B8  6A45               	clrf	(_vfpfcnvrt$831+1)^0,c
  1376  0015BA  5044               	movf	_vfpfcnvrt$831^0,w,c
  1377  0015BC  1045               	iorwf	(_vfpfcnvrt$831+1)^0,w,c
  1378  0015BE  A4D8               	btfss	status,2,c
  1379  0015C0  EFE4  F00A         	goto	u4681
  1380  0015C4  EFE6  F00A         	goto	u4680
  1381  0015C8                     u4681:
  1382  0015C8  EFB3  F00A         	goto	l3758
  1383  0015CC                     u4680:
  1384  0015CC                     l3766:
  1385                           
  1386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1387  0015CC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1388  0015D0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1389  0015D4  CFDE FFF6          	movff	postinc2,tblptrl
  1390  0015D8  CFDD FFF7          	movff	postdec2,tblptrh
  1391  0015DC                     	if	0	;tblptru may be non-zero
  1392  0015DC                     	endif
  1393  0015DC                     	if	0	;tblptru may be non-zero
  1394  0015DC                     	endif
  1395  0015DC  0008               	tblrd		*
  1396  0015DE  50F5               	movf	tablat,w,c
  1397  0015E0  0A2E               	xorlw	46
  1398  0015E2  A4D8               	btfss	status,2,c
  1399  0015E4  EFF6  F00A         	goto	u4691
  1400  0015E8  EFF8  F00A         	goto	u4690
  1401  0015EC                     u4691:
  1402  0015EC  EF75  F00B         	goto	l3786
  1403  0015F0                     u4690:
  1404  0015F0                     
  1405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1406  0015F0  0E00               	movlw	0
  1407  0015F2  6E5D               	movwf	(_prec+1)^0,c
  1408  0015F4  0E00               	movlw	0
  1409  0015F6  6E5C               	movwf	_prec^0,c
  1410  0015F8                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1412  0015F8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  0015FC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  001600  2ADE               	incf	postinc2,f,c
  1415  001602  0E00               	movlw	0
  1416  001604  22DD               	addwfc	postdec2,f,c
  1417  001606                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1419  001606  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420  00160A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421  00160E  CFDE FFF6          	movff	postinc2,tblptrl
  1422  001612  CFDD FFF7          	movff	postdec2,tblptrh
  1423  001616                     	if	0	;tblptru may be non-zero
  1424  001616                     	endif
  1425  001616                     	if	0	;tblptru may be non-zero
  1426  001616                     	endif
  1427  001616  0008               	tblrd		*
  1428  001618  50F5               	movf	tablat,w,c
  1429  00161A  0A2A               	xorlw	42
  1430  00161C  A4D8               	btfss	status,2,c
  1431  00161E  EF13  F00B         	goto	u4701
  1432  001622  EF15  F00B         	goto	u4700
  1433  001626                     u4701:
  1434  001626  EF32  F00B         	goto	l3776
  1435  00162A                     u4700:
  1436  00162A                     
  1437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1438  00162A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1439  00162E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1440  001632  2ADE               	incf	postinc2,f,c
  1441  001634  0E00               	movlw	0
  1442  001636  22DD               	addwfc	postdec2,f,c
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1445  001638  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1446  00163C  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1447  001640  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1448  001644  0E02               	movlw	2
  1449  001646  26DE               	addwf	postinc2,f,c
  1450  001648  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1451  00164C  0E00               	movlw	0
  1452  00164E  22DD               	addwfc	postdec2,f,c
  1453  001650  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1454  001654  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1455  001658  CFDE F05C          	movff	postinc2,_prec
  1456  00165C  CFDD F05D          	movff	postdec2,_prec+1
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1459  001660  EF75  F00B         	goto	l3786
  1460  001664                     l3776:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1463  001664  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1464  001668  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1465  00166C  CFDE F008          	movff	postinc2,atoi@s
  1466  001670  CFDD F009          	movff	postdec2,atoi@s+1
  1467  001674  EC17  F015         	call	_atoi	;wreg free
  1468  001678  C008  F05C         	movff	?_atoi,_prec
  1469  00167C  C009  F05D         	movff	?_atoi+1,_prec+1
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1472  001680  EF49  F00B         	goto	l3780
  1473  001684                     l3778:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1476  001684  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1477  001688  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1478  00168C  2ADE               	incf	postinc2,f,c
  1479  00168E  0E00               	movlw	0
  1480  001690  22DD               	addwfc	postdec2,f,c
  1481  001692                     l3780:
  1482  001692  0ED0               	movlw	208
  1483  001694  6E40               	movwf	??_vfpfcnvrt^0,c
  1484  001696  0EFF               	movlw	255
  1485  001698  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1486  00169A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487  00169E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488  0016A2  CFDE FFF6          	movff	postinc2,tblptrl
  1489  0016A6  CFDD FFF7          	movff	postdec2,tblptrh
  1490  0016AA                     	if	0	;tblptru may be non-zero
  1491  0016AA                     	endif
  1492  0016AA                     	if	0	;tblptru may be non-zero
  1493  0016AA                     	endif
  1494  0016AA  0008               	tblrd		*
  1495  0016AC  50F5               	movf	tablat,w,c
  1496  0016AE  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1497  0016B0  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1498  0016B2  5040               	movf	??_vfpfcnvrt^0,w,c
  1499  0016B4  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1500  0016B6  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1501  0016B8  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1502  0016BA  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1503  0016BC  E10A               	bnz	u4710
  1504  0016BE  0E0A               	movlw	10
  1505  0016C0  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1506  0016C2  A0D8               	btfss	status,0,c
  1507  0016C4  EF66  F00B         	goto	u4711
  1508  0016C8  EF69  F00B         	goto	u4710
  1509  0016CC                     u4711:
  1510  0016CC  0E01               	movlw	1
  1511  0016CE  EF6A  F00B         	goto	u4720
  1512  0016D2                     u4710:
  1513  0016D2  0E00               	movlw	0
  1514  0016D4                     u4720:
  1515  0016D4  6E46               	movwf	_vfpfcnvrt$832^0,c
  1516  0016D6  6A47               	clrf	(_vfpfcnvrt$832+1)^0,c
  1517  0016D8  5046               	movf	_vfpfcnvrt$832^0,w,c
  1518  0016DA  1047               	iorwf	(_vfpfcnvrt$832+1)^0,w,c
  1519  0016DC  A4D8               	btfss	status,2,c
  1520  0016DE  EF73  F00B         	goto	u4731
  1521  0016E2  EF75  F00B         	goto	u4730
  1522  0016E6                     u4731:
  1523  0016E6  EF42  F00B         	goto	l3778
  1524  0016EA                     u4730:
  1525  0016EA                     l3786:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1528  0016EA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  0016EE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  0016F2  CFDE FFF6          	movff	postinc2,tblptrl
  1531  0016F6  CFDD FFF7          	movff	postdec2,tblptrh
  1532  0016FA                     	if	0	;tblptru may be non-zero
  1533  0016FA                     	endif
  1534  0016FA                     	if	0	;tblptru may be non-zero
  1535  0016FA                     	endif
  1536  0016FA  0008               	tblrd		*
  1537  0016FC  50F5               	movf	tablat,w,c
  1538  0016FE  6E07               	movwf	tolower@c^0,c
  1539  001700  6A08               	clrf	(tolower@c+1)^0,c
  1540  001702  EC75  F01A         	call	_tolower	;wreg free
  1541  001706  5007               	movf	?_tolower^0,w,c
  1542  001708  6E4E               	movwf	vfpfcnvrt@ct^0,c
  1543  00170A                     
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1545  00170A  504E               	movf	vfpfcnvrt@ct^0,w,c
  1546  00170C  B4D8               	btfsc	status,2,c
  1547  00170E  EF8B  F00B         	goto	u4741
  1548  001712  EF8D  F00B         	goto	u4740
  1549  001716                     u4741:
  1550  001716  EFC5  F00B         	goto	l3796
  1551  00171A                     u4740:
  1552  00171A                     
  1553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1554  00171A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555  00171E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556  001722  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1557  001726  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1558  00172A  0E01               	movlw	1
  1559  00172C  2640               	addwf	??_vfpfcnvrt^0,f,c
  1560  00172E  0E00               	movlw	0
  1561  001730  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1562  001732  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1563  001736  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1564  00173A                     	if	0	;tblptru may be non-zero
  1565  00173A                     	endif
  1566  00173A                     	if	0	;tblptru may be non-zero
  1567  00173A                     	endif
  1568  00173A  0008               	tblrd		*
  1569  00173C  50F5               	movf	tablat,w,c
  1570  00173E  6E07               	movwf	tolower@c^0,c
  1571  001740  6A08               	clrf	(tolower@c+1)^0,c
  1572  001742  EC75  F01A         	call	_tolower	;wreg free
  1573  001746  5007               	movf	?_tolower^0,w,c
  1574  001748  6E4F               	movwf	(vfpfcnvrt@ct+1)^0,c
  1575  00174A                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1577  00174A  504F               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1578  00174C  B4D8               	btfsc	status,2,c
  1579  00174E  EFAB  F00B         	goto	u4751
  1580  001752  EFAD  F00B         	goto	u4750
  1581  001756                     u4751:
  1582  001756  EFC5  F00B         	goto	l3796
  1583  00175A                     u4750:
  1584  00175A                     
  1585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1586  00175A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1587  00175E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1588  001762  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1589  001766  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1590  00176A  0E02               	movlw	2
  1591  00176C  2640               	addwf	??_vfpfcnvrt^0,f,c
  1592  00176E  0E00               	movlw	0
  1593  001770  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1594  001772  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1595  001776  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1596  00177A                     	if	0	;tblptru may be non-zero
  1597  00177A                     	endif
  1598  00177A                     	if	0	;tblptru may be non-zero
  1599  00177A                     	endif
  1600  00177A  0008               	tblrd		*
  1601  00177C  50F5               	movf	tablat,w,c
  1602  00177E  6E07               	movwf	tolower@c^0,c
  1603  001780  6A08               	clrf	(tolower@c+1)^0,c
  1604  001782  EC75  F01A         	call	_tolower	;wreg free
  1605  001786  5007               	movf	?_tolower^0,w,c
  1606  001788  6E50               	movwf	(vfpfcnvrt@ct+2)^0,c
  1607  00178A                     l3796:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1610  00178A  0E66               	movlw	102
  1611  00178C  184E               	xorwf	vfpfcnvrt@ct^0,w,c
  1612  00178E  A4D8               	btfss	status,2,c
  1613  001790  EFCC  F00B         	goto	u4761
  1614  001794  EFCE  F00B         	goto	u4760
  1615  001798                     u4761:
  1616  001798  EF0E  F00C         	goto	l3808
  1617  00179C                     u4760:
  1618  00179C                     
  1619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1620  00179C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1621  0017A0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1622  0017A4  CFDE FFF6          	movff	postinc2,tblptrl
  1623  0017A8  CFDD FFF7          	movff	postdec2,tblptrh
  1624  0017AC                     	if	0	;tblptru may be non-zero
  1625  0017AC                     	endif
  1626  0017AC                     	if	0	;tblptru may be non-zero
  1627  0017AC                     	endif
  1628  0017AC  0008               	tblrd		*
  1629  0017AE  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1630  0017B2                     
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1632  0017B2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1633  0017B6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1634  0017BA  2ADE               	incf	postinc2,f,c
  1635  0017BC  0E00               	movlw	0
  1636  0017BE  22DD               	addwfc	postdec2,f,c
  1637  0017C0                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1639  0017C0  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1640  0017C4  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1641  0017C8  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1642  0017CC  0E04               	movlw	4
  1643  0017CE  26DE               	addwf	postinc2,f,c
  1644  0017D0  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1645  0017D4  0E00               	movlw	0
  1646  0017D6  22DD               	addwfc	postdec2,f,c
  1647  0017D8  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1648  0017DC  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1649  0017E0  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1650  0017E4  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1651  0017E8  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1652  0017EC  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1653  0017F0                     l3804:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1656  0017F0  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1657  0017F4  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1658  0017F8  C04A  F030         	movff	vfpfcnvrt@f,efgtoa@f
  1659  0017FC  C04B  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1660  001800  C04C  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1661  001804  C04D  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1662  001808  C051  F034         	movff	vfpfcnvrt@c,efgtoa@c
  1663  00180C  EC17  F004         	call	_efgtoa	;wreg free
  1664  001810  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  1665  001814  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1666  001818  EFF1  F00C         	goto	l936
  1667  00181C                     l3808:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1670  00181C  0E4E               	movlw	low vfpfcnvrt@ct
  1671  00181E  6E01               	movwf	strncmp@_l^0,c
  1672  001820  0E00               	movlw	high vfpfcnvrt@ct
  1673  001822  6E02               	movwf	(strncmp@_l+1)^0,c
  1674  001824  0E27               	movlw	low STR_12
  1675  001826  6E03               	movwf	strncmp@_r^0,c
  1676  001828  0E08               	movlw	high STR_12
  1677  00182A  6E04               	movwf	(strncmp@_r+1)^0,c
  1678  00182C  0E00               	movlw	0
  1679  00182E  6E06               	movwf	(strncmp@n+1)^0,c
  1680  001830  0E02               	movlw	2
  1681  001832  6E05               	movwf	strncmp@n^0,c
  1682  001834  EC63  F017         	call	_strncmp	;wreg free
  1683  001838  5001               	movf	?_strncmp^0,w,c
  1684  00183A  1002               	iorwf	(?_strncmp+1)^0,w,c
  1685  00183C  A4D8               	btfss	status,2,c
  1686  00183E  EF23  F00C         	goto	u4771
  1687  001842  EF25  F00C         	goto	u4770
  1688  001846                     u4771:
  1689  001846  EFA0  F00C         	goto	l3824
  1690  00184A                     u4770:
  1691  00184A                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1693  00184A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694  00184E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695  001852  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1696  001856  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1697  00185A  0E01               	movlw	1
  1698  00185C  2640               	addwf	??_vfpfcnvrt^0,f,c
  1699  00185E  0E00               	movlw	0
  1700  001860  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1701  001862  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1702  001866  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1703  00186A                     	if	0	;tblptru may be non-zero
  1704  00186A                     	endif
  1705  00186A                     	if	0	;tblptru may be non-zero
  1706  00186A                     	endif
  1707  00186A  0008               	tblrd		*
  1708  00186C  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1709  001870  0EBF               	movlw	191
  1710  001872  6E40               	movwf	??_vfpfcnvrt^0,c
  1711  001874  0EFF               	movlw	255
  1712  001876  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1713  001878  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1714  00187C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1715  001880  CFDE FFF6          	movff	postinc2,tblptrl
  1716  001884  CFDD FFF7          	movff	postdec2,tblptrh
  1717  001888                     	if	0	;tblptru may be non-zero
  1718  001888                     	endif
  1719  001888                     	if	0	;tblptru may be non-zero
  1720  001888                     	endif
  1721  001888  0008               	tblrd		*
  1722  00188A  50F5               	movf	tablat,w,c
  1723  00188C  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1724  00188E  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1725  001890  5040               	movf	??_vfpfcnvrt^0,w,c
  1726  001892  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1727  001894  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1728  001896  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1729  001898  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1730  00189A  E10A               	bnz	u4780
  1731  00189C  0E1A               	movlw	26
  1732  00189E  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1733  0018A0  A0D8               	btfss	status,0,c
  1734  0018A2  EF55  F00C         	goto	u4781
  1735  0018A6  EF58  F00C         	goto	u4780
  1736  0018AA                     u4781:
  1737  0018AA  0E01               	movlw	1
  1738  0018AC  EF59  F00C         	goto	u4790
  1739  0018B0                     u4780:
  1740  0018B0  0E00               	movlw	0
  1741  0018B2                     u4790:
  1742  0018B2  6E48               	movwf	_vfpfcnvrt$836^0,c
  1743  0018B4  6A49               	clrf	(_vfpfcnvrt$836+1)^0,c
  1744  0018B6  5048               	movf	_vfpfcnvrt$836^0,w,c
  1745  0018B8  1049               	iorwf	(_vfpfcnvrt$836+1)^0,w,c
  1746  0018BA  B4D8               	btfsc	status,2,c
  1747  0018BC  EF62  F00C         	goto	u4801
  1748  0018C0  EF64  F00C         	goto	u4800
  1749  0018C4                     u4801:
  1750  0018C4  EF7E  F00C         	goto	l3818
  1751  0018C8                     u4800:
  1752  0018C8                     
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1754  0018C8  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1755  0018CC  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1756  0018D0  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1757  0018D4  0E04               	movlw	4
  1758  0018D6  26DE               	addwf	postinc2,f,c
  1759  0018D8  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1760  0018DC  0E00               	movlw	0
  1761  0018DE  22DD               	addwfc	postdec2,f,c
  1762  0018E0  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1763  0018E4  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1764  0018E8  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1765  0018EC  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1766  0018F0  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1767  0018F4  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1770  0018F8  EF96  F00C         	goto	l943
  1771  0018FC                     l3818:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1774  0018FC  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1775  001900  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1776  001904  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1777  001908  0E04               	movlw	4
  1778  00190A  26DE               	addwf	postinc2,f,c
  1779  00190C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1780  001910  0E00               	movlw	0
  1781  001912  22DD               	addwfc	postdec2,f,c
  1782  001914  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1783  001918  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1784  00191C  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1785  001920  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1786  001924  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1787  001928  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1788  00192C                     l943:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1791  00192C  0E02               	movlw	2
  1792  00192E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  001932  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  001936  26DE               	addwf	postinc2,f,c
  1795  001938  0E00               	movlw	0
  1796  00193A  22DD               	addwfc	postdec2,f,c
  1797  00193C  EFF8  F00B         	goto	l3804
  1798  001940                     l3824:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1801  001940  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1802  001944  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1803  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1804  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1805  001950                     	if	0	;tblptru may be non-zero
  1806  001950                     	endif
  1807  001950                     	if	0	;tblptru may be non-zero
  1808  001950                     	endif
  1809  001950  0008               	tblrd		*
  1810  001952  50F5               	movf	tablat,w,c
  1811  001954  0A25               	xorlw	37
  1812  001956  A4D8               	btfss	status,2,c
  1813  001958  EFB0  F00C         	goto	u4811
  1814  00195C  EFB2  F00C         	goto	u4810
  1815  001960                     u4811:
  1816  001960  EFC9  F00C         	goto	l3834
  1817  001964                     u4810:
  1818  001964                     
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1820  001964  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1821  001968  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1822  00196C  2ADE               	incf	postinc2,f,c
  1823  00196E  0E00               	movlw	0
  1824  001970  22DD               	addwfc	postdec2,f,c
  1825  001972                     
  1826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1827  001972  0E00               	movlw	0
  1828  001974  6E02               	movwf	(fputc@c+1)^0,c
  1829  001976  0E25               	movlw	37
  1830  001978  6E01               	movwf	fputc@c^0,c
  1831  00197A  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1832  00197E  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1833  001982  ECCE  F017         	call	_fputc	;wreg free
  1834  001986                     l3830:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1837  001986  0E00               	movlw	0
  1838  001988  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1839  00198A  0E01               	movlw	1
  1840  00198C  6E3A               	movwf	?_vfpfcnvrt^0,c
  1841  00198E  EFF1  F00C         	goto	l936
  1842  001992                     l3834:
  1843                           
  1844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1845  001992  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846  001996  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847  00199A  2ADE               	incf	postinc2,f,c
  1848  00199C  0E00               	movlw	0
  1849  00199E  22DD               	addwfc	postdec2,f,c
  1850  0019A0                     
  1851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1852  0019A0  0E00               	movlw	0
  1853  0019A2  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1854  0019A4  0E00               	movlw	0
  1855  0019A6  6E3A               	movwf	?_vfpfcnvrt^0,c
  1856  0019A8  EFF1  F00C         	goto	l936
  1857  0019AC                     l3840:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1860  0019AC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1861  0019B0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1862  0019B4  CFDE FFF6          	movff	postinc2,tblptrl
  1863  0019B8  CFDD FFF7          	movff	postdec2,tblptrh
  1864  0019BC                     	if	0	;tblptru may be non-zero
  1865  0019BC                     	endif
  1866  0019BC                     	if	0	;tblptru may be non-zero
  1867  0019BC                     	endif
  1868  0019BC  0008               	tblrd		*
  1869  0019BE  50F5               	movf	tablat,w,c
  1870  0019C0  6E01               	movwf	fputc@c^0,c
  1871  0019C2  6A02               	clrf	(fputc@c+1)^0,c
  1872  0019C4  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1873  0019C8  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1874  0019CC  ECCE  F017         	call	_fputc	;wreg free
  1875  0019D0                     
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1877  0019D0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878  0019D4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879  0019D8  2ADE               	incf	postinc2,f,c
  1880  0019DA  0E00               	movlw	0
  1881  0019DC  22DD               	addwfc	postdec2,f,c
  1882  0019DE  EFC3  F00C         	goto	l3830
  1883  0019E2                     l936:
  1884  0019E2  0012               	return		;funcret
  1885  0019E4                     __end_of_vfpfcnvrt:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function _strncmp *****************
  1889 ;; Defined at:
  1890 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1893 ;;		 -> vfpfcnvrt@ct(3), 
  1894 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1895 ;;		 -> STR_14(3), 
  1896 ;;  n               2    4[COMRAM] unsigned int 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1899 ;;		 -> STR_14(3), 
  1900 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1901 ;;		 -> vfpfcnvrt@ct(3), 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2    0[COMRAM] int 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         6       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1914 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:       11 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_vfpfcnvrt
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text4
  1925  002EC6                     __ptext4:
  1926                           	callstack 0
  1927  002EC6                     _strncmp:
  1928                           	callstack 27
  1929  002EC6  C001  F008         	movff	strncmp@_l,strncmp@l
  1930  002ECA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1931  002ECE  C003  F00A         	movff	strncmp@_r,strncmp@r
  1932  002ED2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1933  002ED6  0605               	decf	strncmp@n^0,f,c
  1934  002ED8  A0D8               	btfss	status,0,c
  1935  002EDA  0606               	decf	(strncmp@n+1)^0,f,c
  1936  002EDC  2805               	incf	strncmp@n^0,w,c
  1937  002EDE  E106               	bnz	u4581
  1938  002EE0  2806               	incf	(strncmp@n+1)^0,w,c
  1939  002EE2  A4D8               	btfss	status,2,c
  1940  002EE4  EF76  F017         	goto	u4581
  1941  002EE8  EF78  F017         	goto	u4580
  1942  002EEC                     u4581:
  1943  002EEC  EF85  F017         	goto	l3728
  1944  002EF0                     u4580:
  1945  002EF0  0E00               	movlw	0
  1946  002EF2  6E02               	movwf	(?_strncmp+1)^0,c
  1947  002EF4  0E00               	movlw	0
  1948  002EF6  6E01               	movwf	?_strncmp^0,c
  1949  002EF8  EFCD  F017         	goto	l1064
  1950  002EFC                     l3726:
  1951  002EFC  4A08               	infsnz	strncmp@l^0,f,c
  1952  002EFE  2A09               	incf	(strncmp@l+1)^0,f,c
  1953  002F00  4A0A               	infsnz	strncmp@r^0,f,c
  1954  002F02  2A0B               	incf	(strncmp@r+1)^0,f,c
  1955  002F04  0605               	decf	strncmp@n^0,f,c
  1956  002F06  A0D8               	btfss	status,0,c
  1957  002F08  0606               	decf	(strncmp@n+1)^0,f,c
  1958  002F0A                     l3728:
  1959  002F0A  C008  FFD9         	movff	strncmp@l,fsr2l
  1960  002F0E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1961  002F12  50DF               	movf	indf2,w,c
  1962  002F14  B4D8               	btfsc	status,2,c
  1963  002F16  EF8F  F017         	goto	u4591
  1964  002F1A  EF91  F017         	goto	u4590
  1965  002F1E                     u4591:
  1966  002F1E  EFBC  F017         	goto	l3736
  1967  002F22                     u4590:
  1968  002F22  C00A  FFF6         	movff	strncmp@r,tblptrl
  1969  002F26  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1970  002F2A                     	if	0	;tblptru may be non-zero
  1971  002F2A                     	endif
  1972  002F2A                     	if	0	;tblptru may be non-zero
  1973  002F2A                     	endif
  1974  002F2A  0008               	tblrd		*
  1975  002F2C  50F5               	movf	tablat,w,c
  1976  002F2E  0900               	iorlw	0
  1977  002F30  B4D8               	btfsc	status,2,c
  1978  002F32  EF9D  F017         	goto	u4601
  1979  002F36  EF9F  F017         	goto	u4600
  1980  002F3A                     u4601:
  1981  002F3A  EFBC  F017         	goto	l3736
  1982  002F3E                     u4600:
  1983  002F3E  5005               	movf	strncmp@n^0,w,c
  1984  002F40  1006               	iorwf	(strncmp@n+1)^0,w,c
  1985  002F42  B4D8               	btfsc	status,2,c
  1986  002F44  EFA6  F017         	goto	u4611
  1987  002F48  EFA8  F017         	goto	u4610
  1988  002F4C                     u4611:
  1989  002F4C  EFBC  F017         	goto	l3736
  1990  002F50                     u4610:
  1991  002F50  C008  FFD9         	movff	strncmp@l,fsr2l
  1992  002F54  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1993  002F58  50DF               	movf	indf2,w,c
  1994  002F5A  6E07               	movwf	??_strncmp^0,c
  1995  002F5C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1996  002F60  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1997  002F64                     	if	0	;tblptru may be non-zero
  1998  002F64                     	endif
  1999  002F64                     	if	0	;tblptru may be non-zero
  2000  002F64                     	endif
  2001  002F64  0008               	tblrd		*
  2002  002F66  50F5               	movf	tablat,w,c
  2003  002F68  1807               	xorwf	??_strncmp^0,w,c
  2004  002F6A  B4D8               	btfsc	status,2,c
  2005  002F6C  EFBA  F017         	goto	u4621
  2006  002F70  EFBC  F017         	goto	u4620
  2007  002F74                     u4621:
  2008  002F74  EF7E  F017         	goto	l3726
  2009  002F78                     u4620:
  2010  002F78                     l3736:
  2011  002F78  C008  FFD9         	movff	strncmp@l,fsr2l
  2012  002F7C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2013  002F80  50DF               	movf	indf2,w,c
  2014  002F82  6E07               	movwf	??_strncmp^0,c
  2015  002F84  C00A  FFF6         	movff	strncmp@r,tblptrl
  2016  002F88  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2017  002F8C                     	if	0	;tblptru may be non-zero
  2018  002F8C                     	endif
  2019  002F8C                     	if	0	;tblptru may be non-zero
  2020  002F8C                     	endif
  2021  002F8C  0008               	tblrd		*
  2022  002F8E  50F5               	movf	tablat,w,c
  2023  002F90  5C07               	subwf	??_strncmp^0,w,c
  2024  002F92  6E01               	movwf	?_strncmp^0,c
  2025  002F94  6A02               	clrf	(?_strncmp+1)^0,c
  2026  002F96  A0D8               	btfss	status,0,c
  2027  002F98  0602               	decf	(?_strncmp+1)^0,f,c
  2028  002F9A                     l1064:
  2029  002F9A  0012               	return		;funcret
  2030  002F9C                     __end_of_strncmp:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _efgtoa *****************
  2034 ;; Defined at:
  2035 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2038 ;;		 -> sprintf@f(6), 
  2039 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2040 ;;  c               1   51[COMRAM] unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  u               4   52[BANK0 ] unsigned char 
  2043 ;;  g               4   44[BANK0 ] unsigned char 
  2044 ;;  l               4   38[BANK0 ] unsigned char 
  2045 ;;  h               4   34[BANK0 ] unsigned char 
  2046 ;;  ou              4   20[BANK0 ] unsigned char 
  2047 ;;  n               2   50[BANK0 ] int 
  2048 ;;  e               2   48[BANK0 ] int 
  2049 ;;  i               2   42[BANK0 ] int 
  2050 ;;  w               2   30[BANK0 ] int 
  2051 ;;  p               2   28[BANK0 ] int 
  2052 ;;  sign            2   26[BANK0 ] int 
  2053 ;;  d               2   24[BANK0 ] int 
  2054 ;;  m               2   18[BANK0 ] int 
  2055 ;;  ne              2   16[BANK0 ] int 
  2056 ;;  pp              2   14[BANK0 ] int 
  2057 ;;  t               2   12[BANK0 ] int 
  2058 ;;  mode            1   33[BANK0 ] unsigned char 
  2059 ;;  nmode           1   32[BANK0 ] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  2   45[COMRAM] int 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2069 ;;      Params:         7       0       0       0       0       0       0       0       0
  2070 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2071 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2072 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2073 ;;Total ram usage:       68 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:    4
  2076 ;; This function calls:
  2077 ;;		___awdiv
  2078 ;;		___awmod
  2079 ;;		___fladd
  2080 ;;		___fldiv
  2081 ;;		___fleq
  2082 ;;		___flge
  2083 ;;		___flmul
  2084 ;;		___flneg
  2085 ;;		___flsub
  2086 ;;		___fltol
  2087 ;;		___fpclassifyf
  2088 ;;		_floorf
  2089 ;;		_isupper
  2090 ;;		_pad
  2091 ;;		_strcpy
  2092 ;;		_tolower
  2093 ;; This function is called by:
  2094 ;;		_vfpfcnvrt
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text5
  2099  00082E                     __ptext5:
  2100                           	callstack 0
  2101  00082E                     _efgtoa:
  2102                           	callstack 23
  2103  00082E                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2105  00082E  0E00               	movlw	0
  2106  000830  0100               	movlb	0	; () banked
  2107  000832  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2108  000834  0E00               	movlw	0
  2109  000836  6F7A               	movwf	efgtoa@sign& (0+255),b
  2110  000838                     
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2113  000838  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2114  00083C  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2115  000840  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2116  000844  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2117  000848                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2120  000848  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2121  00084A  EF2B  F004         	goto	u3970
  2122  00084E  EF29  F004         	goto	u3971
  2123  000852                     u3971:
  2124  000852  EF41  F004         	goto	l3380
  2125  000856                     u3970:
  2126  000856                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2129  000856  0E00               	movlw	0
  2130  000858  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2131  00085A  0E01               	movlw	1
  2132  00085C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2133  00085E                     
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2136  00085E  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2137  000862  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2138  000866  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2139  00086A  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2140  00086E  EC29  F01C         	call	___flneg	;wreg free
  2141  000872  C001  F08C         	movff	?___flneg,efgtoa@g
  2142  000876  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2143  00087A  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2144  00087E  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2145  000882                     l3380:
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2148  000882  0E00               	movlw	0
  2149  000884  0100               	movlb	0	; () banked
  2150  000886  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2151  000888  0E00               	movlw	0
  2152  00088A  6F92               	movwf	efgtoa@n& (0+255),b
  2153  00088C                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2156  00088C  C0C2  F07E         	movff	_width,efgtoa@w
  2157  000890  C0C3  F07F         	movff	_width+1,efgtoa@w+1
  2158  000894                     
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2161  000894  517A               	movf	efgtoa@sign& (0+255),w,b
  2162  000896  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2163  000898  A4D8               	btfss	status,2,c
  2164  00089A  EF51  F004         	goto	u3981
  2165  00089E  EF53  F004         	goto	u3980
  2166  0008A2                     u3981:
  2167  0008A2  EF5A  F004         	goto	l3388
  2168  0008A6                     u3980:
  2169  0008A6                     
  2170                           ; BSR set to: 0
  2171  0008A6  A45E               	btfss	_flags^0,2,c
  2172  0008A8  EF58  F004         	goto	u3991
  2173  0008AC  EF5A  F004         	goto	u3990
  2174  0008B0                     u3991:
  2175  0008B0  EF74  F004         	goto	l3400
  2176  0008B4                     u3990:
  2177  0008B4                     l3388:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2181  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2182  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2183  0008B8  A4D8               	btfss	status,2,c
  2184  0008BA  EF61  F004         	goto	u4001
  2185  0008BE  EF63  F004         	goto	u4000
  2186  0008C2                     u4001:
  2187  0008C2  EF69  F004         	goto	l3392
  2188  0008C6                     u4000:
  2189  0008C6                     
  2190                           ; BSR set to: 0
  2191  0008C6  0E00               	movlw	0
  2192  0008C8  6F61               	movwf	(_efgtoa$805+1)& (0+255),b
  2193  0008CA  0E2B               	movlw	43
  2194  0008CC  6F60               	movwf	_efgtoa$805& (0+255),b
  2195  0008CE  EF6D  F004         	goto	l3394
  2196  0008D2                     l3392:
  2197                           
  2198                           ; BSR set to: 0
  2199  0008D2  0E00               	movlw	0
  2200  0008D4  6F61               	movwf	(_efgtoa$805+1)& (0+255),b
  2201  0008D6  0E2D               	movlw	45
  2202  0008D8  6F60               	movwf	_efgtoa$805& (0+255),b
  2203  0008DA                     l3394:
  2204                           
  2205                           ; BSR set to: 0
  2206  0008DA  C060  F100         	movff	_efgtoa$805,_dbuf
  2207  0008DE                     
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2210  0008DE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2211  0008E0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2212  0008E2                     
  2213                           ; BSR set to: 0
  2214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  2215  0008E2  077E               	decf	efgtoa@w& (0+255),f,b
  2216  0008E4  A0D8               	btfss	status,0,c
  2217  0008E6  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2218  0008E8                     l3400:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2222  0008E8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2223  0008EC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2224  0008F0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2225  0008F4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2226  0008F8  ECE4  F016         	call	___fpclassifyf	;wreg free
  2227  0008FC  0401               	decf	?___fpclassifyf^0,w,c
  2228  0008FE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2229  000900  A4D8               	btfss	status,2,c
  2230  000902  EF85  F004         	goto	u4011
  2231  000906  EF87  F004         	goto	u4010
  2232  00090A                     u4011:
  2233  00090A  EFDE  F004         	goto	l3418
  2234  00090E                     u4010:
  2235  00090E  0EBF               	movlw	191
  2236  000910  6E35               	movwf	??_efgtoa^0,c
  2237  000912  0EFF               	movlw	255
  2238  000914  6E36               	movwf	(??_efgtoa+1)^0,c
  2239  000916  5034               	movf	efgtoa@c^0,w,c
  2240  000918  6E37               	movwf	(??_efgtoa+2)^0,c
  2241  00091A  6A38               	clrf	(??_efgtoa+3)^0,c
  2242  00091C  5035               	movf	??_efgtoa^0,w,c
  2243  00091E  2637               	addwf	(??_efgtoa+2)^0,f,c
  2244  000920  5036               	movf	(??_efgtoa+1)^0,w,c
  2245  000922  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2246  000924  5038               	movf	(??_efgtoa+3)^0,w,c
  2247  000926  E10A               	bnz	u4020
  2248  000928  0E1A               	movlw	26
  2249  00092A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2250  00092C  A0D8               	btfss	status,0,c
  2251  00092E  EF9B  F004         	goto	u4021
  2252  000932  EF9E  F004         	goto	u4020
  2253  000936                     u4021:
  2254  000936  0E01               	movlw	1
  2255  000938  EF9F  F004         	goto	u4030
  2256  00093C                     u4020:
  2257  00093C  0E00               	movlw	0
  2258  00093E                     u4030:
  2259  00093E  0100               	movlb	0	; () banked
  2260  000940  6F62               	movwf	_efgtoa$806& (0+255),b
  2261  000942  6B63               	clrf	(_efgtoa$806+1)& (0+255),b
  2262  000944                     
  2263                           ; BSR set to: 0
  2264  000944  5162               	movf	_efgtoa$806& (0+255),w,b
  2265  000946  1163               	iorwf	(_efgtoa$806+1)& (0+255),w,b
  2266  000948  B4D8               	btfsc	status,2,c
  2267  00094A  EFA9  F004         	goto	u4041
  2268  00094E  EFAB  F004         	goto	u4040
  2269  000952                     u4041:
  2270  000952  EFB9  F004         	goto	l3410
  2271  000956                     u4040:
  2272  000956                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2275  000956  0E00               	movlw	low _dbuf
  2276  000958  2592               	addwf	efgtoa@n& (0+255),w,b
  2277  00095A  6E01               	movwf	strcpy@dest^0,c
  2278  00095C  0E01               	movlw	high _dbuf
  2279  00095E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2280  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2281  000962  0E17               	movlw	low STR_4
  2282  000964  6E03               	movwf	strcpy@src^0,c
  2283  000966  0E08               	movlw	high STR_4
  2284  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2285  00096A  ECD4  F01A         	call	_strcpy	;wreg free
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2288  00096E  EFC5  F004         	goto	l3412
  2289  000972                     l3410:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2293  000972  0E00               	movlw	low _dbuf
  2294  000974  2592               	addwf	efgtoa@n& (0+255),w,b
  2295  000976  6E01               	movwf	strcpy@dest^0,c
  2296  000978  0E01               	movlw	high _dbuf
  2297  00097A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2298  00097C  6E02               	movwf	(strcpy@dest+1)^0,c
  2299  00097E  0E1F               	movlw	low STR_5
  2300  000980  6E03               	movwf	strcpy@src^0,c
  2301  000982  0E08               	movlw	high STR_5
  2302  000984  6E04               	movwf	(strcpy@src+1)^0,c
  2303  000986  ECD4  F01A         	call	_strcpy	;wreg free
  2304  00098A                     l3412:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2307  00098A  0100               	movlb	0	; () banked
  2308  00098C  0EFD               	movlw	253
  2309  00098E  277E               	addwf	efgtoa@w& (0+255),f,b
  2310  000990  0EFF               	movlw	255
  2311  000992  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2312  000994                     l3414:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2315  000994  C02E  F011         	movff	efgtoa@fp,pad@fp
  2316  000998  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2317  00099C  0E00               	movlw	low _dbuf
  2318  00099E  6E13               	movwf	pad@buf^0,c
  2319  0009A0  0E01               	movlw	high _dbuf
  2320  0009A2  6E14               	movwf	(pad@buf+1)^0,c
  2321  0009A4  C07E  F015         	movff	efgtoa@w,pad@p
  2322  0009A8  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  2323  0009AC  EC95  F018         	call	_pad	;wreg free
  2324  0009B0  C011  F02E         	movff	?_pad,?_efgtoa
  2325  0009B4  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2326  0009B8  EF43  F00A         	goto	l834
  2327  0009BC                     l3418:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2330  0009BC  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2331  0009C0  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2332  0009C4  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2333  0009C8  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2334  0009CC  ECE4  F016         	call	___fpclassifyf	;wreg free
  2335  0009D0  5001               	movf	?___fpclassifyf^0,w,c
  2336  0009D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2337  0009D4  A4D8               	btfss	status,2,c
  2338  0009D6  EFEF  F004         	goto	u4051
  2339  0009DA  EFF1  F004         	goto	u4050
  2340  0009DE                     u4051:
  2341  0009DE  EF31  F005         	goto	l3436
  2342  0009E2                     u4050:
  2343  0009E2  0EBF               	movlw	191
  2344  0009E4  6E35               	movwf	??_efgtoa^0,c
  2345  0009E6  0EFF               	movlw	255
  2346  0009E8  6E36               	movwf	(??_efgtoa+1)^0,c
  2347  0009EA  5034               	movf	efgtoa@c^0,w,c
  2348  0009EC  6E37               	movwf	(??_efgtoa+2)^0,c
  2349  0009EE  6A38               	clrf	(??_efgtoa+3)^0,c
  2350  0009F0  5035               	movf	??_efgtoa^0,w,c
  2351  0009F2  2637               	addwf	(??_efgtoa+2)^0,f,c
  2352  0009F4  5036               	movf	(??_efgtoa+1)^0,w,c
  2353  0009F6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2354  0009F8  5038               	movf	(??_efgtoa+3)^0,w,c
  2355  0009FA  E10A               	bnz	u4060
  2356  0009FC  0E1A               	movlw	26
  2357  0009FE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2358  000A00  A0D8               	btfss	status,0,c
  2359  000A02  EF05  F005         	goto	u4061
  2360  000A06  EF08  F005         	goto	u4060
  2361  000A0A                     u4061:
  2362  000A0A  0E01               	movlw	1
  2363  000A0C  EF09  F005         	goto	u4070
  2364  000A10                     u4060:
  2365  000A10  0E00               	movlw	0
  2366  000A12                     u4070:
  2367  000A12  0100               	movlb	0	; () banked
  2368  000A14  6F64               	movwf	_efgtoa$811& (0+255),b
  2369  000A16  6B65               	clrf	(_efgtoa$811+1)& (0+255),b
  2370  000A18                     
  2371                           ; BSR set to: 0
  2372  000A18  5164               	movf	_efgtoa$811& (0+255),w,b
  2373  000A1A  1165               	iorwf	(_efgtoa$811+1)& (0+255),w,b
  2374  000A1C  B4D8               	btfsc	status,2,c
  2375  000A1E  EF13  F005         	goto	u4081
  2376  000A22  EF15  F005         	goto	u4080
  2377  000A26                     u4081:
  2378  000A26  EF23  F005         	goto	l3428
  2379  000A2A                     u4080:
  2380  000A2A                     
  2381                           ; BSR set to: 0
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2383  000A2A  0E00               	movlw	low _dbuf
  2384  000A2C  2592               	addwf	efgtoa@n& (0+255),w,b
  2385  000A2E  6E01               	movwf	strcpy@dest^0,c
  2386  000A30  0E01               	movlw	high _dbuf
  2387  000A32  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2388  000A34  6E02               	movwf	(strcpy@dest+1)^0,c
  2389  000A36  0E1B               	movlw	low STR_8
  2390  000A38  6E03               	movwf	strcpy@src^0,c
  2391  000A3A  0E08               	movlw	high STR_8
  2392  000A3C  6E04               	movwf	(strcpy@src+1)^0,c
  2393  000A3E  ECD4  F01A         	call	_strcpy	;wreg free
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2396  000A42  EFC5  F004         	goto	l3412
  2397  000A46                     l3428:
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2401  000A46  0E00               	movlw	low _dbuf
  2402  000A48  2592               	addwf	efgtoa@n& (0+255),w,b
  2403  000A4A  6E01               	movwf	strcpy@dest^0,c
  2404  000A4C  0E01               	movlw	high _dbuf
  2405  000A4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2406  000A50  6E02               	movwf	(strcpy@dest+1)^0,c
  2407  000A52  0E23               	movlw	low STR_9
  2408  000A54  6E03               	movwf	strcpy@src^0,c
  2409  000A56  0E08               	movlw	high STR_9
  2410  000A58  6E04               	movwf	(strcpy@src+1)^0,c
  2411  000A5A  ECD4  F01A         	call	_strcpy	;wreg free
  2412  000A5E  EFC5  F004         	goto	l3412
  2413  000A62                     l3436:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2416  000A62  0E00               	movlw	0
  2417  000A64  0100               	movlb	0	; () banked
  2418  000A66  6F94               	movwf	efgtoa@u& (0+255),b
  2419  000A68  0E00               	movlw	0
  2420  000A6A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2421  000A6C  0E80               	movlw	128
  2422  000A6E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2423  000A70  0E3F               	movlw	63
  2424  000A72  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2427  000A74  0E00               	movlw	0
  2428  000A76  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2429  000A78  0E00               	movlw	0
  2430  000A7A  6F90               	movwf	efgtoa@e& (0+255),b
  2431  000A7C                     
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2434  000A7C  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2435  000A80  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2436  000A84  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2437  000A88  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2438  000A8C  0E00               	movlw	0
  2439  000A8E  6E05               	movwf	___fleq@ff2^0,c
  2440  000A90  0E00               	movlw	0
  2441  000A92  6E06               	movwf	(___fleq@ff2+1)^0,c
  2442  000A94  0E00               	movlw	0
  2443  000A96  6E07               	movwf	(___fleq@ff2+2)^0,c
  2444  000A98  0E00               	movlw	0
  2445  000A9A  6E08               	movwf	(___fleq@ff2+3)^0,c
  2446  000A9C  EC4E  F019         	call	___fleq	;wreg free
  2447  000AA0  B0D8               	btfsc	status,0,c
  2448  000AA2  EF55  F005         	goto	u4091
  2449  000AA6  EF57  F005         	goto	u4090
  2450  000AAA                     u4091:
  2451  000AAA  EFDA  F005         	goto	l3454
  2452  000AAE                     u4090:
  2453  000AAE  EF76  F005         	goto	l3446
  2454  000AB2                     l3442:
  2455                           
  2456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2457  000AB2  C094  F001         	movff	efgtoa@u,___flmul@b
  2458  000AB6  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2459  000ABA  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2460  000ABE  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2461  000AC2  0E00               	movlw	0
  2462  000AC4  6E05               	movwf	___flmul@a^0,c
  2463  000AC6  0E00               	movlw	0
  2464  000AC8  6E06               	movwf	(___flmul@a+1)^0,c
  2465  000ACA  0E20               	movlw	32
  2466  000ACC  6E07               	movwf	(___flmul@a+2)^0,c
  2467  000ACE  0E41               	movlw	65
  2468  000AD0  6E08               	movwf	(___flmul@a+3)^0,c
  2469  000AD2  EC52  F00F         	call	___flmul	;wreg free
  2470  000AD6  C001  F094         	movff	?___flmul,efgtoa@u
  2471  000ADA  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2472  000ADE  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2473  000AE2  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2474  000AE6                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2476  000AE6  0100               	movlb	0	; () banked
  2477  000AE8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2478  000AEA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2479  000AEC                     l3446:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2482  000AEC  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2483  000AF0  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2484  000AF4  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2485  000AF8  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2486  000AFC  0E00               	movlw	0
  2487  000AFE  6E05               	movwf	___flmul@a^0,c
  2488  000B00  0E00               	movlw	0
  2489  000B02  6E06               	movwf	(___flmul@a+1)^0,c
  2490  000B04  0E20               	movlw	32
  2491  000B06  6E07               	movwf	(___flmul@a+2)^0,c
  2492  000B08  0E41               	movlw	65
  2493  000B0A  6E08               	movwf	(___flmul@a+3)^0,c
  2494  000B0C  C094  F001         	movff	efgtoa@u,___flmul@b
  2495  000B10  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2496  000B14  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2497  000B18  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2498  000B1C  EC52  F00F         	call	___flmul	;wreg free
  2499  000B20  C001  F01E         	movff	?___flmul,___flge@ff2
  2500  000B24  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2501  000B28  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2502  000B2C  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2503  000B30  EC62  F016         	call	___flge	;wreg free
  2504  000B34  B0D8               	btfsc	status,0,c
  2505  000B36  EF9F  F005         	goto	u4101
  2506  000B3A  EFA1  F005         	goto	u4100
  2507  000B3E                     u4101:
  2508  000B3E  EF59  F005         	goto	l3442
  2509  000B42                     u4100:
  2510  000B42  EFC1  F005         	goto	l3452
  2511  000B46                     l3448:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2514  000B46  C094  F001         	movff	efgtoa@u,___fldiv@b
  2515  000B4A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2516  000B4E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2517  000B52  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2518  000B56  0E00               	movlw	0
  2519  000B58  6E05               	movwf	___fldiv@a^0,c
  2520  000B5A  0E00               	movlw	0
  2521  000B5C  6E06               	movwf	(___fldiv@a+1)^0,c
  2522  000B5E  0E20               	movlw	32
  2523  000B60  6E07               	movwf	(___fldiv@a+2)^0,c
  2524  000B62  0E41               	movlw	65
  2525  000B64  6E08               	movwf	(___fldiv@a+3)^0,c
  2526  000B66  EC67  F011         	call	___fldiv	;wreg free
  2527  000B6A  C001  F094         	movff	?___fldiv,efgtoa@u
  2528  000B6E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2529  000B72  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2530  000B76  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2531  000B7A                     
  2532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2533  000B7A  0100               	movlb	0	; () banked
  2534  000B7C  0790               	decf	efgtoa@e& (0+255),f,b
  2535  000B7E  A0D8               	btfss	status,0,c
  2536  000B80  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2537  000B82                     l3452:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2540  000B82  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2541  000B86  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2542  000B8A  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2543  000B8E  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2544  000B92  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2545  000B96  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2546  000B9A  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2547  000B9E  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2548  000BA2  EC62  F016         	call	___flge	;wreg free
  2549  000BA6  A0D8               	btfss	status,0,c
  2550  000BA8  EFD8  F005         	goto	u4111
  2551  000BAC  EFDA  F005         	goto	u4110
  2552  000BB0                     u4111:
  2553  000BB0  EFA3  F005         	goto	l3448
  2554  000BB4                     u4110:
  2555  000BB4                     l3454:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2558  000BB4  C034  F007         	movff	efgtoa@c,tolower@c
  2559  000BB8  6A08               	clrf	(tolower@c+1)^0,c
  2560  000BBA  EC75  F01A         	call	_tolower	;wreg free
  2561  000BBE  5007               	movf	?_tolower^0,w,c
  2562  000BC0  0100               	movlb	0	; () banked
  2563  000BC2  6F81               	movwf	efgtoa@mode& (0+255),b
  2564  000BC4                     
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2567  000BC4  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2568  000BC8                     
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2571  000BC8  0E67               	movlw	103
  2572  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2573  000BCC  A4D8               	btfss	status,2,c
  2574  000BCE  EFEB  F005         	goto	u4121
  2575  000BD2  EFED  F005         	goto	u4120
  2576  000BD6                     u4121:
  2577  000BD6  EF13  F006         	goto	l3468
  2578  000BDA                     u4120:
  2579  000BDA                     
  2580                           ; BSR set to: 0
  2581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2582  000BDA  505C               	movf	_prec^0,w,c
  2583  000BDC  105D               	iorwf	(_prec+1)^0,w,c
  2584  000BDE  A4D8               	btfss	status,2,c
  2585  000BE0  EFF4  F005         	goto	u4131
  2586  000BE4  EFF6  F005         	goto	u4130
  2587  000BE8                     u4131:
  2588  000BE8  EFFA  F005         	goto	l3464
  2589  000BEC                     u4130:
  2590  000BEC                     
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2593  000BEC  0E00               	movlw	0
  2594  000BEE  6E5D               	movwf	(_prec+1)^0,c
  2595  000BF0  0E01               	movlw	1
  2596  000BF2  6E5C               	movwf	_prec^0,c
  2597  000BF4                     l3464:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2601  000BF4  BE5D               	btfsc	(_prec+1)^0,7,c
  2602  000BF6  EF07  F006         	goto	u4140
  2603  000BFA  505D               	movf	(_prec+1)^0,w,c
  2604  000BFC  E106               	bnz	u4141
  2605  000BFE  045C               	decf	_prec^0,w,c
  2606  000C00  B0D8               	btfsc	status,0,c
  2607  000C02  EF05  F006         	goto	u4141
  2608  000C06  EF07  F006         	goto	u4140
  2609  000C0A                     u4141:
  2610  000C0A  EF0D  F006         	goto	l852
  2611  000C0E                     u4140:
  2612  000C0E                     l3466:
  2613                           
  2614                           ; BSR set to: 0
  2615  000C0E  0E00               	movlw	0
  2616  000C10  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2617  000C12  0E06               	movlw	6
  2618  000C14  6F7C               	movwf	efgtoa@p& (0+255),b
  2619  000C16  EF1C  F006         	goto	l3474
  2620  000C1A                     l852:
  2621                           
  2622                           ; BSR set to: 0
  2623  000C1A  C05C  F07C         	movff	_prec,efgtoa@p
  2624  000C1E  C05D  F07D         	movff	_prec+1,efgtoa@p+1
  2625  000C22  EF1C  F006         	goto	l3474
  2626  000C26                     l3468:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2630  000C26  BE5D               	btfsc	(_prec+1)^0,7,c
  2631  000C28  EF18  F006         	goto	u4151
  2632  000C2C  EF1A  F006         	goto	u4150
  2633  000C30                     u4151:
  2634  000C30  EF07  F006         	goto	l3466
  2635  000C34                     u4150:
  2636  000C34  EF0D  F006         	goto	l852
  2637  000C38                     l3474:
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2641  000C38  0E67               	movlw	103
  2642  000C3A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2643  000C3C  A4D8               	btfss	status,2,c
  2644  000C3E  EF23  F006         	goto	u4161
  2645  000C42  EF25  F006         	goto	u4160
  2646  000C46                     u4161:
  2647  000C46  EF54  F006         	goto	l3484
  2648  000C4A                     u4160:
  2649  000C4A                     
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2652  000C4A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2653  000C4C  EF33  F006         	goto	u4170
  2654  000C50  0EFC               	movlw	252
  2655  000C52  5D90               	subwf	efgtoa@e& (0+255),w,b
  2656  000C54  0EFF               	movlw	255
  2657  000C56  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2658  000C58  A0D8               	btfss	status,0,c
  2659  000C5A  EF31  F006         	goto	u4171
  2660  000C5E  EF33  F006         	goto	u4170
  2661  000C62                     u4171:
  2662  000C62  EF52  F006         	goto	l3482
  2663  000C66                     u4170:
  2664  000C66                     
  2665                           ; BSR set to: 0
  2666  000C66  0EFF               	movlw	255
  2667  000C68  6E35               	movwf	??_efgtoa^0,c
  2668  000C6A  0EFF               	movlw	255
  2669  000C6C  6E36               	movwf	(??_efgtoa+1)^0,c
  2670  000C6E  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  2671  000C72  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  2672  000C76  5035               	movf	??_efgtoa^0,w,c
  2673  000C78  2637               	addwf	(??_efgtoa+2)^0,f,c
  2674  000C7A  5036               	movf	(??_efgtoa+1)^0,w,c
  2675  000C7C  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2676  000C7E  5190               	movf	efgtoa@e& (0+255),w,b
  2677  000C80  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2678  000C82  5038               	movf	(??_efgtoa+3)^0,w,c
  2679  000C84  0A80               	xorlw	128
  2680  000C86  6E39               	movwf	(??_efgtoa+4)^0,c
  2681  000C88  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2682  000C8A  0A80               	xorlw	128
  2683  000C8C  5839               	subwfb	(??_efgtoa+4)^0,w,c
  2684  000C8E  A0D8               	btfss	status,0,c
  2685  000C90  EF4C  F006         	goto	u4181
  2686  000C94  EF4E  F006         	goto	u4180
  2687  000C98                     u4181:
  2688  000C98  EF52  F006         	goto	l3482
  2689  000C9C                     u4180:
  2690  000C9C                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2693  000C9C  0E66               	movlw	102
  2694  000C9E  6F80               	movwf	efgtoa@nmode& (0+255),b
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2697  000CA0  EF54  F006         	goto	l3484
  2698  000CA4                     l3482:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2702  000CA4  0E65               	movlw	101
  2703  000CA6  6F80               	movwf	efgtoa@nmode& (0+255),b
  2704  000CA8                     l3484:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2708  000CA8  C07C  F072         	movff	efgtoa@p,efgtoa@m
  2709  000CAC  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  2710  000CB0                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2713  000CB0  0E67               	movlw	103
  2714  000CB2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2715  000CB4  A4D8               	btfss	status,2,c
  2716  000CB6  EF5F  F006         	goto	u4191
  2717  000CBA  EF61  F006         	goto	u4190
  2718  000CBE                     u4191:
  2719  000CBE  EF71  F006         	goto	l3492
  2720  000CC2                     u4190:
  2721  000CC2                     
  2722                           ; BSR set to: 0
  2723  000CC2  0E66               	movlw	102
  2724  000CC4  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2725  000CC6  A4D8               	btfss	status,2,c
  2726  000CC8  EF68  F006         	goto	u4201
  2727  000CCC  EF6A  F006         	goto	u4200
  2728  000CD0                     u4201:
  2729  000CD0  EF73  F006         	goto	l3494
  2730  000CD4                     u4200:
  2731  000CD4                     
  2732                           ; BSR set to: 0
  2733  000CD4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2734  000CD6  EF71  F006         	goto	u4210
  2735  000CDA  EF6F  F006         	goto	u4211
  2736  000CDE                     u4211:
  2737  000CDE  EF73  F006         	goto	l3494
  2738  000CE2                     u4210:
  2739  000CE2                     l3492:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2743  000CE2  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2744  000CE4  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2745  000CE6                     l3494:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2749  000CE6  0E66               	movlw	102
  2750  000CE8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2751  000CEA  A4D8               	btfss	status,2,c
  2752  000CEC  EF7A  F006         	goto	u4221
  2753  000CF0  EF7C  F006         	goto	u4220
  2754  000CF4                     u4221:
  2755  000CF4  EF9C  F006         	goto	l3504
  2756  000CF8                     u4220:
  2757  000CF8                     
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2760  000CF8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2761  000CFA  EF83  F006         	goto	u4230
  2762  000CFE  EF81  F006         	goto	u4231
  2763  000D02                     u4231:
  2764  000D02  EF8F  F006         	goto	l3500
  2765  000D06                     u4230:
  2766  000D06                     
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2769  000D06  0E00               	movlw	0
  2770  000D08  6F94               	movwf	efgtoa@u& (0+255),b
  2771  000D0A  0E00               	movlw	0
  2772  000D0C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2773  000D0E  0E80               	movlw	128
  2774  000D10  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2775  000D12  0E3F               	movlw	63
  2776  000D14  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2779  000D16  0E00               	movlw	0
  2780  000D18  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2781  000D1A  0E00               	movlw	0
  2782  000D1C  6F90               	movwf	efgtoa@e& (0+255),b
  2783  000D1E                     l3500:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2787  000D1E  0E67               	movlw	103
  2788  000D20  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2789  000D22  B4D8               	btfsc	status,2,c
  2790  000D24  EF96  F006         	goto	u4241
  2791  000D28  EF98  F006         	goto	u4240
  2792  000D2C                     u4241:
  2793  000D2C  EF9C  F006         	goto	l3504
  2794  000D30                     u4240:
  2795  000D30                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2798  000D30  5190               	movf	efgtoa@e& (0+255),w,b
  2799  000D32  2772               	addwf	efgtoa@m& (0+255),f,b
  2800  000D34  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2801  000D36  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2802  000D38                     l3504:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2806  000D38  0E00               	movlw	0
  2807  000D3A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2808  000D3C  0E00               	movlw	0
  2809  000D3E  6F8A               	movwf	efgtoa@i& (0+255),b
  2810  000D40                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2813  000D40  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2814  000D44  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2815  000D48  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2816  000D4C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2817  000D50                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2820  000D50  C094  F074         	movff	efgtoa@u,efgtoa@ou
  2821  000D54  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  2822  000D58  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  2823  000D5C  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2826  000D60  EF2D  F007         	goto	l3518
  2827  000D64                     l3510:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2831  000D64  C082  F001         	movff	efgtoa@h,___fldiv@b
  2832  000D68  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2833  000D6C  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2834  000D70  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2835  000D74  C094  F005         	movff	efgtoa@u,___fldiv@a
  2836  000D78  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2837  000D7C  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2838  000D80  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2839  000D84  EC67  F011         	call	___fldiv	;wreg free
  2840  000D88  C001  F01A         	movff	?___fldiv,floorf@x
  2841  000D8C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2842  000D90  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2843  000D94  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2844  000D98  EC34  F013         	call	_floorf	;wreg free
  2845  000D9C  C01A  F086         	movff	?_floorf,efgtoa@l
  2846  000DA0  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2847  000DA4  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2848  000DA8  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2851  000DAC  C086  F001         	movff	efgtoa@l,___fltol@f1
  2852  000DB0  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2853  000DB4  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2854  000DB8  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2855  000DBC  ECDF  F015         	call	___fltol	;wreg free
  2856  000DC0  C001  F078         	movff	?___fltol,efgtoa@d
  2857  000DC4  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2858  000DC8                     
  2859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2860  000DC8  C082  F01A         	movff	efgtoa@h,___flsub@b
  2861  000DCC  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2862  000DD0  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2863  000DD4  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2864  000DD8  C094  F005         	movff	efgtoa@u,___flmul@a
  2865  000DDC  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2866  000DE0  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2867  000DE4  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2868  000DE8  C086  F001         	movff	efgtoa@l,___flmul@b
  2869  000DEC  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2870  000DF0  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2871  000DF4  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2872  000DF8  EC52  F00F         	call	___flmul	;wreg free
  2873  000DFC  C001  F01E         	movff	?___flmul,___flsub@a
  2874  000E00  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2875  000E04  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2876  000E08  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2877  000E0C  ECA7  F01B         	call	___flsub	;wreg free
  2878  000E10  C01A  F082         	movff	?___flsub,efgtoa@h
  2879  000E14  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2880  000E18  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2881  000E1C  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2882  000E20                     
  2883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2884  000E20  C094  F001         	movff	efgtoa@u,___fldiv@b
  2885  000E24  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2886  000E28  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2887  000E2C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2888  000E30  0E00               	movlw	0
  2889  000E32  6E05               	movwf	___fldiv@a^0,c
  2890  000E34  0E00               	movlw	0
  2891  000E36  6E06               	movwf	(___fldiv@a+1)^0,c
  2892  000E38  0E20               	movlw	32
  2893  000E3A  6E07               	movwf	(___fldiv@a+2)^0,c
  2894  000E3C  0E41               	movlw	65
  2895  000E3E  6E08               	movwf	(___fldiv@a+3)^0,c
  2896  000E40  EC67  F011         	call	___fldiv	;wreg free
  2897  000E44  C001  F094         	movff	?___fldiv,efgtoa@u
  2898  000E48  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2899  000E4C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2900  000E50  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2901  000E54                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2903  000E54  0100               	movlb	0	; () banked
  2904  000E56  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2905  000E58  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2906  000E5A                     l3518:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2910  000E5A  5172               	movf	efgtoa@m& (0+255),w,b
  2911  000E5C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2912  000E5E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2913  000E60  0A80               	xorlw	128
  2914  000E62  6E35               	movwf	??_efgtoa^0,c
  2915  000E64  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  2916  000E66  0A80               	xorlw	128
  2917  000E68  5835               	subwfb	??_efgtoa^0,w,c
  2918  000E6A  A0D8               	btfss	status,0,c
  2919  000E6C  EF3A  F007         	goto	u4251
  2920  000E70  EF3C  F007         	goto	u4250
  2921  000E74                     u4251:
  2922  000E74  EFB2  F006         	goto	l3510
  2923  000E78                     u4250:
  2924  000E78                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2927  000E78  C094  F001         	movff	efgtoa@u,___flmul@b
  2928  000E7C  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2929  000E80  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2930  000E84  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2931  000E88  0E00               	movlw	0
  2932  000E8A  6E05               	movwf	___flmul@a^0,c
  2933  000E8C  0E00               	movlw	0
  2934  000E8E  6E06               	movwf	(___flmul@a+1)^0,c
  2935  000E90  0EA0               	movlw	160
  2936  000E92  6E07               	movwf	(___flmul@a+2)^0,c
  2937  000E94  0E40               	movlw	64
  2938  000E96  6E08               	movwf	(___flmul@a+3)^0,c
  2939  000E98  EC52  F00F         	call	___flmul	;wreg free
  2940  000E9C  C001  F086         	movff	?___flmul,efgtoa@l
  2941  000EA0  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  2942  000EA4  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  2943  000EA8  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  2944  000EAC                     
  2945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2946  000EAC  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2947  000EB0  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2948  000EB4  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2949  000EB8  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2950  000EBC  C086  F01E         	movff	efgtoa@l,___flge@ff2
  2951  000EC0  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2952  000EC4  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2953  000EC8  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2954  000ECC  EC62  F016         	call	___flge	;wreg free
  2955  000ED0  B0D8               	btfsc	status,0,c
  2956  000ED2  EF6D  F007         	goto	u4261
  2957  000ED6  EF6F  F007         	goto	u4260
  2958  000EDA                     u4261:
  2959  000EDA  EF7A  F007         	goto	l3526
  2960  000EDE                     u4260:
  2961  000EDE                     
  2962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2963  000EDE  0E00               	movlw	0
  2964  000EE0  0100               	movlb	0	; () banked
  2965  000EE2  6F86               	movwf	efgtoa@l& (0+255),b
  2966  000EE4  0E00               	movlw	0
  2967  000EE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2968  000EE8  0E00               	movlw	0
  2969  000EEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2970  000EEC  0E00               	movlw	0
  2971  000EEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  2974  000EF0  EFA3  F007         	goto	l3532
  2975  000EF4                     l3526:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2978  000EF4  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2979  000EF8  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2980  000EFC  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2981  000F00  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2982  000F04  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2983  000F08  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2984  000F0C  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2985  000F10  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2986  000F14  EC4E  F019         	call	___fleq	;wreg free
  2987  000F18  A0D8               	btfss	status,0,c
  2988  000F1A  EF91  F007         	goto	u4271
  2989  000F1E  EF93  F007         	goto	u4270
  2990  000F22                     u4271:
  2991  000F22  EFA3  F007         	goto	l3532
  2992  000F26                     u4270:
  2993  000F26  0100               	movlb	0	; () banked
  2994  000F28  B178               	btfsc	efgtoa@d& (0+255),0,b
  2995  000F2A  EF99  F007         	goto	u4281
  2996  000F2E  EF9B  F007         	goto	u4280
  2997  000F32                     u4281:
  2998  000F32  EFA3  F007         	goto	l3532
  2999  000F36                     u4280:
  3000  000F36                     
  3001                           ; BSR set to: 0
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3003  000F36  0E00               	movlw	0
  3004  000F38  6F86               	movwf	efgtoa@l& (0+255),b
  3005  000F3A  0E00               	movlw	0
  3006  000F3C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3007  000F3E  0E00               	movlw	0
  3008  000F40  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3009  000F42  0E00               	movlw	0
  3010  000F44  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3011  000F46                     l3532:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3014  000F46  C08C  F001         	movff	efgtoa@g,___fladd@b
  3015  000F4A  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3016  000F4E  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3017  000F52  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3018  000F56  C086  F005         	movff	efgtoa@l,___fladd@a
  3019  000F5A  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3020  000F5E  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3021  000F62  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3022  000F66  ECF2  F00C         	call	___fladd	;wreg free
  3023  000F6A  C001  F082         	movff	?___fladd,efgtoa@h
  3024  000F6E  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3025  000F72  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3026  000F76  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3027  000F7A                     
  3028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3029  000F7A  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3030  000F7E  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3031  000F82  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3032  000F86  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3033  000F8A  0E00               	movlw	0
  3034  000F8C  6E05               	movwf	___flmul@a^0,c
  3035  000F8E  0E00               	movlw	0
  3036  000F90  6E06               	movwf	(___flmul@a+1)^0,c
  3037  000F92  0E20               	movlw	32
  3038  000F94  6E07               	movwf	(___flmul@a+2)^0,c
  3039  000F96  0E41               	movlw	65
  3040  000F98  6E08               	movwf	(___flmul@a+3)^0,c
  3041  000F9A  C074  F001         	movff	efgtoa@ou,___flmul@b
  3042  000F9E  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3043  000FA2  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3044  000FA6  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3045  000FAA  EC52  F00F         	call	___flmul	;wreg free
  3046  000FAE  C001  F01E         	movff	?___flmul,___flge@ff2
  3047  000FB2  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3048  000FB6  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3049  000FBA  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3050  000FBE  EC62  F016         	call	___flge	;wreg free
  3051  000FC2  A0D8               	btfss	status,0,c
  3052  000FC4  EFE6  F007         	goto	u4291
  3053  000FC8  EFE8  F007         	goto	u4290
  3054  000FCC                     u4291:
  3055  000FCC  EF11  F008         	goto	l3544
  3056  000FD0                     u4290:
  3057  000FD0                     
  3058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  3059  000FD0  0100               	movlb	0	; () banked
  3060  000FD2  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3061  000FD4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3062  000FD6                     
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3065  000FD6  C074  F001         	movff	efgtoa@ou,___flmul@b
  3066  000FDA  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3067  000FDE  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3068  000FE2  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3069  000FE6  0E00               	movlw	0
  3070  000FE8  6E05               	movwf	___flmul@a^0,c
  3071  000FEA  0E00               	movlw	0
  3072  000FEC  6E06               	movwf	(___flmul@a+1)^0,c
  3073  000FEE  0E20               	movlw	32
  3074  000FF0  6E07               	movwf	(___flmul@a+2)^0,c
  3075  000FF2  0E41               	movlw	65
  3076  000FF4  6E08               	movwf	(___flmul@a+3)^0,c
  3077  000FF6  EC52  F00F         	call	___flmul	;wreg free
  3078  000FFA  C001  F074         	movff	?___flmul,efgtoa@ou
  3079  000FFE  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3080  001002  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3081  001006  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3082  00100A                     
  3083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3084  00100A  0E66               	movlw	102
  3085  00100C  0100               	movlb	0	; () banked
  3086  00100E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3087  001010  A4D8               	btfss	status,2,c
  3088  001012  EF0D  F008         	goto	u4301
  3089  001016  EF0F  F008         	goto	u4300
  3090  00101A                     u4301:
  3091  00101A  EF11  F008         	goto	l3544
  3092  00101E                     u4300:
  3093  00101E                     
  3094                           ; BSR set to: 0
  3095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  3096  00101E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3097  001020  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3098  001022                     l3544:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3101  001022  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3102  001026  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3103  00102A  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3104  00102E  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3105  001032                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3107  001032  0E65               	movlw	101
  3108  001034  0100               	movlb	0	; () banked
  3109  001036  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3110  001038  B4D8               	btfsc	status,2,c
  3111  00103A  EF21  F008         	goto	u4311
  3112  00103E  EF23  F008         	goto	u4310
  3113  001042                     u4311:
  3114  001042  EF29  F008         	goto	l3550
  3115  001046                     u4310:
  3116  001046                     
  3117                           ; BSR set to: 0
  3118  001046  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3119  00104A  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3120  00104E  EF2D  F008         	goto	l880
  3121  001052                     l3550:
  3122                           
  3123                           ; BSR set to: 0
  3124  001052  0E00               	movlw	0
  3125  001054  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3126  001056  0E00               	movlw	0
  3127  001058  6F70               	movwf	efgtoa@ne& (0+255),b
  3128  00105A                     l880:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3132  00105A  0E00               	movlw	0
  3133  00105C  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3134  00105E  0E00               	movlw	0
  3135  001060  6F6E               	movwf	efgtoa@pp& (0+255),b
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3138  001062  0E00               	movlw	0
  3139  001064  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3140  001066  0E00               	movlw	0
  3141  001068  6F6C               	movwf	efgtoa@t& (0+255),b
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3144  00106A  0E00               	movlw	0
  3145  00106C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3146  00106E  0E00               	movlw	0
  3147  001070  6F8A               	movwf	efgtoa@i& (0+255),b
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3150  001072  EF29  F009         	goto	l3600
  3151  001076                     l3552:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3155  001076  C082  F001         	movff	efgtoa@h,___fldiv@b
  3156  00107A  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3157  00107E  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3158  001082  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3159  001086  C094  F005         	movff	efgtoa@u,___fldiv@a
  3160  00108A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3161  00108E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3162  001092  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3163  001096  EC67  F011         	call	___fldiv	;wreg free
  3164  00109A  C001  F01A         	movff	?___fldiv,floorf@x
  3165  00109E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3166  0010A2  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3167  0010A6  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3168  0010AA  EC34  F013         	call	_floorf	;wreg free
  3169  0010AE  C01A  F086         	movff	?_floorf,efgtoa@l
  3170  0010B2  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3171  0010B6  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3172  0010BA  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3175  0010BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3176  0010C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3177  0010C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3178  0010CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3179  0010CE  ECDF  F015         	call	___fltol	;wreg free
  3180  0010D2  C001  F078         	movff	?___fltol,efgtoa@d
  3181  0010D6  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3182  0010DA                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3184  0010DA  B85E               	btfsc	_flags^0,4,c
  3185  0010DC  EF72  F008         	goto	u4321
  3186  0010E0  EF74  F008         	goto	u4320
  3187  0010E4                     u4321:
  3188  0010E4  EF92  F008         	goto	l3564
  3189  0010E8                     u4320:
  3190  0010E8  0100               	movlb	0	; () banked
  3191  0010EA  5178               	movf	efgtoa@d& (0+255),w,b
  3192  0010EC  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3193  0010EE  A4D8               	btfss	status,2,c
  3194  0010F0  EF7C  F008         	goto	u4331
  3195  0010F4  EF7E  F008         	goto	u4330
  3196  0010F8                     u4331:
  3197  0010F8  EF92  F008         	goto	l3564
  3198  0010FC                     u4330:
  3199  0010FC                     
  3200                           ; BSR set to: 0
  3201  0010FC  0E67               	movlw	103
  3202  0010FE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3203  001100  A4D8               	btfss	status,2,c
  3204  001102  EF85  F008         	goto	u4341
  3205  001106  EF87  F008         	goto	u4340
  3206  00110A                     u4341:
  3207  00110A  EF92  F008         	goto	l3564
  3208  00110E                     u4340:
  3209  00110E                     
  3210                           ; BSR set to: 0
  3211  00110E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3212  001110  EF8E  F008         	goto	u4350
  3213  001114  EF8C  F008         	goto	u4351
  3214  001118                     u4351:
  3215  001118  EF92  F008         	goto	l3564
  3216  00111C                     u4350:
  3217  00111C                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3220  00111C  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3221  00111E  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3224  001120  EFDD  F008         	goto	l3592
  3225  001124                     l3564:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3228  001124  0100               	movlb	0	; () banked
  3229  001126  516E               	movf	efgtoa@pp& (0+255),w,b
  3230  001128  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3231  00112A  A4D8               	btfss	status,2,c
  3232  00112C  EF9A  F008         	goto	u4361
  3233  001130  EF9C  F008         	goto	u4360
  3234  001134                     u4361:
  3235  001134  EFC6  F008         	goto	l3584
  3236  001138                     u4360:
  3237  001138                     
  3238                           ; BSR set to: 0
  3239  001138  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3240  00113A  EFA3  F008         	goto	u4370
  3241  00113E  EFA1  F008         	goto	u4371
  3242  001142                     u4371:
  3243  001142  EFC6  F008         	goto	l3584
  3244  001146                     u4370:
  3245  001146                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3248  001146  0E00               	movlw	low _dbuf
  3249  001148  2592               	addwf	efgtoa@n& (0+255),w,b
  3250  00114A  6ED9               	movwf	fsr2l,c
  3251  00114C  0E01               	movlw	high _dbuf
  3252  00114E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3253  001150  6EDA               	movwf	fsr2h,c
  3254  001152  0E2E               	movlw	46
  3255  001154  6EDF               	movwf	indf2,c
  3256  001156                     
  3257                           ; BSR set to: 0
  3258  001156  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3259  001158  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3260  00115A                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3263  00115A  077E               	decf	efgtoa@w& (0+255),f,b
  3264  00115C  A0D8               	btfss	status,0,c
  3265  00115E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3266  001160                     
  3267                           ; BSR set to: 0
  3268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3269  001160  0E00               	movlw	0
  3270  001162  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3271  001164  0E01               	movlw	1
  3272  001166  6F6E               	movwf	efgtoa@pp& (0+255),b
  3273  001168  EFC6  F008         	goto	l3584
  3274  00116C                     l3576:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3278  00116C  0E00               	movlw	low _dbuf
  3279  00116E  2592               	addwf	efgtoa@n& (0+255),w,b
  3280  001170  6ED9               	movwf	fsr2l,c
  3281  001172  0E01               	movlw	high _dbuf
  3282  001174  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3283  001176  6EDA               	movwf	fsr2h,c
  3284  001178  0E30               	movlw	48
  3285  00117A  6EDF               	movwf	indf2,c
  3286  00117C                     
  3287                           ; BSR set to: 0
  3288  00117C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3289  00117E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3290  001180                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3293  001180  077E               	decf	efgtoa@w& (0+255),f,b
  3294  001182  A0D8               	btfss	status,0,c
  3295  001184  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3296  001186                     
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3299  001186  076C               	decf	efgtoa@t& (0+255),f,b
  3300  001188  A0D8               	btfss	status,0,c
  3301  00118A  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3302  00118C                     l3584:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3306  00118C  516C               	movf	efgtoa@t& (0+255),w,b
  3307  00118E  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3308  001190  A4D8               	btfss	status,2,c
  3309  001192  EFCD  F008         	goto	u4381
  3310  001196  EFCF  F008         	goto	u4380
  3311  00119A                     u4381:
  3312  00119A  EFB6  F008         	goto	l3576
  3313  00119E                     u4380:
  3314  00119E                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3317  00119E  0E00               	movlw	low _dbuf
  3318  0011A0  2592               	addwf	efgtoa@n& (0+255),w,b
  3319  0011A2  6ED9               	movwf	fsr2l,c
  3320  0011A4  0E01               	movlw	high _dbuf
  3321  0011A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3322  0011A8  6EDA               	movwf	fsr2h,c
  3323  0011AA  5178               	movf	efgtoa@d& (0+255),w,b
  3324  0011AC  0F30               	addlw	48
  3325  0011AE  6EDF               	movwf	indf2,c
  3326  0011B0                     
  3327                           ; BSR set to: 0
  3328  0011B0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3329  0011B2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3330  0011B4                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3333  0011B4  077E               	decf	efgtoa@w& (0+255),f,b
  3334  0011B6  A0D8               	btfss	status,0,c
  3335  0011B8  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3336  0011BA                     l3592:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3340  0011BA  C082  F01A         	movff	efgtoa@h,___flsub@b
  3341  0011BE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3342  0011C2  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3343  0011C6  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3344  0011CA  C094  F005         	movff	efgtoa@u,___flmul@a
  3345  0011CE  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3346  0011D2  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3347  0011D6  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3348  0011DA  C086  F001         	movff	efgtoa@l,___flmul@b
  3349  0011DE  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3350  0011E2  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3351  0011E6  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3352  0011EA  EC52  F00F         	call	___flmul	;wreg free
  3353  0011EE  C001  F01E         	movff	?___flmul,___flsub@a
  3354  0011F2  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3355  0011F6  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3356  0011FA  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3357  0011FE  ECA7  F01B         	call	___flsub	;wreg free
  3358  001202  C01A  F082         	movff	?___flsub,efgtoa@h
  3359  001206  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3360  00120A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3361  00120E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3362  001212                     
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3364  001212  C094  F001         	movff	efgtoa@u,___fldiv@b
  3365  001216  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3366  00121A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3367  00121E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3368  001222  0E00               	movlw	0
  3369  001224  6E05               	movwf	___fldiv@a^0,c
  3370  001226  0E00               	movlw	0
  3371  001228  6E06               	movwf	(___fldiv@a+1)^0,c
  3372  00122A  0E20               	movlw	32
  3373  00122C  6E07               	movwf	(___fldiv@a+2)^0,c
  3374  00122E  0E41               	movlw	65
  3375  001230  6E08               	movwf	(___fldiv@a+3)^0,c
  3376  001232  EC67  F011         	call	___fldiv	;wreg free
  3377  001236  C001  F094         	movff	?___fldiv,efgtoa@u
  3378  00123A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3379  00123E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3380  001242  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3381  001246                     
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3383  001246  0100               	movlb	0	; () banked
  3384  001248  0770               	decf	efgtoa@ne& (0+255),f,b
  3385  00124A  A0D8               	btfss	status,0,c
  3386  00124C  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3387  00124E                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3390  00124E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3391  001250  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3392  001252                     l3600:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3396  001252  5172               	movf	efgtoa@m& (0+255),w,b
  3397  001254  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3398  001256  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3399  001258  0A80               	xorlw	128
  3400  00125A  6E35               	movwf	??_efgtoa^0,c
  3401  00125C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3402  00125E  0A80               	xorlw	128
  3403  001260  5835               	subwfb	??_efgtoa^0,w,c
  3404  001262  B0D8               	btfsc	status,0,c
  3405  001264  EF36  F009         	goto	u4391
  3406  001268  EF38  F009         	goto	u4390
  3407  00126C                     u4391:
  3408  00126C  EF46  F009         	goto	l3604
  3409  001270                     u4390:
  3410  001270                     
  3411                           ; BSR set to: 0
  3412  001270  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3413  001272  EF44  F009         	goto	u4401
  3414  001276  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3415  001278  E109               	bnz	u4400
  3416  00127A  0E4B               	movlw	75
  3417  00127C  5D92               	subwf	efgtoa@n& (0+255),w,b
  3418  00127E  A0D8               	btfss	status,0,c
  3419  001280  EF44  F009         	goto	u4401
  3420  001284  EF46  F009         	goto	u4400
  3421  001288                     u4401:
  3422  001288  EF3B  F008         	goto	l3552
  3423  00128C                     u4400:
  3424  00128C                     l3604:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3428  00128C  516E               	movf	efgtoa@pp& (0+255),w,b
  3429  00128E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3430  001290  A4D8               	btfss	status,2,c
  3431  001292  EF4D  F009         	goto	u4411
  3432  001296  EF4F  F009         	goto	u4410
  3433  00129A                     u4411:
  3434  00129A  EF60  F009         	goto	l3612
  3435  00129E                     u4410:
  3436  00129E                     
  3437                           ; BSR set to: 0
  3438  00129E  A85E               	btfss	_flags^0,4,c
  3439  0012A0  EF54  F009         	goto	u4421
  3440  0012A4  EF56  F009         	goto	u4420
  3441  0012A8                     u4421:
  3442  0012A8  EF60  F009         	goto	l3612
  3443  0012AC                     u4420:
  3444  0012AC                     
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3447  0012AC  0E00               	movlw	low _dbuf
  3448  0012AE  2592               	addwf	efgtoa@n& (0+255),w,b
  3449  0012B0  6ED9               	movwf	fsr2l,c
  3450  0012B2  0E01               	movlw	high _dbuf
  3451  0012B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3452  0012B6  6EDA               	movwf	fsr2h,c
  3453  0012B8  0E2E               	movlw	46
  3454  0012BA  6EDF               	movwf	indf2,c
  3455  0012BC                     
  3456                           ; BSR set to: 0
  3457  0012BC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3458  0012BE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3459  0012C0                     l3612:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3463  0012C0  0E00               	movlw	low _dbuf
  3464  0012C2  2592               	addwf	efgtoa@n& (0+255),w,b
  3465  0012C4  6ED9               	movwf	fsr2l,c
  3466  0012C6  0E01               	movlw	high _dbuf
  3467  0012C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3468  0012CA  6EDA               	movwf	fsr2h,c
  3469  0012CC  0E00               	movlw	0
  3470  0012CE  6EDF               	movwf	indf2,c
  3471  0012D0                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3474  0012D0  0E65               	movlw	101
  3475  0012D2  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3476  0012D4  A4D8               	btfss	status,2,c
  3477  0012D6  EF6F  F009         	goto	u4431
  3478  0012DA  EF71  F009         	goto	u4430
  3479  0012DE                     u4431:
  3480  0012DE  EFCA  F004         	goto	l3414
  3481  0012E2                     u4430:
  3482  0012E2                     
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3485  0012E2  0E00               	movlw	0
  3486  0012E4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3487  0012E6  0E4F               	movlw	79
  3488  0012E8  6F8A               	movwf	efgtoa@i& (0+255),b
  3489  0012EA                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3492  0012EA  0E00               	movlw	low _dbuf
  3493  0012EC  258A               	addwf	efgtoa@i& (0+255),w,b
  3494  0012EE  6ED9               	movwf	fsr2l,c
  3495  0012F0  0E01               	movlw	high _dbuf
  3496  0012F2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3497  0012F4  6EDA               	movwf	fsr2h,c
  3498  0012F6  0E00               	movlw	0
  3499  0012F8  6EDF               	movwf	indf2,c
  3500  0012FA                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3503  0012FA  0E00               	movlw	0
  3504  0012FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3505  0012FE  0E00               	movlw	0
  3506  001300  6F7A               	movwf	efgtoa@sign& (0+255),b
  3507  001302                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3510  001302  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3511  001304  EF88  F009         	goto	u4440
  3512  001308  EF86  F009         	goto	u4441
  3513  00130C                     u4441:
  3514  00130C  EF90  F009         	goto	l3628
  3515  001310                     u4440:
  3516  001310                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3519  001310  0E00               	movlw	0
  3520  001312  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3521  001314  0E01               	movlw	1
  3522  001316  6F7A               	movwf	efgtoa@sign& (0+255),b
  3523  001318                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3526  001318  6D90               	negf	efgtoa@e& (0+255),b
  3527  00131A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3528  00131C  B0D8               	btfsc	status,0,c
  3529  00131E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3530  001320                     l3628:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3534  001320  0E00               	movlw	0
  3535  001322  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3536  001324  0E02               	movlw	2
  3537  001326  6F7C               	movwf	efgtoa@p& (0+255),b
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3540  001328  EFC1  F009         	goto	l3640
  3541  00132C                     l3630:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3545  00132C  078A               	decf	efgtoa@i& (0+255),f,b
  3546  00132E  A0D8               	btfss	status,0,c
  3547  001330  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3548  001332                     
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3551  001332  0E00               	movlw	low _dbuf
  3552  001334  258A               	addwf	efgtoa@i& (0+255),w,b
  3553  001336  6ED9               	movwf	fsr2l,c
  3554  001338  0E01               	movlw	high _dbuf
  3555  00133A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3556  00133C  6EDA               	movwf	fsr2h,c
  3557  00133E  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3558  001342  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3559  001346  0E00               	movlw	0
  3560  001348  6E04               	movwf	(___awmod@divisor+1)^0,c
  3561  00134A  0E0A               	movlw	10
  3562  00134C  6E03               	movwf	___awmod@divisor^0,c
  3563  00134E  ECF6  F018         	call	___awmod	;wreg free
  3564  001352  5001               	movf	?___awmod^0,w,c
  3565  001354  0F30               	addlw	48
  3566  001356  6EDF               	movwf	indf2,c
  3567  001358                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3569  001358  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3570  00135C  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3571  001360  0E00               	movlw	0
  3572  001362  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3573  001364  0E0A               	movlw	10
  3574  001366  6E03               	movwf	___awdiv@divisor^0,c
  3575  001368  EC33  F018         	call	___awdiv	;wreg free
  3576  00136C  C001  F090         	movff	?___awdiv,efgtoa@e
  3577  001370  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3578  001374                     
  3579                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3580  001374  0100               	movlb	0	; () banked
  3581  001376  077C               	decf	efgtoa@p& (0+255),f,b
  3582  001378  A0D8               	btfss	status,0,c
  3583  00137A  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3584  00137C                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3587  00137C  077E               	decf	efgtoa@w& (0+255),f,b
  3588  00137E  A0D8               	btfss	status,0,c
  3589  001380  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3590  001382                     l3640:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3594  001382  5190               	movf	efgtoa@e& (0+255),w,b
  3595  001384  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3596  001386  A4D8               	btfss	status,2,c
  3597  001388  EFC8  F009         	goto	u4451
  3598  00138C  EFCA  F009         	goto	u4450
  3599  001390                     u4451:
  3600  001390  EF96  F009         	goto	l3630
  3601  001394                     u4450:
  3602  001394                     
  3603                           ; BSR set to: 0
  3604  001394  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3605  001396  EFD7  F009         	goto	u4460
  3606  00139A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3607  00139C  E106               	bnz	u4461
  3608  00139E  057C               	decf	efgtoa@p& (0+255),w,b
  3609  0013A0  B0D8               	btfsc	status,0,c
  3610  0013A2  EFD5  F009         	goto	u4461
  3611  0013A6  EFD7  F009         	goto	u4460
  3612  0013AA                     u4461:
  3613  0013AA  EF96  F009         	goto	l3630
  3614  0013AE                     u4460:
  3615  0013AE                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  3618  0013AE  078A               	decf	efgtoa@i& (0+255),f,b
  3619  0013B0  A0D8               	btfss	status,0,c
  3620  0013B2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3621  0013B4                     
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3624  0013B4  517A               	movf	efgtoa@sign& (0+255),w,b
  3625  0013B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3626  0013B8  A4D8               	btfss	status,2,c
  3627  0013BA  EFE1  F009         	goto	u4471
  3628  0013BE  EFE3  F009         	goto	u4470
  3629  0013C2                     u4471:
  3630  0013C2  EFE9  F009         	goto	l3650
  3631  0013C6                     u4470:
  3632  0013C6                     
  3633                           ; BSR set to: 0
  3634  0013C6  0E00               	movlw	0
  3635  0013C8  6F67               	movwf	(_efgtoa$815+1)& (0+255),b
  3636  0013CA  0E2B               	movlw	43
  3637  0013CC  6F66               	movwf	_efgtoa$815& (0+255),b
  3638  0013CE  EFED  F009         	goto	l3652
  3639  0013D2                     l3650:
  3640                           
  3641                           ; BSR set to: 0
  3642  0013D2  0E00               	movlw	0
  3643  0013D4  6F67               	movwf	(_efgtoa$815+1)& (0+255),b
  3644  0013D6  0E2D               	movlw	45
  3645  0013D8  6F66               	movwf	_efgtoa$815& (0+255),b
  3646  0013DA                     l3652:
  3647                           
  3648                           ; BSR set to: 0
  3649  0013DA  0E00               	movlw	low _dbuf
  3650  0013DC  258A               	addwf	efgtoa@i& (0+255),w,b
  3651  0013DE  6ED9               	movwf	fsr2l,c
  3652  0013E0  0E01               	movlw	high _dbuf
  3653  0013E2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3654  0013E4  6EDA               	movwf	fsr2h,c
  3655  0013E6  C066  FFDF         	movff	_efgtoa$815,indf2
  3656  0013EA                     
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  3659  0013EA  077E               	decf	efgtoa@w& (0+255),f,b
  3660  0013EC  A0D8               	btfss	status,0,c
  3661  0013EE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3662  0013F0                     
  3663                           ; BSR set to: 0
  3664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3665  0013F0  078A               	decf	efgtoa@i& (0+255),f,b
  3666  0013F2  A0D8               	btfss	status,0,c
  3667  0013F4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3668  0013F6                     
  3669                           ; BSR set to: 0
  3670  0013F6  0EBF               	movlw	191
  3671  0013F8  6E35               	movwf	??_efgtoa^0,c
  3672  0013FA  0EFF               	movlw	255
  3673  0013FC  6E36               	movwf	(??_efgtoa+1)^0,c
  3674  0013FE  5034               	movf	efgtoa@c^0,w,c
  3675  001400  6E37               	movwf	(??_efgtoa+2)^0,c
  3676  001402  6A38               	clrf	(??_efgtoa+3)^0,c
  3677  001404  5035               	movf	??_efgtoa^0,w,c
  3678  001406  2637               	addwf	(??_efgtoa+2)^0,f,c
  3679  001408  5036               	movf	(??_efgtoa+1)^0,w,c
  3680  00140A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3681  00140C  5038               	movf	(??_efgtoa+3)^0,w,c
  3682  00140E  E10A               	bnz	u4480
  3683  001410  0E1A               	movlw	26
  3684  001412  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3685  001414  A0D8               	btfss	status,0,c
  3686  001416  EF0F  F00A         	goto	u4481
  3687  00141A  EF12  F00A         	goto	u4480
  3688  00141E                     u4481:
  3689  00141E  0E01               	movlw	1
  3690  001420  EF13  F00A         	goto	u4490
  3691  001424                     u4480:
  3692  001424  0E00               	movlw	0
  3693  001426                     u4490:
  3694  001426  6F6A               	movwf	_efgtoa$817& (0+255),b
  3695  001428  6B6B               	clrf	(_efgtoa$817+1)& (0+255),b
  3696  00142A                     
  3697                           ; BSR set to: 0
  3698  00142A  516A               	movf	_efgtoa$817& (0+255),w,b
  3699  00142C  116B               	iorwf	(_efgtoa$817+1)& (0+255),w,b
  3700  00142E  A4D8               	btfss	status,2,c
  3701  001430  EF1C  F00A         	goto	u4501
  3702  001434  EF1E  F00A         	goto	u4500
  3703  001438                     u4501:
  3704  001438  EF24  F00A         	goto	l3666
  3705  00143C                     u4500:
  3706  00143C                     
  3707                           ; BSR set to: 0
  3708  00143C  0E00               	movlw	0
  3709  00143E  6F69               	movwf	(_efgtoa$816+1)& (0+255),b
  3710  001440  0E65               	movlw	101
  3711  001442  6F68               	movwf	_efgtoa$816& (0+255),b
  3712  001444  EF28  F00A         	goto	l3668
  3713  001448                     l3666:
  3714                           
  3715                           ; BSR set to: 0
  3716  001448  0E00               	movlw	0
  3717  00144A  6F69               	movwf	(_efgtoa$816+1)& (0+255),b
  3718  00144C  0E45               	movlw	69
  3719  00144E  6F68               	movwf	_efgtoa$816& (0+255),b
  3720  001450                     l3668:
  3721                           
  3722                           ; BSR set to: 0
  3723  001450  0E00               	movlw	low _dbuf
  3724  001452  258A               	addwf	efgtoa@i& (0+255),w,b
  3725  001454  6ED9               	movwf	fsr2l,c
  3726  001456  0E01               	movlw	high _dbuf
  3727  001458  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3728  00145A  6EDA               	movwf	fsr2h,c
  3729  00145C  C068  FFDF         	movff	_efgtoa$816,indf2
  3730  001460                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  3733  001460  077E               	decf	efgtoa@w& (0+255),f,b
  3734  001462  A0D8               	btfss	status,0,c
  3735  001464  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3736  001466                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3739  001466  0E00               	movlw	low _dbuf
  3740  001468  2592               	addwf	efgtoa@n& (0+255),w,b
  3741  00146A  6E01               	movwf	strcpy@dest^0,c
  3742  00146C  0E01               	movlw	high _dbuf
  3743  00146E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3744  001470  6E02               	movwf	(strcpy@dest+1)^0,c
  3745  001472  0E00               	movlw	low _dbuf
  3746  001474  258A               	addwf	efgtoa@i& (0+255),w,b
  3747  001476  6E03               	movwf	strcpy@src^0,c
  3748  001478  0E01               	movlw	high _dbuf
  3749  00147A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3750  00147C  6E04               	movwf	(strcpy@src+1)^0,c
  3751  00147E  ECD4  F01A         	call	_strcpy	;wreg free
  3752  001482  EFCA  F004         	goto	l3414
  3753  001486                     l834:
  3754  001486  0012               	return		;funcret
  3755  001488                     __end_of_efgtoa:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _tolower *****************
  3759 ;; Defined at:
  3760 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;  c               2    6[COMRAM] int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  2    6[COMRAM] int 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         2       0       0       0       0       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3776 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3777 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3778 ;;Total ram usage:        8 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    1
  3781 ;; This function calls:
  3782 ;;		_isupper
  3783 ;; This function is called by:
  3784 ;;		_efgtoa
  3785 ;;		_vfpfcnvrt
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text6
  3790  0034EA                     __ptext6:
  3791                           	callstack 0
  3792  0034EA                     _tolower:
  3793                           	callstack 26
  3794  0034EA  0EBF               	movlw	191
  3795  0034EC  6E09               	movwf	??_tolower^0,c
  3796  0034EE  0EFF               	movlw	255
  3797  0034F0  6E0A               	movwf	(??_tolower+1)^0,c
  3798  0034F2  C007  F00B         	movff	tolower@c,??_tolower+2
  3799  0034F6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3800  0034FA  5009               	movf	??_tolower^0,w,c
  3801  0034FC  260B               	addwf	(??_tolower+2)^0,f,c
  3802  0034FE  500A               	movf	(??_tolower+1)^0,w,c
  3803  003500  220C               	addwfc	(??_tolower+3)^0,f,c
  3804  003502  500C               	movf	(??_tolower+3)^0,w,c
  3805  003504  E10A               	bnz	u3800
  3806  003506  0E1A               	movlw	26
  3807  003508  5C0B               	subwf	(??_tolower+2)^0,w,c
  3808  00350A  A0D8               	btfss	status,0,c
  3809  00350C  EF8A  F01A         	goto	u3801
  3810  003510  EF8D  F01A         	goto	u3800
  3811  003514                     u3801:
  3812  003514  0E01               	movlw	1
  3813  003516  EF8E  F01A         	goto	u3810
  3814  00351A                     u3800:
  3815  00351A  0E00               	movlw	0
  3816  00351C                     u3810:
  3817  00351C  6E0D               	movwf	_tolower$965^0,c
  3818  00351E  6A0E               	clrf	(_tolower$965+1)^0,c
  3819  003520  500D               	movf	_tolower$965^0,w,c
  3820  003522  100E               	iorwf	(_tolower$965+1)^0,w,c
  3821  003524  B4D8               	btfsc	status,2,c
  3822  003526  EF97  F01A         	goto	u3821
  3823  00352A  EF99  F01A         	goto	u3820
  3824  00352E                     u3821:
  3825  00352E  EFA0  F01A         	goto	l1074
  3826  003532                     u3820:
  3827  003532  0E20               	movlw	32
  3828  003534  1007               	iorwf	tolower@c^0,w,c
  3829  003536  6E07               	movwf	?_tolower^0,c
  3830  003538  5008               	movf	(tolower@c+1)^0,w,c
  3831  00353A  6E08               	movwf	(?_tolower+1)^0,c
  3832  00353C  EFA4  F01A         	goto	l1079
  3833  003540                     l1074:
  3834  003540  C007  F007         	movff	tolower@c,?_tolower
  3835  003544  C008  F008         	movff	tolower@c+1,?_tolower+1
  3836  003548                     l1079:
  3837  003548  0012               	return		;funcret
  3838  00354A                     __end_of_tolower:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _isupper *****************
  3842 ;; Defined at:
  3843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  c               2    0[COMRAM] int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  2    0[COMRAM] int 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3857 ;;      Params:         2       0       0       0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3859 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3860 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3861 ;;Total ram usage:        6 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_efgtoa
  3867 ;;		_vfpfcnvrt
  3868 ;;		_tolower
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text7
  3873  00381A                     __ptext7:
  3874                           	callstack 0
  3875  00381A                     _isupper:
  3876                           	callstack 26
  3877  00381A  0EBF               	movlw	191
  3878  00381C  6E03               	movwf	??_isupper^0,c
  3879  00381E  0EFF               	movlw	255
  3880  003820  6E04               	movwf	(??_isupper+1)^0,c
  3881  003822  C001  F005         	movff	isupper@c,??_isupper+2
  3882  003826  C002  F006         	movff	isupper@c+1,??_isupper+3
  3883  00382A  5003               	movf	??_isupper^0,w,c
  3884  00382C  2605               	addwf	(??_isupper+2)^0,f,c
  3885  00382E  5004               	movf	(??_isupper+1)^0,w,c
  3886  003830  2206               	addwfc	(??_isupper+3)^0,f,c
  3887  003832  5006               	movf	(??_isupper+3)^0,w,c
  3888  003834  E10A               	bnz	u2950
  3889  003836  0E1A               	movlw	26
  3890  003838  5C05               	subwf	(??_isupper+2)^0,w,c
  3891  00383A  A0D8               	btfss	status,0,c
  3892  00383C  EF22  F01C         	goto	u2951
  3893  003840  EF25  F01C         	goto	u2950
  3894  003844                     u2951:
  3895  003844  0E01               	movlw	1
  3896  003846  EF26  F01C         	goto	u2960
  3897  00384A                     u2950:
  3898  00384A  0E00               	movlw	0
  3899  00384C                     u2960:
  3900  00384C  6E01               	movwf	?_isupper^0,c
  3901  00384E  6A02               	clrf	(?_isupper+1)^0,c
  3902  003850  0012               	return		;funcret
  3903  003852                     __end_of_isupper:
  3904                           	callstack 0
  3905                           
  3906 ;; *************** function _strcpy *****************
  3907 ;; Defined at:
  3908 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3911 ;;		 -> dbuf(80), 
  3912 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3913 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3914 ;;		 -> dbuf(80), 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  d               2    8[COMRAM] PTR unsigned char 
  3917 ;;		 -> dbuf(80), 
  3918 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3919 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  3920 ;;		 -> dbuf(80), 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  2    0[COMRAM] PTR unsigned char 
  3923 ;; Registers used:
  3924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3930 ;;      Params:         4       0       0       0       0       0       0       0       0
  3931 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3932 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3933 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3934 ;;Total ram usage:       10 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_efgtoa
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text8
  3944  0035A8                     __ptext8:
  3945                           	callstack 0
  3946  0035A8                     _strcpy:
  3947                           	callstack 26
  3948  0035A8  C003  F007         	movff	strcpy@src,strcpy@s
  3949  0035AC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3950  0035B0  C001  F009         	movff	strcpy@dest,strcpy@d
  3951  0035B4  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3952  0035B8                     l3314:
  3953  0035B8  5007               	movf	strcpy@s^0,w,c
  3954  0035BA  6E05               	movwf	??_strcpy^0,c
  3955  0035BC  5008               	movf	(strcpy@s+1)^0,w,c
  3956  0035BE  6E06               	movwf	(??_strcpy+1)^0,c
  3957  0035C0  4A07               	infsnz	strcpy@s^0,f,c
  3958  0035C2  2A08               	incf	(strcpy@s+1)^0,f,c
  3959  0035C4  C005  FFF6         	movff	??_strcpy,tblptrl
  3960  0035C8  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3961  0035CC  6AF8               	clrf	tblptru,c
  3962  0035CE  C009  FFD9         	movff	strcpy@d,fsr2l
  3963  0035D2  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3964  0035D6  4A09               	infsnz	strcpy@d^0,f,c
  3965  0035D8  2A0A               	incf	(strcpy@d+1)^0,f,c
  3966  0035DA  0E07               	movlw	(high __ramtop+-1)
  3967  0035DC  64F7               	cpfsgt	tblptrh,c
  3968  0035DE  D003               	bra	u3787
  3969  0035E0  0008               	tblrd		*
  3970  0035E2  50F5               	movf	tablat,w,c
  3971  0035E4  D005               	bra	u3780
  3972  0035E6                     u3787:
  3973  0035E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3974  0035EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3975  0035EE  50E7               	movf	indf1,w,c
  3976  0035F0                     u3780:
  3977  0035F0  6EDF               	movwf	indf2,c
  3978  0035F2  50DF               	movf	indf2,w,c
  3979  0035F4  A4D8               	btfss	status,2,c
  3980  0035F6  EFFF  F01A         	goto	u3791
  3981  0035FA  EF01  F01B         	goto	u3790
  3982  0035FE                     u3791:
  3983  0035FE  EFDC  F01A         	goto	l3314
  3984  003602                     u3790:
  3985  003602  0012               	return		;funcret
  3986  003604                     __end_of_strcpy:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _pad *****************
  3990 ;; Defined at:
  3991 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3994 ;;		 -> sprintf@f(6), 
  3995 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3996 ;;		 -> dbuf(80), 
  3997 ;;  p               2   20[COMRAM] int 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  w               2   25[COMRAM] int 
  4000 ;;  i               2   23[COMRAM] int 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2   16[COMRAM] int 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4010 ;;      Params:         6       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4013 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:       11 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    3
  4017 ;; This function calls:
  4018 ;;		_fputc
  4019 ;;		_fputs
  4020 ;;		_strlen
  4021 ;; This function is called by:
  4022 ;;		_efgtoa
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text9
  4027  00312A                     __ptext9:
  4028                           	callstack 0
  4029  00312A                     _pad:
  4030                           	callstack 23
  4031  00312A                     
  4032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4033  00312A  A05E               	btfss	_flags^0,0,c
  4034  00312C  EF9A  F018         	goto	u3671
  4035  003130  EF9C  F018         	goto	u3670
  4036  003134                     u3671:
  4037  003134  EFA6  F018         	goto	l3272
  4038  003138                     u3670:
  4039  003138                     
  4040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4041  003138  C013  F00A         	movff	pad@buf,fputs@s
  4042  00313C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4043  003140  C011  F00C         	movff	pad@fp,fputs@fp
  4044  003144  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4045  003148  ECCA  F01B         	call	_fputs	;wreg free
  4046  00314C                     l3272:
  4047                           
  4048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4049  00314C  BE16               	btfsc	(pad@p+1)^0,7,c
  4050  00314E  EFAB  F018         	goto	u3681
  4051  003152  EFAD  F018         	goto	u3680
  4052  003156                     u3681:
  4053  003156  EFB3  F018         	goto	l3276
  4054  00315A                     u3680:
  4055  00315A  C015  F01A         	movff	pad@p,pad@w
  4056  00315E  C016  F01B         	movff	pad@p+1,pad@w+1
  4057  003162  EFB7  F018         	goto	l811
  4058  003166                     l3276:
  4059  003166  0E00               	movlw	0
  4060  003168  6E1B               	movwf	(pad@w+1)^0,c
  4061  00316A  0E00               	movlw	0
  4062  00316C  6E1A               	movwf	pad@w^0,c
  4063  00316E                     l811:
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4066  00316E  0E00               	movlw	0
  4067  003170  6E19               	movwf	(pad@i+1)^0,c
  4068  003172  0E00               	movlw	0
  4069  003174  6E18               	movwf	pad@i^0,c
  4070                           
  4071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4072  003176  EFC9  F018         	goto	l3282
  4073  00317A                     l3278:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4076  00317A  0E00               	movlw	0
  4077  00317C  6E02               	movwf	(fputc@c+1)^0,c
  4078  00317E  0E20               	movlw	32
  4079  003180  6E01               	movwf	fputc@c^0,c
  4080  003182  C011  F003         	movff	pad@fp,fputc@fp
  4081  003186  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4082  00318A  ECCE  F017         	call	_fputc	;wreg free
  4083  00318E                     
  4084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4085  00318E  4A18               	infsnz	pad@i^0,f,c
  4086  003190  2A19               	incf	(pad@i+1)^0,f,c
  4087  003192                     l3282:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4090  003192  501A               	movf	pad@w^0,w,c
  4091  003194  5C18               	subwf	pad@i^0,w,c
  4092  003196  5019               	movf	(pad@i+1)^0,w,c
  4093  003198  0A80               	xorlw	128
  4094  00319A  6E17               	movwf	??_pad^0,c
  4095  00319C  501B               	movf	(pad@w+1)^0,w,c
  4096  00319E  0A80               	xorlw	128
  4097  0031A0  5817               	subwfb	??_pad^0,w,c
  4098  0031A2  A0D8               	btfss	status,0,c
  4099  0031A4  EFD6  F018         	goto	u3691
  4100  0031A8  EFD8  F018         	goto	u3690
  4101  0031AC                     u3691:
  4102  0031AC  EFBD  F018         	goto	l3278
  4103  0031B0                     u3690:
  4104  0031B0                     
  4105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4106  0031B0  B05E               	btfsc	_flags^0,0,c
  4107  0031B2  EFDD  F018         	goto	u3701
  4108  0031B6  EFDF  F018         	goto	u3700
  4109  0031BA                     u3701:
  4110  0031BA  EFE9  F018         	goto	l3286
  4111  0031BE                     u3700:
  4112  0031BE                     
  4113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4114  0031BE  C013  F00A         	movff	pad@buf,fputs@s
  4115  0031C2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4116  0031C6  C011  F00C         	movff	pad@fp,fputs@fp
  4117  0031CA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4118  0031CE  ECCA  F01B         	call	_fputs	;wreg free
  4119  0031D2                     l3286:
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4122  0031D2  C013  F001         	movff	pad@buf,strlen@s
  4123  0031D6  C014  F002         	movff	pad@buf+1,strlen@s+1
  4124  0031DA  EC61  F01C         	call	_strlen	;wreg free
  4125  0031DE  501A               	movf	pad@w^0,w,c
  4126  0031E0  2401               	addwf	?_strlen^0,w,c
  4127  0031E2  6E11               	movwf	?_pad^0,c
  4128  0031E4  501B               	movf	(pad@w+1)^0,w,c
  4129  0031E6  2002               	addwfc	(?_strlen+1)^0,w,c
  4130  0031E8  6E12               	movwf	(?_pad+1)^0,c
  4131  0031EA  0012               	return		;funcret
  4132  0031EC                     __end_of_pad:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _strlen *****************
  4136 ;; Defined at:
  4137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4140 ;;		 -> dbuf(80), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4143 ;;		 -> dbuf(80), 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    0[COMRAM] unsigned int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4153 ;;      Params:         2       0       0       0       0       0       0       0       0
  4154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4156 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4157 ;;Total ram usage:        4 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_pad
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text10
  4167  0038C2                     __ptext10:
  4168                           	callstack 0
  4169  0038C2                     _strlen:
  4170                           	callstack 25
  4171  0038C2  C001  F003         	movff	strlen@s,strlen@a
  4172  0038C6  C002  F004         	movff	strlen@s+1,strlen@a+1
  4173  0038CA  EF69  F01C         	goto	l2808
  4174  0038CE                     l2806:
  4175  0038CE  4A01               	infsnz	strlen@s^0,f,c
  4176  0038D0  2A02               	incf	(strlen@s+1)^0,f,c
  4177  0038D2                     l2808:
  4178  0038D2  C001  FFD9         	movff	strlen@s,fsr2l
  4179  0038D6  C002  FFDA         	movff	strlen@s+1,fsr2h
  4180  0038DA  50DF               	movf	indf2,w,c
  4181  0038DC  A4D8               	btfss	status,2,c
  4182  0038DE  EF73  F01C         	goto	u2941
  4183  0038E2  EF75  F01C         	goto	u2940
  4184  0038E6                     u2941:
  4185  0038E6  EF67  F01C         	goto	l2806
  4186  0038EA                     u2940:
  4187  0038EA  5003               	movf	strlen@a^0,w,c
  4188  0038EC  5C01               	subwf	strlen@s^0,w,c
  4189  0038EE  6E01               	movwf	?_strlen^0,c
  4190  0038F0  5004               	movf	(strlen@a+1)^0,w,c
  4191  0038F2  5802               	subwfb	(strlen@s+1)^0,w,c
  4192  0038F4  6E02               	movwf	(?_strlen+1)^0,c
  4193  0038F6  0012               	return		;funcret
  4194  0038F8                     __end_of_strlen:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _fputs *****************
  4198 ;; Defined at:
  4199 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4202 ;;		 -> dbuf(80), 
  4203 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4204 ;;		 -> sprintf@f(6), 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  i               2   14[COMRAM] int 
  4207 ;;  c               1   13[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  2    9[COMRAM] int 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         4       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        7 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		_fputc
  4226 ;; This function is called by:
  4227 ;;		_pad
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text11
  4232  003794                     __ptext11:
  4233                           	callstack 0
  4234  003794                     _fputs:
  4235                           	callstack 23
  4236  003794  0E00               	movlw	0
  4237  003796  6E10               	movwf	(fputs@i+1)^0,c
  4238  003798  0E00               	movlw	0
  4239  00379A  6E0F               	movwf	fputs@i^0,c
  4240  00379C  EFDB  F01B         	goto	l2802
  4241  0037A0                     l2798:
  4242  0037A0  C00E  F001         	movff	fputs@c,fputc@c
  4243  0037A4  6A02               	clrf	(fputc@c+1)^0,c
  4244  0037A6  C00C  F003         	movff	fputs@fp,fputc@fp
  4245  0037AA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4246  0037AE  ECCE  F017         	call	_fputc	;wreg free
  4247  0037B2  4A0F               	infsnz	fputs@i^0,f,c
  4248  0037B4  2A10               	incf	(fputs@i+1)^0,f,c
  4249  0037B6                     l2802:
  4250  0037B6  500F               	movf	fputs@i^0,w,c
  4251  0037B8  240A               	addwf	fputs@s^0,w,c
  4252  0037BA  6ED9               	movwf	fsr2l,c
  4253  0037BC  5010               	movf	(fputs@i+1)^0,w,c
  4254  0037BE  200B               	addwfc	(fputs@s+1)^0,w,c
  4255  0037C0  6EDA               	movwf	fsr2h,c
  4256  0037C2  50DF               	movf	indf2,w,c
  4257  0037C4  6E0E               	movwf	fputs@c^0,c
  4258  0037C6  500E               	movf	fputs@c^0,w,c
  4259  0037C8  A4D8               	btfss	status,2,c
  4260  0037CA  EFE9  F01B         	goto	u2931
  4261  0037CE  EFEB  F01B         	goto	u2930
  4262  0037D2                     u2931:
  4263  0037D2  EFD0  F01B         	goto	l2798
  4264  0037D6                     u2930:
  4265  0037D6  0012               	return		;funcret
  4266  0037D8                     __end_of_fputs:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _fputc *****************
  4270 ;; Defined at:
  4271 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  c               2    0[COMRAM] int 
  4274 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4275 ;;		 -> sprintf@f(6), 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2    0[COMRAM] int 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4287 ;;      Params:         4       0       0       0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4289 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4290 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4291 ;;Total ram usage:        9 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		_putch
  4296 ;; This function is called by:
  4297 ;;		_pad
  4298 ;;		_vfpfcnvrt
  4299 ;;		_fputs
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text12
  4304  002F9C                     __ptext12:
  4305                           	callstack 0
  4306  002F9C                     _fputc:
  4307                           	callstack 26
  4308  002F9C  5003               	movf	fputc@fp^0,w,c
  4309  002F9E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4310  002FA0  B4D8               	btfsc	status,2,c
  4311  002FA2  EFD5  F017         	goto	u2501
  4312  002FA6  EFD7  F017         	goto	u2500
  4313  002FAA                     u2501:
  4314  002FAA  EFE0  F017         	goto	l2584
  4315  002FAE                     u2500:
  4316  002FAE  5003               	movf	fputc@fp^0,w,c
  4317  002FB0  1004               	iorwf	(fputc@fp+1)^0,w,c
  4318  002FB2  A4D8               	btfss	status,2,c
  4319  002FB4  EFDE  F017         	goto	u2511
  4320  002FB8  EFE0  F017         	goto	u2510
  4321  002FBC                     u2511:
  4322  002FBC  EFE5  F017         	goto	l2586
  4323  002FC0                     u2510:
  4324  002FC0                     l2584:
  4325  002FC0  5001               	movf	fputc@c^0,w,c
  4326  002FC2  ECC9  F01C         	call	_putch
  4327  002FC6  EF32  F018         	goto	l1037
  4328  002FCA                     l2586:
  4329  002FCA  EE20 F004          	lfsr	2,4
  4330  002FCE  5003               	movf	fputc@fp^0,w,c
  4331  002FD0  26D9               	addwf	fsr2l,f,c
  4332  002FD2  5004               	movf	(fputc@fp+1)^0,w,c
  4333  002FD4  22DA               	addwfc	fsr2h,f,c
  4334  002FD6  50DE               	movf	postinc2,w,c
  4335  002FD8  10DE               	iorwf	postinc2,w,c
  4336  002FDA  B4D8               	btfsc	status,2,c
  4337  002FDC  EFF2  F017         	goto	u2521
  4338  002FE0  EFF4  F017         	goto	u2520
  4339  002FE4                     u2521:
  4340  002FE4  EF0F  F018         	goto	l2590
  4341  002FE8                     u2520:
  4342  002FE8  EE20 F004          	lfsr	2,4
  4343  002FEC  5003               	movf	fputc@fp^0,w,c
  4344  002FEE  26D9               	addwf	fsr2l,f,c
  4345  002FF0  5004               	movf	(fputc@fp+1)^0,w,c
  4346  002FF2  22DA               	addwfc	fsr2h,f,c
  4347  002FF4  EE10 F002          	lfsr	1,2
  4348  002FF8  5003               	movf	fputc@fp^0,w,c
  4349  002FFA  26E1               	addwf	fsr1l,f,c
  4350  002FFC  5004               	movf	(fputc@fp+1)^0,w,c
  4351  002FFE  22E2               	addwfc	fsr1h,f,c
  4352  003000  50DE               	movf	postinc2,w,c
  4353  003002  5CE6               	subwf	postinc1,w,c
  4354  003004  50E6               	movf	postinc1,w,c
  4355  003006  0A80               	xorlw	128
  4356  003008  6E09               	movwf	(??_fputc+4)^0,c
  4357  00300A  50DE               	movf	postinc2,w,c
  4358  00300C  0A80               	xorlw	128
  4359  00300E  5809               	subwfb	(??_fputc+4)^0,w,c
  4360  003010  B0D8               	btfsc	status,0,c
  4361  003012  EF0D  F018         	goto	u2531
  4362  003016  EF0F  F018         	goto	u2530
  4363  00301A                     u2531:
  4364  00301A  EF32  F018         	goto	l1037
  4365  00301E                     u2530:
  4366  00301E                     l2590:
  4367  00301E  EE20 F002          	lfsr	2,2
  4368  003022  5003               	movf	fputc@fp^0,w,c
  4369  003024  26D9               	addwf	fsr2l,f,c
  4370  003026  5004               	movf	(fputc@fp+1)^0,w,c
  4371  003028  22DA               	addwfc	fsr2h,f,c
  4372  00302A  CFDE F005          	movff	postinc2,??_fputc
  4373  00302E  CFDD F006          	movff	postdec2,??_fputc+1
  4374  003032  C003  FFD9         	movff	fputc@fp,fsr2l
  4375  003036  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4376  00303A  CFDE F007          	movff	postinc2,??_fputc+2
  4377  00303E  CFDD F008          	movff	postdec2,??_fputc+3
  4378  003042  5005               	movf	??_fputc^0,w,c
  4379  003044  2407               	addwf	(??_fputc+2)^0,w,c
  4380  003046  6ED9               	movwf	fsr2l,c
  4381  003048  5006               	movf	(??_fputc+1)^0,w,c
  4382  00304A  2008               	addwfc	(??_fputc+3)^0,w,c
  4383  00304C  6EDA               	movwf	fsr2h,c
  4384  00304E  C001  FFDF         	movff	fputc@c,indf2
  4385  003052  EE20 F002          	lfsr	2,2
  4386  003056  5003               	movf	fputc@fp^0,w,c
  4387  003058  26D9               	addwf	fsr2l,f,c
  4388  00305A  5004               	movf	(fputc@fp+1)^0,w,c
  4389  00305C  22DA               	addwfc	fsr2h,f,c
  4390  00305E  2ADE               	incf	postinc2,f,c
  4391  003060  0E00               	movlw	0
  4392  003062  22DD               	addwfc	postdec2,f,c
  4393  003064                     l1037:
  4394  003064  0012               	return		;funcret
  4395  003066                     __end_of_fputc:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _putch *****************
  4399 ;; Defined at:
  4400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  c               1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  c               1    0[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_fputc
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text13
  4428  003992                     __ptext13:
  4429                           	callstack 0
  4430  003992                     _putch:
  4431                           	callstack 26
  4432  003992  0012               	return		;funcret
  4433  003994                     __end_of_putch:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _floorf *****************
  4437 ;; Defined at:
  4438 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  x               4   25[COMRAM] float 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  u               4   41[COMRAM] struct .
  4443 ;;  m               4   35[COMRAM] unsigned long 
  4444 ;;  e               2   39[COMRAM] int 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  4   25[COMRAM] float 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4454 ;;      Params:         4       0       0       0       0       0       0       0       0
  4455 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4456 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4457 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4458 ;;Total ram usage:       20 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_efgtoa
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text14
  4468  002668                     __ptext14:
  4469                           	callstack 0
  4470  002668                     _floorf:
  4471                           	callstack 26
  4472  002668  C0B8  F02A         	movff	floorf@F527,floorf@u
  4473  00266C  C0B9  F02B         	movff	floorf@F527+1,floorf@u+1
  4474  002670  C0BA  F02C         	movff	floorf@F527+2,floorf@u+2
  4475  002674  C0BB  F02D         	movff	floorf@F527+3,floorf@u+3
  4476  002678  C01A  F02A         	movff	floorf@x,floorf@u
  4477  00267C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4478  002680  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4479  002684  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4480  002688  0E81               	movlw	129
  4481  00268A  6E1E               	movwf	??_floorf^0,c
  4482  00268C  0EFF               	movlw	255
  4483  00268E  6E1F               	movwf	(??_floorf+1)^0,c
  4484  002690  C02A  F020         	movff	floorf@u,??_floorf+2
  4485  002694  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4486  002698  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4487  00269C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4488  0026A0  0E18               	movlw	24
  4489  0026A2  EF58  F013         	goto	u3830
  4490  0026A6                     u3835:
  4491  0026A6  90D8               	bcf	status,0,c
  4492  0026A8  3223               	rrcf	(??_floorf+5)^0,f,c
  4493  0026AA  3222               	rrcf	(??_floorf+4)^0,f,c
  4494  0026AC  3221               	rrcf	(??_floorf+3)^0,f,c
  4495  0026AE  3220               	rrcf	(??_floorf+2)^0,f,c
  4496  0026B0                     u3830:
  4497  0026B0  2EE8               	decfsz	wreg,f,c
  4498  0026B2  EF53  F013         	goto	u3835
  4499  0026B6  5020               	movf	(??_floorf+2)^0,w,c
  4500  0026B8  241E               	addwf	??_floorf^0,w,c
  4501  0026BA  6E28               	movwf	floorf@e^0,c
  4502  0026BC  0E00               	movlw	0
  4503  0026BE  201F               	addwfc	(??_floorf+1)^0,w,c
  4504  0026C0  6E29               	movwf	(floorf@e+1)^0,c
  4505  0026C2  BE29               	btfsc	(floorf@e+1)^0,7,c
  4506  0026C4  EF6D  F013         	goto	u3841
  4507  0026C8  5029               	movf	(floorf@e+1)^0,w,c
  4508  0026CA  E109               	bnz	u3840
  4509  0026CC  0E17               	movlw	23
  4510  0026CE  5C28               	subwf	floorf@e^0,w,c
  4511  0026D0  A0D8               	btfss	status,0,c
  4512  0026D2  EF6D  F013         	goto	u3841
  4513  0026D6  EF6F  F013         	goto	u3840
  4514  0026DA                     u3841:
  4515  0026DA  EF79  F013         	goto	l3332
  4516  0026DE                     u3840:
  4517  0026DE                     l3330:
  4518  0026DE  C01A  F01A         	movff	floorf@x,?_floorf
  4519  0026E2  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4520  0026E6  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4521  0026EA  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4522  0026EE  EF3C  F014         	goto	l998
  4523  0026F2                     l3332:
  4524  0026F2  BE29               	btfsc	(floorf@e+1)^0,7,c
  4525  0026F4  EF7E  F013         	goto	u3851
  4526  0026F8  EF80  F013         	goto	u3850
  4527  0026FC                     u3851:
  4528  0026FC  EFF0  F013         	goto	l3342
  4529  002700                     u3850:
  4530  002700  C028  F01E         	movff	floorf@e,??_floorf
  4531  002704  0EFF               	movlw	255
  4532  002706  6E1F               	movwf	(??_floorf+1)^0,c
  4533  002708  0EFF               	movlw	255
  4534  00270A  6E20               	movwf	(??_floorf+2)^0,c
  4535  00270C  0E7F               	movlw	127
  4536  00270E  6E21               	movwf	(??_floorf+3)^0,c
  4537  002710  0E00               	movlw	0
  4538  002712  6E22               	movwf	(??_floorf+4)^0,c
  4539  002714                     u3865:
  4540  002714  661E               	tstfsz	??_floorf^0,c
  4541  002716  EF8F  F013         	goto	u3866
  4542  00271A  EF97  F013         	goto	u3867
  4543  00271E                     u3866:
  4544  00271E  3422               	rlcf	(??_floorf+4)^0,w,c
  4545  002720  3222               	rrcf	(??_floorf+4)^0,f,c
  4546  002722  3221               	rrcf	(??_floorf+3)^0,f,c
  4547  002724  3220               	rrcf	(??_floorf+2)^0,f,c
  4548  002726  321F               	rrcf	(??_floorf+1)^0,f,c
  4549  002728  2E1E               	decfsz	??_floorf^0,f,c
  4550  00272A  EF8A  F013         	goto	u3865
  4551  00272E                     u3867:
  4552  00272E  C01F  F024         	movff	??_floorf+1,floorf@m
  4553  002732  C020  F025         	movff	??_floorf+2,floorf@m+1
  4554  002736  C021  F026         	movff	??_floorf+3,floorf@m+2
  4555  00273A  C022  F027         	movff	??_floorf+4,floorf@m+3
  4556  00273E  5024               	movf	floorf@m^0,w,c
  4557  002740  142A               	andwf	floorf@u^0,w,c
  4558  002742  6E1E               	movwf	??_floorf^0,c
  4559  002744  5025               	movf	(floorf@m+1)^0,w,c
  4560  002746  142B               	andwf	(floorf@u+1)^0,w,c
  4561  002748  6E1F               	movwf	(??_floorf+1)^0,c
  4562  00274A  5026               	movf	(floorf@m+2)^0,w,c
  4563  00274C  142C               	andwf	(floorf@u+2)^0,w,c
  4564  00274E  6E20               	movwf	(??_floorf+2)^0,c
  4565  002750  5027               	movf	(floorf@m+3)^0,w,c
  4566  002752  142D               	andwf	(floorf@u+3)^0,w,c
  4567  002754  6E21               	movwf	(??_floorf+3)^0,c
  4568  002756  501E               	movf	??_floorf^0,w,c
  4569  002758  101F               	iorwf	(??_floorf+1)^0,w,c
  4570  00275A  1020               	iorwf	(??_floorf+2)^0,w,c
  4571  00275C  1021               	iorwf	(??_floorf+3)^0,w,c
  4572  00275E  A4D8               	btfss	status,2,c
  4573  002760  EFB4  F013         	goto	u3871
  4574  002764  EFB6  F013         	goto	u3870
  4575  002768                     u3871:
  4576  002768  EFB8  F013         	goto	l3338
  4577  00276C                     u3870:
  4578  00276C  EF6F  F013         	goto	l3330
  4579  002770                     l3338:
  4580  002770  C02A  F01E         	movff	floorf@u,??_floorf
  4581  002774  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4582  002778  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4583  00277C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4584  002780  0E20               	movlw	32
  4585  002782  EFC8  F013         	goto	u3880
  4586  002786                     u3885:
  4587  002786  90D8               	bcf	status,0,c
  4588  002788  3221               	rrcf	(??_floorf+3)^0,f,c
  4589  00278A  3220               	rrcf	(??_floorf+2)^0,f,c
  4590  00278C  321F               	rrcf	(??_floorf+1)^0,f,c
  4591  00278E  321E               	rrcf	??_floorf^0,f,c
  4592  002790                     u3880:
  4593  002790  2EE8               	decfsz	wreg,f,c
  4594  002792  EFC3  F013         	goto	u3885
  4595  002796  501E               	movf	??_floorf^0,w,c
  4596  002798  101F               	iorwf	(??_floorf+1)^0,w,c
  4597  00279A  1020               	iorwf	(??_floorf+2)^0,w,c
  4598  00279C  1021               	iorwf	(??_floorf+3)^0,w,c
  4599  00279E  B4D8               	btfsc	status,2,c
  4600  0027A0  EFD4  F013         	goto	u3891
  4601  0027A4  EFD6  F013         	goto	u3890
  4602  0027A8                     u3891:
  4603  0027A8  EFDE  F013         	goto	l1001
  4604  0027AC                     u3890:
  4605  0027AC  5024               	movf	floorf@m^0,w,c
  4606  0027AE  262A               	addwf	floorf@u^0,f,c
  4607  0027B0  5025               	movf	(floorf@m+1)^0,w,c
  4608  0027B2  222B               	addwfc	(floorf@u+1)^0,f,c
  4609  0027B4  5026               	movf	(floorf@m+2)^0,w,c
  4610  0027B6  222C               	addwfc	(floorf@u+2)^0,f,c
  4611  0027B8  5027               	movf	(floorf@m+3)^0,w,c
  4612  0027BA  222D               	addwfc	(floorf@u+3)^0,f,c
  4613  0027BC                     l1001:
  4614  0027BC  1C24               	comf	floorf@m^0,w,c
  4615  0027BE  6E1E               	movwf	??_floorf^0,c
  4616  0027C0  1C25               	comf	(floorf@m+1)^0,w,c
  4617  0027C2  6E1F               	movwf	(??_floorf+1)^0,c
  4618  0027C4  1C26               	comf	(floorf@m+2)^0,w,c
  4619  0027C6  6E20               	movwf	(??_floorf+2)^0,c
  4620  0027C8  1C27               	comf	(floorf@m+3)^0,w,c
  4621  0027CA  6E21               	movwf	(??_floorf+3)^0,c
  4622  0027CC  501E               	movf	??_floorf^0,w,c
  4623  0027CE  162A               	andwf	floorf@u^0,f,c
  4624  0027D0  501F               	movf	(??_floorf+1)^0,w,c
  4625  0027D2  162B               	andwf	(floorf@u+1)^0,f,c
  4626  0027D4  5020               	movf	(??_floorf+2)^0,w,c
  4627  0027D6  162C               	andwf	(floorf@u+2)^0,f,c
  4628  0027D8  5021               	movf	(??_floorf+3)^0,w,c
  4629  0027DA  162D               	andwf	(floorf@u+3)^0,f,c
  4630  0027DC  EF34  F014         	goto	l3350
  4631  0027E0                     l3342:
  4632  0027E0  C02A  F01E         	movff	floorf@u,??_floorf
  4633  0027E4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4634  0027E8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4635  0027EC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4636  0027F0  0E20               	movlw	32
  4637  0027F2  EF00  F014         	goto	u3900
  4638  0027F6                     u3905:
  4639  0027F6  90D8               	bcf	status,0,c
  4640  0027F8  3221               	rrcf	(??_floorf+3)^0,f,c
  4641  0027FA  3220               	rrcf	(??_floorf+2)^0,f,c
  4642  0027FC  321F               	rrcf	(??_floorf+1)^0,f,c
  4643  0027FE  321E               	rrcf	??_floorf^0,f,c
  4644  002800                     u3900:
  4645  002800  2EE8               	decfsz	wreg,f,c
  4646  002802  EFFB  F013         	goto	u3905
  4647  002806  501E               	movf	??_floorf^0,w,c
  4648  002808  101F               	iorwf	(??_floorf+1)^0,w,c
  4649  00280A  1020               	iorwf	(??_floorf+2)^0,w,c
  4650  00280C  1021               	iorwf	(??_floorf+3)^0,w,c
  4651  00280E  A4D8               	btfss	status,2,c
  4652  002810  EF0C  F014         	goto	u3911
  4653  002814  EF0E  F014         	goto	u3910
  4654  002818                     u3911:
  4655  002818  EF18  F014         	goto	l3346
  4656  00281C                     u3910:
  4657  00281C  0E00               	movlw	0
  4658  00281E  6E2A               	movwf	floorf@u^0,c
  4659  002820  0E00               	movlw	0
  4660  002822  6E2B               	movwf	(floorf@u+1)^0,c
  4661  002824  0E00               	movlw	0
  4662  002826  6E2C               	movwf	(floorf@u+2)^0,c
  4663  002828  0E00               	movlw	0
  4664  00282A  6E2D               	movwf	(floorf@u+3)^0,c
  4665  00282C  EF34  F014         	goto	l3350
  4666  002830                     l3346:
  4667  002830  90D8               	bcf	status,0,c
  4668  002832  342A               	rlcf	floorf@u^0,w,c
  4669  002834  6E1E               	movwf	??_floorf^0,c
  4670  002836  342B               	rlcf	(floorf@u+1)^0,w,c
  4671  002838  6E1F               	movwf	(??_floorf+1)^0,c
  4672  00283A  342C               	rlcf	(floorf@u+2)^0,w,c
  4673  00283C  6E20               	movwf	(??_floorf+2)^0,c
  4674  00283E  342D               	rlcf	(floorf@u+3)^0,w,c
  4675  002840  6E21               	movwf	(??_floorf+3)^0,c
  4676  002842  501E               	movf	??_floorf^0,w,c
  4677  002844  101F               	iorwf	(??_floorf+1)^0,w,c
  4678  002846  1020               	iorwf	(??_floorf+2)^0,w,c
  4679  002848  1021               	iorwf	(??_floorf+3)^0,w,c
  4680  00284A  B4D8               	btfsc	status,2,c
  4681  00284C  EF2A  F014         	goto	u3921
  4682  002850  EF2C  F014         	goto	u3920
  4683  002854                     u3921:
  4684  002854  EF34  F014         	goto	l3350
  4685  002858                     u3920:
  4686  002858  0E00               	movlw	0
  4687  00285A  6E2A               	movwf	floorf@u^0,c
  4688  00285C  0E00               	movlw	0
  4689  00285E  6E2B               	movwf	(floorf@u+1)^0,c
  4690  002860  0E80               	movlw	128
  4691  002862  6E2C               	movwf	(floorf@u+2)^0,c
  4692  002864  0EBF               	movlw	191
  4693  002866  6E2D               	movwf	(floorf@u+3)^0,c
  4694  002868                     l3350:
  4695  002868  C02A  F01A         	movff	floorf@u,?_floorf
  4696  00286C  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4697  002870  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4698  002874  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4699  002878                     l998:
  4700  002878  0012               	return		;funcret
  4701  00287A                     __end_of_floorf:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function ___fpclassifyf *****************
  4705 ;; Defined at:
  4706 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  x               4    0[COMRAM] float 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  u               4   10[COMRAM] struct .
  4711 ;;  e               2    8[COMRAM] int 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  2    0[COMRAM] int 
  4714 ;; Registers used:
  4715 ;;		wreg, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4721 ;;      Params:         4       0       0       0       0       0       0       0       0
  4722 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4723 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4724 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4725 ;;Total ram usage:       14 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_efgtoa
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text15
  4735  002DC8                     __ptext15:
  4736                           	callstack 0
  4737  002DC8                     ___fpclassifyf:
  4738                           	callstack 26
  4739  002DC8  C0BC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4740  002DCC  C0BD  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4741  002DD0  C0BE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4742  002DD4  C0BF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4743  002DD8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4744  002DDC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4745  002DE0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4746  002DE4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4747  002DE8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4748  002DEC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4749  002DF0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4750  002DF4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4751  002DF8  0E18               	movlw	24
  4752  002DFA  EF04  F017         	goto	u3710
  4753  002DFE                     u3715:
  4754  002DFE  90D8               	bcf	status,0,c
  4755  002E00  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4756  002E02  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4757  002E04  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4758  002E06  3205               	rrcf	??___fpclassifyf^0,f,c
  4759  002E08                     u3710:
  4760  002E08  2EE8               	decfsz	wreg,f,c
  4761  002E0A  EFFF  F016         	goto	u3715
  4762  002E0E  5005               	movf	??___fpclassifyf^0,w,c
  4763  002E10  6E09               	movwf	___fpclassifyf@e^0,c
  4764  002E12  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4765  002E14  5009               	movf	___fpclassifyf@e^0,w,c
  4766  002E16  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4767  002E18  A4D8               	btfss	status,2,c
  4768  002E1A  EF11  F017         	goto	u3721
  4769  002E1E  EF13  F017         	goto	u3720
  4770  002E22                     u3721:
  4771  002E22  EF33  F017         	goto	l3302
  4772  002E26                     u3720:
  4773  002E26  90D8               	bcf	status,0,c
  4774  002E28  340B               	rlcf	___fpclassifyf@u^0,w,c
  4775  002E2A  6E05               	movwf	??___fpclassifyf^0,c
  4776  002E2C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4777  002E2E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4778  002E30  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4779  002E32  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4780  002E34  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4781  002E36  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4782  002E38  5005               	movf	??___fpclassifyf^0,w,c
  4783  002E3A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4784  002E3C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4785  002E3E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4786  002E40  A4D8               	btfss	status,2,c
  4787  002E42  EF25  F017         	goto	u3731
  4788  002E46  EF27  F017         	goto	u3730
  4789  002E4A                     u3731:
  4790  002E4A  EF2D  F017         	goto	l3298
  4791  002E4E                     u3730:
  4792  002E4E  0E00               	movlw	0
  4793  002E50  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4794  002E52  0E02               	movlw	2
  4795  002E54  6E01               	movwf	?___fpclassifyf^0,c
  4796  002E56  EF62  F017         	goto	l960
  4797  002E5A                     l3298:
  4798  002E5A  0E00               	movlw	0
  4799  002E5C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4800  002E5E  0E03               	movlw	3
  4801  002E60  6E01               	movwf	?___fpclassifyf^0,c
  4802  002E62  EF62  F017         	goto	l960
  4803  002E66                     l3302:
  4804  002E66  2809               	incf	___fpclassifyf@e^0,w,c
  4805  002E68  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4806  002E6A  A4D8               	btfss	status,2,c
  4807  002E6C  EF3A  F017         	goto	u3741
  4808  002E70  EF3C  F017         	goto	u3740
  4809  002E74                     u3741:
  4810  002E74  EF5E  F017         	goto	l3308
  4811  002E78                     u3740:
  4812  002E78  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4813  002E7C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4814  002E80  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4815  002E84  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4816  002E88  0E09               	movlw	9
  4817  002E8A                     u3755:
  4818  002E8A  90D8               	bcf	status,0,c
  4819  002E8C  3605               	rlcf	??___fpclassifyf^0,f,c
  4820  002E8E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4821  002E90  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4822  002E92  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4823  002E94  2EE8               	decfsz	wreg,f,c
  4824  002E96  EF45  F017         	goto	u3755
  4825  002E9A  5005               	movf	??___fpclassifyf^0,w,c
  4826  002E9C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4827  002E9E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4828  002EA0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4829  002EA2  B4D8               	btfsc	status,2,c
  4830  002EA4  EF56  F017         	goto	u3761
  4831  002EA8  EF59  F017         	goto	u3760
  4832  002EAC                     u3761:
  4833  002EAC  0E01               	movlw	1
  4834  002EAE  EF5A  F017         	goto	u3770
  4835  002EB2                     u3760:
  4836  002EB2  0E00               	movlw	0
  4837  002EB4                     u3770:
  4838  002EB4  6E01               	movwf	?___fpclassifyf^0,c
  4839  002EB6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4840  002EB8  EF62  F017         	goto	l960
  4841  002EBC                     l3308:
  4842  002EBC  0E00               	movlw	0
  4843  002EBE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4844  002EC0  0E04               	movlw	4
  4845  002EC2  6E01               	movwf	?___fpclassifyf^0,c
  4846  002EC4                     l960:
  4847  002EC4  0012               	return		;funcret
  4848  002EC6                     __end_of___fpclassifyf:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function ___fltol *****************
  4852 ;; Defined at:
  4853 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  f1              4    0[COMRAM] int 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  exp1            1    9[COMRAM] unsigned char 
  4858 ;;  sign1           1    8[COMRAM] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  4    0[COMRAM] long 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4868 ;;      Params:         4       0       0       0       0       0       0       0       0
  4869 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4870 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4871 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4872 ;;Total ram usage:       10 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_efgtoa
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text16
  4882  002BBE                     __ptext16:
  4883                           	callstack 0
  4884  002BBE                     ___fltol:
  4885                           	callstack 26
  4886  002BBE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4887  002BC0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4888  002BC2  6E0A               	movwf	___fltol@exp1^0,c
  4889  002BC4  500A               	movf	___fltol@exp1^0,w,c
  4890  002BC6  A4D8               	btfss	status,2,c
  4891  002BC8  EFE8  F015         	goto	u3601
  4892  002BCC  EFEA  F015         	goto	u3600
  4893  002BD0                     u3601:
  4894  002BD0  EFF4  F015         	goto	l3230
  4895  002BD4                     u3600:
  4896  002BD4                     l3226:
  4897  002BD4  0E00               	movlw	0
  4898  002BD6  6E01               	movwf	?___fltol^0,c
  4899  002BD8  0E00               	movlw	0
  4900  002BDA  6E02               	movwf	(?___fltol+1)^0,c
  4901  002BDC  0E00               	movlw	0
  4902  002BDE  6E03               	movwf	(?___fltol+2)^0,c
  4903  002BE0  0E00               	movlw	0
  4904  002BE2  6E04               	movwf	(?___fltol+3)^0,c
  4905  002BE4  EF61  F016         	goto	l389
  4906  002BE8                     l3230:
  4907  002BE8  C001  F005         	movff	___fltol@f1,??___fltol
  4908  002BEC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4909  002BF0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4910  002BF4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4911  002BF8  0E20               	movlw	32
  4912  002BFA  EF04  F016         	goto	u3610
  4913  002BFE                     u3615:
  4914  002BFE  90D8               	bcf	status,0,c
  4915  002C00  3208               	rrcf	(??___fltol+3)^0,f,c
  4916  002C02  3207               	rrcf	(??___fltol+2)^0,f,c
  4917  002C04  3206               	rrcf	(??___fltol+1)^0,f,c
  4918  002C06  3205               	rrcf	??___fltol^0,f,c
  4919  002C08                     u3610:
  4920  002C08  2EE8               	decfsz	wreg,f,c
  4921  002C0A  EFFF  F015         	goto	u3615
  4922  002C0E  5005               	movf	??___fltol^0,w,c
  4923  002C10  6E09               	movwf	___fltol@sign1^0,c
  4924  002C12  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4925  002C14  0EFF               	movlw	255
  4926  002C16  1601               	andwf	___fltol@f1^0,f,c
  4927  002C18  0EFF               	movlw	255
  4928  002C1A  1602               	andwf	(___fltol@f1+1)^0,f,c
  4929  002C1C  0EFF               	movlw	255
  4930  002C1E  1603               	andwf	(___fltol@f1+2)^0,f,c
  4931  002C20  0E00               	movlw	0
  4932  002C22  1604               	andwf	(___fltol@f1+3)^0,f,c
  4933  002C24  0E96               	movlw	150
  4934  002C26  5E0A               	subwf	___fltol@exp1^0,f,c
  4935  002C28  BE0A               	btfsc	___fltol@exp1^0,7,c
  4936  002C2A  EF1B  F016         	goto	u3620
  4937  002C2E  EF19  F016         	goto	u3621
  4938  002C32                     u3621:
  4939  002C32  EF31  F016         	goto	l3250
  4940  002C36                     u3620:
  4941  002C36  500A               	movf	___fltol@exp1^0,w,c
  4942  002C38  0A80               	xorlw	128
  4943  002C3A  0F97               	addlw	151
  4944  002C3C  B0D8               	btfsc	status,0,c
  4945  002C3E  EF23  F016         	goto	u3631
  4946  002C42  EF25  F016         	goto	u3630
  4947  002C46                     u3631:
  4948  002C46  EF27  F016         	goto	l3246
  4949  002C4A                     u3630:
  4950  002C4A  EFEA  F015         	goto	l3226
  4951  002C4E                     l3246:
  4952  002C4E  90D8               	bcf	status,0,c
  4953  002C50  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4954  002C52  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4955  002C54  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4956  002C56  3201               	rrcf	___fltol@f1^0,f,c
  4957  002C58  3E0A               	incfsz	___fltol@exp1^0,f,c
  4958  002C5A  EF27  F016         	goto	l3246
  4959  002C5E  EF49  F016         	goto	l3260
  4960  002C62                     l3250:
  4961  002C62  0E1F               	movlw	31
  4962  002C64  640A               	cpfsgt	___fltol@exp1^0,c
  4963  002C66  EF37  F016         	goto	u3641
  4964  002C6A  EF39  F016         	goto	u3640
  4965  002C6E                     u3641:
  4966  002C6E  EF41  F016         	goto	l3258
  4967  002C72                     u3640:
  4968  002C72  EFEA  F015         	goto	l3226
  4969  002C76                     l3256:
  4970  002C76  90D8               	bcf	status,0,c
  4971  002C78  3601               	rlcf	___fltol@f1^0,f,c
  4972  002C7A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4973  002C7C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4974  002C7E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4975  002C80  060A               	decf	___fltol@exp1^0,f,c
  4976  002C82                     l3258:
  4977  002C82  500A               	movf	___fltol@exp1^0,w,c
  4978  002C84  A4D8               	btfss	status,2,c
  4979  002C86  EF47  F016         	goto	u3651
  4980  002C8A  EF49  F016         	goto	u3650
  4981  002C8E                     u3651:
  4982  002C8E  EF3B  F016         	goto	l3256
  4983  002C92                     u3650:
  4984  002C92                     l3260:
  4985  002C92  5009               	movf	___fltol@sign1^0,w,c
  4986  002C94  B4D8               	btfsc	status,2,c
  4987  002C96  EF4F  F016         	goto	u3661
  4988  002C9A  EF51  F016         	goto	u3660
  4989  002C9E                     u3661:
  4990  002C9E  EF59  F016         	goto	l3264
  4991  002CA2                     u3660:
  4992  002CA2  1E04               	comf	(___fltol@f1+3)^0,f,c
  4993  002CA4  1E03               	comf	(___fltol@f1+2)^0,f,c
  4994  002CA6  1E02               	comf	(___fltol@f1+1)^0,f,c
  4995  002CA8  6C01               	negf	___fltol@f1^0,c
  4996  002CAA  0E00               	movlw	0
  4997  002CAC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4998  002CAE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4999  002CB0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5000  002CB2                     l3264:
  5001  002CB2  C001  F001         	movff	___fltol@f1,?___fltol
  5002  002CB6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5003  002CBA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5004  002CBE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5005  002CC2                     l389:
  5006  002CC2  0012               	return		;funcret
  5007  002CC4                     __end_of___fltol:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function ___flsub *****************
  5011 ;; Defined at:
  5012 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  b               4   25[COMRAM] long 
  5015 ;;  a               4   29[COMRAM] long 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4   25[COMRAM] long 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         8       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5030 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    1
  5034 ;; This function calls:
  5035 ;;		___fladd
  5036 ;; This function is called by:
  5037 ;;		_efgtoa
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text17
  5042  00374E                     __ptext17:
  5043                           	callstack 0
  5044  00374E                     ___flsub:
  5045                           	callstack 25
  5046  00374E  0E00               	movlw	0
  5047  003750  1A1E               	xorwf	___flsub@a^0,f,c
  5048  003752  0E00               	movlw	0
  5049  003754  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5050  003756  0E00               	movlw	0
  5051  003758  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5052  00375A  0E80               	movlw	128
  5053  00375C  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5054  00375E  C01A  F001         	movff	___flsub@b,___fladd@b
  5055  003762  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5056  003766  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5057  00376A  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5058  00376E  C01E  F005         	movff	___flsub@a,___fladd@a
  5059  003772  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5060  003776  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5061  00377A  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5062  00377E  ECF2  F00C         	call	___fladd	;wreg free
  5063  003782  C001  F01A         	movff	?___fladd,?___flsub
  5064  003786  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5065  00378A  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5066  00378E  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5067  003792  0012               	return		;funcret
  5068  003794                     __end_of___flsub:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function ___fladd *****************
  5072 ;; Defined at:
  5073 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  b               4    0[COMRAM] long 
  5076 ;;  a               4    4[COMRAM] long 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  grs             1   15[COMRAM] unsigned char 
  5079 ;;  bexp            1   14[COMRAM] unsigned char 
  5080 ;;  aexp            1   13[COMRAM] unsigned char 
  5081 ;;  signs           1   12[COMRAM] unsigned char 
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  4    0[COMRAM] unsigned char 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5091 ;;      Params:         8       0       0       0       0       0       0       0       0
  5092 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5093 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5094 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5095 ;;Total ram usage:       16 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		___flsub
  5101 ;;		_efgtoa
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text18
  5106  0019E4                     __ptext18:
  5107                           	callstack 0
  5108  0019E4                     ___fladd:
  5109                           	callstack 25
  5110  0019E4  5004               	movf	(___fladd@b+3)^0,w,c
  5111  0019E6  0B80               	andlw	128
  5112  0019E8  6E0D               	movwf	___fladd@signs^0,c
  5113  0019EA  5004               	movf	(___fladd@b+3)^0,w,c
  5114  0019EC  2404               	addwf	(___fladd@b+3)^0,w,c
  5115  0019EE  6E0F               	movwf	___fladd@bexp^0,c
  5116  0019F0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5117  0019F2  EFFD  F00C         	goto	u2541
  5118  0019F6  EFFF  F00C         	goto	u2540
  5119  0019FA                     u2541:
  5120  0019FA  EF00  F00D         	goto	l2600
  5121  0019FE                     u2540:
  5122  0019FE  800F               	bsf	___fladd@bexp^0,0,c
  5123  001A00                     l2600:
  5124  001A00  500F               	movf	___fladd@bexp^0,w,c
  5125  001A02  B4D8               	btfsc	status,2,c
  5126  001A04  EF06  F00D         	goto	u2551
  5127  001A08  EF08  F00D         	goto	u2550
  5128  001A0C                     u2551:
  5129  001A0C  EF1D  F00D         	goto	l2610
  5130  001A10                     u2550:
  5131  001A10  280F               	incf	___fladd@bexp^0,w,c
  5132  001A12  A4D8               	btfss	status,2,c
  5133  001A14  EF0E  F00D         	goto	u2561
  5134  001A18  EF10  F00D         	goto	u2560
  5135  001A1C                     u2561:
  5136  001A1C  EF18  F00D         	goto	l2606
  5137  001A20                     u2560:
  5138  001A20  0E00               	movlw	0
  5139  001A22  6E01               	movwf	___fladd@b^0,c
  5140  001A24  0E00               	movlw	0
  5141  001A26  6E02               	movwf	(___fladd@b+1)^0,c
  5142  001A28  0E00               	movlw	0
  5143  001A2A  6E03               	movwf	(___fladd@b+2)^0,c
  5144  001A2C  0E00               	movlw	0
  5145  001A2E  6E04               	movwf	(___fladd@b+3)^0,c
  5146  001A30                     l2606:
  5147  001A30  8E03               	bsf	(___fladd@b+2)^0,7,c
  5148  001A32  0E00               	movlw	0
  5149  001A34  6E04               	movwf	(___fladd@b+3)^0,c
  5150  001A36  EF25  F00D         	goto	l2612
  5151  001A3A                     l2610:
  5152  001A3A  0E00               	movlw	0
  5153  001A3C  6E01               	movwf	___fladd@b^0,c
  5154  001A3E  0E00               	movlw	0
  5155  001A40  6E02               	movwf	(___fladd@b+1)^0,c
  5156  001A42  0E00               	movlw	0
  5157  001A44  6E03               	movwf	(___fladd@b+2)^0,c
  5158  001A46  0E00               	movlw	0
  5159  001A48  6E04               	movwf	(___fladd@b+3)^0,c
  5160  001A4A                     l2612:
  5161  001A4A  5008               	movf	(___fladd@a+3)^0,w,c
  5162  001A4C  0B80               	andlw	128
  5163  001A4E  6E0E               	movwf	___fladd@aexp^0,c
  5164  001A50  500D               	movf	___fladd@signs^0,w,c
  5165  001A52  180E               	xorwf	___fladd@aexp^0,w,c
  5166  001A54  B4D8               	btfsc	status,2,c
  5167  001A56  EF2F  F00D         	goto	u2571
  5168  001A5A  EF31  F00D         	goto	u2570
  5169  001A5E                     u2571:
  5170  001A5E  EF32  F00D         	goto	l2618
  5171  001A62                     u2570:
  5172  001A62  8C0D               	bsf	___fladd@signs^0,6,c
  5173  001A64                     l2618:
  5174  001A64  5008               	movf	(___fladd@a+3)^0,w,c
  5175  001A66  2408               	addwf	(___fladd@a+3)^0,w,c
  5176  001A68  6E0E               	movwf	___fladd@aexp^0,c
  5177  001A6A  AE07               	btfss	(___fladd@a+2)^0,7,c
  5178  001A6C  EF3A  F00D         	goto	u2581
  5179  001A70  EF3C  F00D         	goto	u2580
  5180  001A74                     u2581:
  5181  001A74  EF3D  F00D         	goto	l2624
  5182  001A78                     u2580:
  5183  001A78  800E               	bsf	___fladd@aexp^0,0,c
  5184  001A7A                     l2624:
  5185  001A7A  500E               	movf	___fladd@aexp^0,w,c
  5186  001A7C  B4D8               	btfsc	status,2,c
  5187  001A7E  EF43  F00D         	goto	u2591
  5188  001A82  EF45  F00D         	goto	u2590
  5189  001A86                     u2591:
  5190  001A86  EF5A  F00D         	goto	l2634
  5191  001A8A                     u2590:
  5192  001A8A  280E               	incf	___fladd@aexp^0,w,c
  5193  001A8C  A4D8               	btfss	status,2,c
  5194  001A8E  EF4B  F00D         	goto	u2601
  5195  001A92  EF4D  F00D         	goto	u2600
  5196  001A96                     u2601:
  5197  001A96  EF55  F00D         	goto	l2630
  5198  001A9A                     u2600:
  5199  001A9A  0E00               	movlw	0
  5200  001A9C  6E05               	movwf	___fladd@a^0,c
  5201  001A9E  0E00               	movlw	0
  5202  001AA0  6E06               	movwf	(___fladd@a+1)^0,c
  5203  001AA2  0E00               	movlw	0
  5204  001AA4  6E07               	movwf	(___fladd@a+2)^0,c
  5205  001AA6  0E00               	movlw	0
  5206  001AA8  6E08               	movwf	(___fladd@a+3)^0,c
  5207  001AAA                     l2630:
  5208  001AAA  8E07               	bsf	(___fladd@a+2)^0,7,c
  5209  001AAC  0E00               	movlw	0
  5210  001AAE  6E08               	movwf	(___fladd@a+3)^0,c
  5211  001AB0  EF62  F00D         	goto	l2636
  5212  001AB4                     l2634:
  5213  001AB4  0E00               	movlw	0
  5214  001AB6  6E05               	movwf	___fladd@a^0,c
  5215  001AB8  0E00               	movlw	0
  5216  001ABA  6E06               	movwf	(___fladd@a+1)^0,c
  5217  001ABC  0E00               	movlw	0
  5218  001ABE  6E07               	movwf	(___fladd@a+2)^0,c
  5219  001AC0  0E00               	movlw	0
  5220  001AC2  6E08               	movwf	(___fladd@a+3)^0,c
  5221  001AC4                     l2636:
  5222  001AC4  500F               	movf	___fladd@bexp^0,w,c
  5223  001AC6  5C0E               	subwf	___fladd@aexp^0,w,c
  5224  001AC8  B0D8               	btfsc	status,0,c
  5225  001ACA  EF69  F00D         	goto	u2611
  5226  001ACE  EF6B  F00D         	goto	u2610
  5227  001AD2                     u2611:
  5228  001AD2  EF92  F00D         	goto	l2672
  5229  001AD6                     u2610:
  5230  001AD6  AC0D               	btfss	___fladd@signs^0,6,c
  5231  001AD8  EF70  F00D         	goto	u2621
  5232  001ADC  EF72  F00D         	goto	u2620
  5233  001AE0                     u2621:
  5234  001AE0  EF74  F00D         	goto	l2642
  5235  001AE4                     u2620:
  5236  001AE4  0E80               	movlw	128
  5237  001AE6  1A0D               	xorwf	___fladd@signs^0,f,c
  5238  001AE8                     l2642:
  5239  001AE8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5240  001AEC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5241  001AF0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5242  001AF4  C001  F010         	movff	___fladd@b,___fladd@grs
  5243  001AF8  C005  F001         	movff	___fladd@a,___fladd@b
  5244  001AFC  C010  F005         	movff	___fladd@grs,___fladd@a
  5245  001B00  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5246  001B04  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5247  001B08  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5248  001B0C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5249  001B10  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5250  001B14  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5251  001B18  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5252  001B1C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5253  001B20  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5254  001B24                     l2672:
  5255  001B24  0E00               	movlw	0
  5256  001B26  6E10               	movwf	___fladd@grs^0,c
  5257  001B28  500F               	movf	___fladd@bexp^0,w,c
  5258  001B2A  C00E  F009         	movff	___fladd@aexp,??___fladd
  5259  001B2E  6A0A               	clrf	(??___fladd+1)^0,c
  5260  001B30  5E09               	subwf	??___fladd^0,f,c
  5261  001B32  0E00               	movlw	0
  5262  001B34  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5263  001B36  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5264  001B38  EFA7  F00D         	goto	u2631
  5265  001B3C  500A               	movf	(??___fladd+1)^0,w,c
  5266  001B3E  E109               	bnz	u2630
  5267  001B40  0E1A               	movlw	26
  5268  001B42  5C09               	subwf	??___fladd^0,w,c
  5269  001B44  A0D8               	btfss	status,0,c
  5270  001B46  EFA7  F00D         	goto	u2631
  5271  001B4A  EFA9  F00D         	goto	u2630
  5272  001B4E                     u2631:
  5273  001B4E  EFE0  F00D         	goto	l621
  5274  001B52                     u2630:
  5275  001B52  5001               	movf	___fladd@b^0,w,c
  5276  001B54  1002               	iorwf	(___fladd@b+1)^0,w,c
  5277  001B56  1003               	iorwf	(___fladd@b+2)^0,w,c
  5278  001B58  1004               	iorwf	(___fladd@b+3)^0,w,c
  5279  001B5A  A4D8               	btfss	status,2,c
  5280  001B5C  EFB2  F00D         	goto	u2641
  5281  001B60  EFB5  F00D         	goto	u2640
  5282  001B64                     u2641:
  5283  001B64  0E01               	movlw	1
  5284  001B66  EFB6  F00D         	goto	u2650
  5285  001B6A                     u2640:
  5286  001B6A  0E00               	movlw	0
  5287  001B6C                     u2650:
  5288  001B6C  6E10               	movwf	___fladd@grs^0,c
  5289  001B6E  0E00               	movlw	0
  5290  001B70  6E01               	movwf	___fladd@b^0,c
  5291  001B72  0E00               	movlw	0
  5292  001B74  6E02               	movwf	(___fladd@b+1)^0,c
  5293  001B76  0E00               	movlw	0
  5294  001B78  6E03               	movwf	(___fladd@b+2)^0,c
  5295  001B7A  0E00               	movlw	0
  5296  001B7C  6E04               	movwf	(___fladd@b+3)^0,c
  5297  001B7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5298  001B82  EFE9  F00D         	goto	l620
  5299  001B86                     l622:
  5300  001B86  A010               	btfss	___fladd@grs^0,0,c
  5301  001B88  EFC8  F00D         	goto	u2661
  5302  001B8C  EFCA  F00D         	goto	u2660
  5303  001B90                     u2661:
  5304  001B90  EFD0  F00D         	goto	l2684
  5305  001B94                     u2660:
  5306  001B94  90D8               	bcf	status,0,c
  5307  001B96  3010               	rrcf	___fladd@grs^0,w,c
  5308  001B98  0901               	iorlw	1
  5309  001B9A  6E10               	movwf	___fladd@grs^0,c
  5310  001B9C  EFD2  F00D         	goto	l2686
  5311  001BA0                     l2684:
  5312  001BA0  90D8               	bcf	status,0,c
  5313  001BA2  3210               	rrcf	___fladd@grs^0,f,c
  5314  001BA4                     l2686:
  5315  001BA4  A001               	btfss	___fladd@b^0,0,c
  5316  001BA6  EFD7  F00D         	goto	u2671
  5317  001BAA  EFD9  F00D         	goto	u2670
  5318  001BAE                     u2671:
  5319  001BAE  EFDA  F00D         	goto	l2690
  5320  001BB2                     u2670:
  5321  001BB2  8E10               	bsf	___fladd@grs^0,7,c
  5322  001BB4                     l2690:
  5323  001BB4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5324  001BB6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5325  001BB8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5326  001BBA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5327  001BBC  3201               	rrcf	___fladd@b^0,f,c
  5328  001BBE  2A0F               	incf	___fladd@bexp^0,f,c
  5329  001BC0                     l621:
  5330  001BC0  500E               	movf	___fladd@aexp^0,w,c
  5331  001BC2  5C0F               	subwf	___fladd@bexp^0,w,c
  5332  001BC4  A0D8               	btfss	status,0,c
  5333  001BC6  EFE7  F00D         	goto	u2681
  5334  001BCA  EFE9  F00D         	goto	u2680
  5335  001BCE                     u2681:
  5336  001BCE  EFC3  F00D         	goto	l622
  5337  001BD2                     u2680:
  5338  001BD2                     l620:
  5339  001BD2  BC0D               	btfsc	___fladd@signs^0,6,c
  5340  001BD4  EFEE  F00D         	goto	u2691
  5341  001BD8  EFF0  F00D         	goto	u2690
  5342  001BDC                     u2691:
  5343  001BDC  EF30  F00E         	goto	l2718
  5344  001BE0                     u2690:
  5345  001BE0  500F               	movf	___fladd@bexp^0,w,c
  5346  001BE2  A4D8               	btfss	status,2,c
  5347  001BE4  EFF6  F00D         	goto	u2701
  5348  001BE8  EFF8  F00D         	goto	u2700
  5349  001BEC                     u2701:
  5350  001BEC  EF02  F00E         	goto	l2700
  5351  001BF0                     u2700:
  5352  001BF0  0E00               	movlw	0
  5353  001BF2  6E01               	movwf	?___fladd^0,c
  5354  001BF4  0E00               	movlw	0
  5355  001BF6  6E02               	movwf	(?___fladd+1)^0,c
  5356  001BF8  0E00               	movlw	0
  5357  001BFA  6E03               	movwf	(?___fladd+2)^0,c
  5358  001BFC  0E00               	movlw	0
  5359  001BFE  6E04               	movwf	(?___fladd+3)^0,c
  5360  001C00  EF51  F00F         	goto	l629
  5361  001C04                     l2700:
  5362  001C04  5005               	movf	___fladd@a^0,w,c
  5363  001C06  2601               	addwf	___fladd@b^0,f,c
  5364  001C08  5006               	movf	(___fladd@a+1)^0,w,c
  5365  001C0A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5366  001C0C  5007               	movf	(___fladd@a+2)^0,w,c
  5367  001C0E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5368  001C10  5008               	movf	(___fladd@a+3)^0,w,c
  5369  001C12  2204               	addwfc	(___fladd@b+3)^0,f,c
  5370  001C14  A004               	btfss	(___fladd@b+3)^0,0,c
  5371  001C16  EF0F  F00E         	goto	u2711
  5372  001C1A  EF11  F00E         	goto	u2710
  5373  001C1E                     u2711:
  5374  001C1E  EFBD  F00E         	goto	l2754
  5375  001C22                     u2710:
  5376  001C22  A010               	btfss	___fladd@grs^0,0,c
  5377  001C24  EF16  F00E         	goto	u2721
  5378  001C28  EF18  F00E         	goto	u2720
  5379  001C2C                     u2721:
  5380  001C2C  EF1E  F00E         	goto	l2708
  5381  001C30                     u2720:
  5382  001C30  90D8               	bcf	status,0,c
  5383  001C32  3010               	rrcf	___fladd@grs^0,w,c
  5384  001C34  0901               	iorlw	1
  5385  001C36  6E10               	movwf	___fladd@grs^0,c
  5386  001C38  EF20  F00E         	goto	l2710
  5387  001C3C                     l2708:
  5388  001C3C  90D8               	bcf	status,0,c
  5389  001C3E  3210               	rrcf	___fladd@grs^0,f,c
  5390  001C40                     l2710:
  5391  001C40  A001               	btfss	___fladd@b^0,0,c
  5392  001C42  EF25  F00E         	goto	u2731
  5393  001C46  EF27  F00E         	goto	u2730
  5394  001C4A                     u2731:
  5395  001C4A  EF28  F00E         	goto	l2714
  5396  001C4E                     u2730:
  5397  001C4E  8E10               	bsf	___fladd@grs^0,7,c
  5398  001C50                     l2714:
  5399  001C50  3404               	rlcf	(___fladd@b+3)^0,w,c
  5400  001C52  3204               	rrcf	(___fladd@b+3)^0,f,c
  5401  001C54  3203               	rrcf	(___fladd@b+2)^0,f,c
  5402  001C56  3202               	rrcf	(___fladd@b+1)^0,f,c
  5403  001C58  3201               	rrcf	___fladd@b^0,f,c
  5404  001C5A  2A0F               	incf	___fladd@bexp^0,f,c
  5405  001C5C  EFBD  F00E         	goto	l2754
  5406  001C60                     l2718:
  5407  001C60  5005               	movf	___fladd@a^0,w,c
  5408  001C62  5C01               	subwf	___fladd@b^0,w,c
  5409  001C64  5006               	movf	(___fladd@a+1)^0,w,c
  5410  001C66  5802               	subwfb	(___fladd@b+1)^0,w,c
  5411  001C68  5007               	movf	(___fladd@a+2)^0,w,c
  5412  001C6A  5803               	subwfb	(___fladd@b+2)^0,w,c
  5413  001C6C  5004               	movf	(___fladd@b+3)^0,w,c
  5414  001C6E  0A80               	xorlw	128
  5415  001C70  6E09               	movwf	??___fladd^0,c
  5416  001C72  5008               	movf	(___fladd@a+3)^0,w,c
  5417  001C74  0A80               	xorlw	128
  5418  001C76  5809               	subwfb	??___fladd^0,w,c
  5419  001C78  B0D8               	btfsc	status,0,c
  5420  001C7A  EF41  F00E         	goto	u2741
  5421  001C7E  EF43  F00E         	goto	u2740
  5422  001C82                     u2741:
  5423  001C82  EF6E  F00E         	goto	l2728
  5424  001C86                     u2740:
  5425  001C86  5001               	movf	___fladd@b^0,w,c
  5426  001C88  5C05               	subwf	___fladd@a^0,w,c
  5427  001C8A  6E09               	movwf	??___fladd^0,c
  5428  001C8C  5002               	movf	(___fladd@b+1)^0,w,c
  5429  001C8E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5430  001C90  6E0A               	movwf	(??___fladd+1)^0,c
  5431  001C92  5003               	movf	(___fladd@b+2)^0,w,c
  5432  001C94  5807               	subwfb	(___fladd@a+2)^0,w,c
  5433  001C96  6E0B               	movwf	(??___fladd+2)^0,c
  5434  001C98  5004               	movf	(___fladd@b+3)^0,w,c
  5435  001C9A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5436  001C9C  6E0C               	movwf	(??___fladd+3)^0,c
  5437  001C9E  0EFF               	movlw	255
  5438  001CA0  2409               	addwf	??___fladd^0,w,c
  5439  001CA2  6E01               	movwf	___fladd@b^0,c
  5440  001CA4  0EFF               	movlw	255
  5441  001CA6  200A               	addwfc	(??___fladd+1)^0,w,c
  5442  001CA8  6E02               	movwf	(___fladd@b+1)^0,c
  5443  001CAA  0EFF               	movlw	255
  5444  001CAC  200B               	addwfc	(??___fladd+2)^0,w,c
  5445  001CAE  6E03               	movwf	(___fladd@b+2)^0,c
  5446  001CB0  0EFF               	movlw	255
  5447  001CB2  200C               	addwfc	(??___fladd+3)^0,w,c
  5448  001CB4  6E04               	movwf	(___fladd@b+3)^0,c
  5449  001CB6  0E80               	movlw	128
  5450  001CB8  1A0D               	xorwf	___fladd@signs^0,f,c
  5451  001CBA  6C10               	negf	___fladd@grs^0,c
  5452  001CBC  5010               	movf	___fladd@grs^0,w,c
  5453  001CBE  A4D8               	btfss	status,2,c
  5454  001CC0  EF64  F00E         	goto	u2751
  5455  001CC4  EF66  F00E         	goto	u2750
  5456  001CC8                     u2751:
  5457  001CC8  EF76  F00E         	goto	l637
  5458  001CCC                     u2750:
  5459  001CCC  0E01               	movlw	1
  5460  001CCE  2601               	addwf	___fladd@b^0,f,c
  5461  001CD0  0E00               	movlw	0
  5462  001CD2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5463  001CD4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5464  001CD6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5465  001CD8  EF76  F00E         	goto	l637
  5466  001CDC                     l2728:
  5467  001CDC  5005               	movf	___fladd@a^0,w,c
  5468  001CDE  5E01               	subwf	___fladd@b^0,f,c
  5469  001CE0  5006               	movf	(___fladd@a+1)^0,w,c
  5470  001CE2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5471  001CE4  5007               	movf	(___fladd@a+2)^0,w,c
  5472  001CE6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5473  001CE8  5008               	movf	(___fladd@a+3)^0,w,c
  5474  001CEA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5475  001CEC                     l637:
  5476  001CEC  5001               	movf	___fladd@b^0,w,c
  5477  001CEE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5478  001CF0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5479  001CF2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5480  001CF4  A4D8               	btfss	status,2,c
  5481  001CF6  EF7F  F00E         	goto	u2761
  5482  001CFA  EF81  F00E         	goto	u2760
  5483  001CFE                     u2761:
  5484  001CFE  EFB6  F00E         	goto	l2752
  5485  001D02                     u2760:
  5486  001D02  5010               	movf	___fladd@grs^0,w,c
  5487  001D04  A4D8               	btfss	status,2,c
  5488  001D06  EF87  F00E         	goto	u2771
  5489  001D0A  EF89  F00E         	goto	u2770
  5490  001D0E                     u2771:
  5491  001D0E  EFB6  F00E         	goto	l2752
  5492  001D12                     u2770:
  5493  001D12  0E00               	movlw	0
  5494  001D14  6E01               	movwf	?___fladd^0,c
  5495  001D16  0E00               	movlw	0
  5496  001D18  6E02               	movwf	(?___fladd+1)^0,c
  5497  001D1A  0E00               	movlw	0
  5498  001D1C  6E03               	movwf	(?___fladd+2)^0,c
  5499  001D1E  0E00               	movlw	0
  5500  001D20  6E04               	movwf	(?___fladd+3)^0,c
  5501  001D22  EF51  F00F         	goto	l629
  5502  001D26                     l2736:
  5503  001D26  90D8               	bcf	status,0,c
  5504  001D28  3601               	rlcf	___fladd@b^0,f,c
  5505  001D2A  3602               	rlcf	(___fladd@b+1)^0,f,c
  5506  001D2C  3603               	rlcf	(___fladd@b+2)^0,f,c
  5507  001D2E  3604               	rlcf	(___fladd@b+3)^0,f,c
  5508  001D30  AE10               	btfss	___fladd@grs^0,7,c
  5509  001D32  EF9D  F00E         	goto	u2781
  5510  001D36  EF9F  F00E         	goto	u2780
  5511  001D3A                     u2781:
  5512  001D3A  EFA0  F00E         	goto	l2742
  5513  001D3E                     u2780:
  5514  001D3E  8001               	bsf	___fladd@b^0,0,c
  5515  001D40                     l2742:
  5516  001D40  A010               	btfss	___fladd@grs^0,0,c
  5517  001D42  EFA5  F00E         	goto	u2791
  5518  001D46  EFA7  F00E         	goto	u2790
  5519  001D4A                     u2791:
  5520  001D4A  EFAB  F00E         	goto	l2746
  5521  001D4E                     u2790:
  5522  001D4E  80D8               	bsf	status,0,c
  5523  001D50  3610               	rlcf	___fladd@grs^0,f,c
  5524  001D52  EFAD  F00E         	goto	l2748
  5525  001D56                     l2746:
  5526  001D56  90D8               	bcf	status,0,c
  5527  001D58  3610               	rlcf	___fladd@grs^0,f,c
  5528  001D5A                     l2748:
  5529  001D5A  500F               	movf	___fladd@bexp^0,w,c
  5530  001D5C  B4D8               	btfsc	status,2,c
  5531  001D5E  EFB3  F00E         	goto	u2801
  5532  001D62  EFB5  F00E         	goto	u2800
  5533  001D66                     u2801:
  5534  001D66  EFB6  F00E         	goto	l2752
  5535  001D6A                     u2800:
  5536  001D6A  060F               	decf	___fladd@bexp^0,f,c
  5537  001D6C                     l2752:
  5538  001D6C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5539  001D6E  EFBB  F00E         	goto	u2811
  5540  001D72  EFBD  F00E         	goto	u2810
  5541  001D76                     u2811:
  5542  001D76  EF93  F00E         	goto	l2736
  5543  001D7A                     u2810:
  5544  001D7A                     l2754:
  5545  001D7A  0E00               	movlw	0
  5546  001D7C  6E0E               	movwf	___fladd@aexp^0,c
  5547  001D7E  AE10               	btfss	___fladd@grs^0,7,c
  5548  001D80  EFC4  F00E         	goto	u2821
  5549  001D84  EFC6  F00E         	goto	u2820
  5550  001D88                     u2821:
  5551  001D88  EFDE  F00E         	goto	l646
  5552  001D8C                     u2820:
  5553  001D8C  C010  F009         	movff	___fladd@grs,??___fladd
  5554  001D90  0E7F               	movlw	127
  5555  001D92  1609               	andwf	??___fladd^0,f,c
  5556  001D94  B4D8               	btfsc	status,2,c
  5557  001D96  EFCF  F00E         	goto	u2831
  5558  001D9A  EFD1  F00E         	goto	u2830
  5559  001D9E                     u2831:
  5560  001D9E  EFD5  F00E         	goto	l647
  5561  001DA2                     u2830:
  5562  001DA2                     l2760:
  5563  001DA2  0E01               	movlw	1
  5564  001DA4  6E0E               	movwf	___fladd@aexp^0,c
  5565  001DA6  EFDE  F00E         	goto	l646
  5566  001DAA                     l647:
  5567  001DAA  A001               	btfss	___fladd@b^0,0,c
  5568  001DAC  EFDA  F00E         	goto	u2841
  5569  001DB0  EFDC  F00E         	goto	u2840
  5570  001DB4                     u2841:
  5571  001DB4  EFDE  F00E         	goto	l646
  5572  001DB8                     u2840:
  5573  001DB8  EFD1  F00E         	goto	l2760
  5574  001DBC                     l646:
  5575  001DBC  500E               	movf	___fladd@aexp^0,w,c
  5576  001DBE  B4D8               	btfsc	status,2,c
  5577  001DC0  EFE4  F00E         	goto	u2851
  5578  001DC4  EFE6  F00E         	goto	u2850
  5579  001DC8                     u2851:
  5580  001DC8  EF11  F00F         	goto	l2772
  5581  001DCC                     u2850:
  5582  001DCC  0E01               	movlw	1
  5583  001DCE  2601               	addwf	___fladd@b^0,f,c
  5584  001DD0  0E00               	movlw	0
  5585  001DD2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5586  001DD4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5587  001DD6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5588  001DD8  A004               	btfss	(___fladd@b+3)^0,0,c
  5589  001DDA  EFF1  F00E         	goto	u2861
  5590  001DDE  EFF3  F00E         	goto	u2860
  5591  001DE2                     u2861:
  5592  001DE2  EF11  F00F         	goto	l2772
  5593  001DE6                     u2860:
  5594  001DE6  C001  F009         	movff	___fladd@b,??___fladd
  5595  001DEA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5596  001DEE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5597  001DF2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5598  001DF6  340C               	rlcf	(??___fladd+3)^0,w,c
  5599  001DF8  320C               	rrcf	(??___fladd+3)^0,f,c
  5600  001DFA  320B               	rrcf	(??___fladd+2)^0,f,c
  5601  001DFC  320A               	rrcf	(??___fladd+1)^0,f,c
  5602  001DFE  3209               	rrcf	??___fladd^0,f,c
  5603  001E00  C009  F001         	movff	??___fladd,___fladd@b
  5604  001E04  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5605  001E08  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5606  001E0C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5607  001E10  280F               	incf	___fladd@bexp^0,w,c
  5608  001E12  B4D8               	btfsc	status,2,c
  5609  001E14  EF0E  F00F         	goto	u2871
  5610  001E18  EF10  F00F         	goto	u2870
  5611  001E1C                     u2871:
  5612  001E1C  EF11  F00F         	goto	l2772
  5613  001E20                     u2870:
  5614  001E20  2A0F               	incf	___fladd@bexp^0,f,c
  5615  001E22                     l2772:
  5616  001E22  280F               	incf	___fladd@bexp^0,w,c
  5617  001E24  B4D8               	btfsc	status,2,c
  5618  001E26  EF17  F00F         	goto	u2881
  5619  001E2A  EF19  F00F         	goto	u2880
  5620  001E2E                     u2881:
  5621  001E2E  EF21  F00F         	goto	l2776
  5622  001E32                     u2880:
  5623  001E32  500F               	movf	___fladd@bexp^0,w,c
  5624  001E34  A4D8               	btfss	status,2,c
  5625  001E36  EF1F  F00F         	goto	u2891
  5626  001E3A  EF21  F00F         	goto	u2890
  5627  001E3E                     u2891:
  5628  001E3E  EF33  F00F         	goto	l2780
  5629  001E42                     u2890:
  5630  001E42                     l2776:
  5631  001E42  0E00               	movlw	0
  5632  001E44  6E01               	movwf	___fladd@b^0,c
  5633  001E46  0E00               	movlw	0
  5634  001E48  6E02               	movwf	(___fladd@b+1)^0,c
  5635  001E4A  0E00               	movlw	0
  5636  001E4C  6E03               	movwf	(___fladd@b+2)^0,c
  5637  001E4E  0E00               	movlw	0
  5638  001E50  6E04               	movwf	(___fladd@b+3)^0,c
  5639  001E52  500F               	movf	___fladd@bexp^0,w,c
  5640  001E54  A4D8               	btfss	status,2,c
  5641  001E56  EF2F  F00F         	goto	u2901
  5642  001E5A  EF31  F00F         	goto	u2900
  5643  001E5E                     u2901:
  5644  001E5E  EF33  F00F         	goto	l2780
  5645  001E62                     u2900:
  5646  001E62  0E00               	movlw	0
  5647  001E64  6E0D               	movwf	___fladd@signs^0,c
  5648  001E66                     l2780:
  5649  001E66  A00F               	btfss	___fladd@bexp^0,0,c
  5650  001E68  EF38  F00F         	goto	u2911
  5651  001E6C  EF3A  F00F         	goto	u2910
  5652  001E70                     u2911:
  5653  001E70  EF3D  F00F         	goto	l2784
  5654  001E74                     u2910:
  5655  001E74  8E03               	bsf	(___fladd@b+2)^0,7,c
  5656  001E76  EF3E  F00F         	goto	l2786
  5657  001E7A                     l2784:
  5658  001E7A  9E03               	bcf	(___fladd@b+2)^0,7,c
  5659  001E7C                     l2786:
  5660  001E7C  90D8               	bcf	status,0,c
  5661  001E7E  300F               	rrcf	___fladd@bexp^0,w,c
  5662  001E80  6E04               	movwf	(___fladd@b+3)^0,c
  5663  001E82  AE0D               	btfss	___fladd@signs^0,7,c
  5664  001E84  EF46  F00F         	goto	u2921
  5665  001E88  EF48  F00F         	goto	u2920
  5666  001E8C                     u2921:
  5667  001E8C  EF49  F00F         	goto	l2792
  5668  001E90                     u2920:
  5669  001E90  8E04               	bsf	(___fladd@b+3)^0,7,c
  5670  001E92                     l2792:
  5671  001E92  C001  F001         	movff	___fladd@b,?___fladd
  5672  001E96  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5673  001E9A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5674  001E9E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5675  001EA2                     l629:
  5676  001EA2  0012               	return		;funcret
  5677  001EA4                     __end_of___fladd:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function ___flneg *****************
  5681 ;; Defined at:
  5682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  f1              4    0[COMRAM] unsigned char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  4    0[COMRAM] unsigned char 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5696 ;;      Params:         4       0       0       0       0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5699 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5700 ;;Total ram usage:        4 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_efgtoa
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text19
  5710  003852                     __ptext19:
  5711                           	callstack 0
  5712  003852                     ___flneg:
  5713                           	callstack 26
  5714  003852  5001               	movf	___flneg@f1^0,w,c
  5715  003854  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5716  003856  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5717  003858  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5718  00385A  B4D8               	btfsc	status,2,c
  5719  00385C  EF32  F01C         	goto	u3591
  5720  003860  EF34  F01C         	goto	u3590
  5721  003864                     u3591:
  5722  003864  EF3C  F01C         	goto	l3220
  5723  003868                     u3590:
  5724  003868  0E00               	movlw	0
  5725  00386A  1A01               	xorwf	___flneg@f1^0,f,c
  5726  00386C  0E00               	movlw	0
  5727  00386E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5728  003870  0E00               	movlw	0
  5729  003872  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5730  003874  0E80               	movlw	128
  5731  003876  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5732  003878                     l3220:
  5733  003878  C001  F001         	movff	___flneg@f1,?___flneg
  5734  00387C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5735  003880  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5736  003884  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5737  003888  0012               	return		;funcret
  5738  00388A                     __end_of___flneg:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function ___flmul *****************
  5742 ;; Defined at:
  5743 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  b               4    0[COMRAM] unsigned char 
  5746 ;;  a               4    4[COMRAM] unsigned char 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  prod            4   19[COMRAM] struct .
  5749 ;;  grs             4   13[COMRAM] unsigned long 
  5750 ;;  temp            2   23[COMRAM] struct .
  5751 ;;  bexp            1   18[COMRAM] unsigned char 
  5752 ;;  aexp            1   17[COMRAM] unsigned char 
  5753 ;;  sign            1   12[COMRAM] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4    0[COMRAM] unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, prodl, prodh
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5763 ;;      Params:         8       0       0       0       0       0       0       0       0
  5764 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5765 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5766 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5767 ;;Total ram usage:       25 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_efgtoa
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text20
  5777  001EA4                     __ptext20:
  5778                           	callstack 0
  5779  001EA4                     ___flmul:
  5780                           	callstack 26
  5781  001EA4  5004               	movf	(___flmul@b+3)^0,w,c
  5782  001EA6  0B80               	andlw	128
  5783  001EA8  6E0D               	movwf	___flmul@sign^0,c
  5784  001EAA  5004               	movf	(___flmul@b+3)^0,w,c
  5785  001EAC  2404               	addwf	(___flmul@b+3)^0,w,c
  5786  001EAE  6E13               	movwf	___flmul@bexp^0,c
  5787  001EB0  AE03               	btfss	(___flmul@b+2)^0,7,c
  5788  001EB2  EF5D  F00F         	goto	u3201
  5789  001EB6  EF5F  F00F         	goto	u3200
  5790  001EBA                     u3201:
  5791  001EBA  EF60  F00F         	goto	l2968
  5792  001EBE                     u3200:
  5793  001EBE  8013               	bsf	___flmul@bexp^0,0,c
  5794  001EC0                     l2968:
  5795  001EC0  5013               	movf	___flmul@bexp^0,w,c
  5796  001EC2  B4D8               	btfsc	status,2,c
  5797  001EC4  EF66  F00F         	goto	u3211
  5798  001EC8  EF68  F00F         	goto	u3210
  5799  001ECC                     u3211:
  5800  001ECC  EF7B  F00F         	goto	l2976
  5801  001ED0                     u3210:
  5802  001ED0  2813               	incf	___flmul@bexp^0,w,c
  5803  001ED2  A4D8               	btfss	status,2,c
  5804  001ED4  EF6E  F00F         	goto	u3221
  5805  001ED8  EF70  F00F         	goto	u3220
  5806  001EDC                     u3221:
  5807  001EDC  EF78  F00F         	goto	l2974
  5808  001EE0                     u3220:
  5809  001EE0  0E00               	movlw	0
  5810  001EE2  6E01               	movwf	___flmul@b^0,c
  5811  001EE4  0E00               	movlw	0
  5812  001EE6  6E02               	movwf	(___flmul@b+1)^0,c
  5813  001EE8  0E00               	movlw	0
  5814  001EEA  6E03               	movwf	(___flmul@b+2)^0,c
  5815  001EEC  0E00               	movlw	0
  5816  001EEE  6E04               	movwf	(___flmul@b+3)^0,c
  5817  001EF0                     l2974:
  5818  001EF0  8E03               	bsf	(___flmul@b+2)^0,7,c
  5819  001EF2  EF83  F00F         	goto	l2978
  5820  001EF6                     l2976:
  5821  001EF6  0E00               	movlw	0
  5822  001EF8  6E01               	movwf	___flmul@b^0,c
  5823  001EFA  0E00               	movlw	0
  5824  001EFC  6E02               	movwf	(___flmul@b+1)^0,c
  5825  001EFE  0E00               	movlw	0
  5826  001F00  6E03               	movwf	(___flmul@b+2)^0,c
  5827  001F02  0E00               	movlw	0
  5828  001F04  6E04               	movwf	(___flmul@b+3)^0,c
  5829  001F06                     l2978:
  5830  001F06  5008               	movf	(___flmul@a+3)^0,w,c
  5831  001F08  0B80               	andlw	128
  5832  001F0A  1A0D               	xorwf	___flmul@sign^0,f,c
  5833  001F0C  5008               	movf	(___flmul@a+3)^0,w,c
  5834  001F0E  2408               	addwf	(___flmul@a+3)^0,w,c
  5835  001F10  6E12               	movwf	___flmul@aexp^0,c
  5836  001F12  AE07               	btfss	(___flmul@a+2)^0,7,c
  5837  001F14  EF8E  F00F         	goto	u3231
  5838  001F18  EF90  F00F         	goto	u3230
  5839  001F1C                     u3231:
  5840  001F1C  EF91  F00F         	goto	l2986
  5841  001F20                     u3230:
  5842  001F20  8012               	bsf	___flmul@aexp^0,0,c
  5843  001F22                     l2986:
  5844  001F22  5012               	movf	___flmul@aexp^0,w,c
  5845  001F24  B4D8               	btfsc	status,2,c
  5846  001F26  EF97  F00F         	goto	u3241
  5847  001F2A  EF99  F00F         	goto	u3240
  5848  001F2E                     u3241:
  5849  001F2E  EFAC  F00F         	goto	l2994
  5850  001F32                     u3240:
  5851  001F32  2812               	incf	___flmul@aexp^0,w,c
  5852  001F34  A4D8               	btfss	status,2,c
  5853  001F36  EF9F  F00F         	goto	u3251
  5854  001F3A  EFA1  F00F         	goto	u3250
  5855  001F3E                     u3251:
  5856  001F3E  EFA9  F00F         	goto	l2992
  5857  001F42                     u3250:
  5858  001F42  0E00               	movlw	0
  5859  001F44  6E05               	movwf	___flmul@a^0,c
  5860  001F46  0E00               	movlw	0
  5861  001F48  6E06               	movwf	(___flmul@a+1)^0,c
  5862  001F4A  0E00               	movlw	0
  5863  001F4C  6E07               	movwf	(___flmul@a+2)^0,c
  5864  001F4E  0E00               	movlw	0
  5865  001F50  6E08               	movwf	(___flmul@a+3)^0,c
  5866  001F52                     l2992:
  5867  001F52  8E07               	bsf	(___flmul@a+2)^0,7,c
  5868  001F54  EFB4  F00F         	goto	l706
  5869  001F58                     l2994:
  5870  001F58  0E00               	movlw	0
  5871  001F5A  6E05               	movwf	___flmul@a^0,c
  5872  001F5C  0E00               	movlw	0
  5873  001F5E  6E06               	movwf	(___flmul@a+1)^0,c
  5874  001F60  0E00               	movlw	0
  5875  001F62  6E07               	movwf	(___flmul@a+2)^0,c
  5876  001F64  0E00               	movlw	0
  5877  001F66  6E08               	movwf	(___flmul@a+3)^0,c
  5878  001F68                     l706:
  5879  001F68  5012               	movf	___flmul@aexp^0,w,c
  5880  001F6A  B4D8               	btfsc	status,2,c
  5881  001F6C  EFBA  F00F         	goto	u3261
  5882  001F70  EFBC  F00F         	goto	u3260
  5883  001F74                     u3261:
  5884  001F74  EFC4  F00F         	goto	l2998
  5885  001F78                     u3260:
  5886  001F78  5013               	movf	___flmul@bexp^0,w,c
  5887  001F7A  A4D8               	btfss	status,2,c
  5888  001F7C  EFC2  F00F         	goto	u3271
  5889  001F80  EFC4  F00F         	goto	u3270
  5890  001F84                     u3271:
  5891  001F84  EFCE  F00F         	goto	l3002
  5892  001F88                     u3270:
  5893  001F88                     l2998:
  5894  001F88  0E00               	movlw	0
  5895  001F8A  6E01               	movwf	?___flmul^0,c
  5896  001F8C  0E00               	movlw	0
  5897  001F8E  6E02               	movwf	(?___flmul+1)^0,c
  5898  001F90  0E00               	movlw	0
  5899  001F92  6E03               	movwf	(?___flmul+2)^0,c
  5900  001F94  0E00               	movlw	0
  5901  001F96  6E04               	movwf	(?___flmul+3)^0,c
  5902  001F98  EF66  F011         	goto	l710
  5903  001F9C                     l3002:
  5904  001F9C  5007               	movf	(___flmul@a+2)^0,w,c
  5905  001F9E  0201               	mulwf	___flmul@b^0,c
  5906  001FA0  CFF3 F018          	movff	prodl,___flmul@temp
  5907  001FA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5908  001FA8  5018               	movf	___flmul@temp^0,w,c
  5909  001FAA  6E0E               	movwf	___flmul@grs^0,c
  5910  001FAC  6A0F               	clrf	(___flmul@grs+1)^0,c
  5911  001FAE  6A10               	clrf	(___flmul@grs+2)^0,c
  5912  001FB0  6A11               	clrf	(___flmul@grs+3)^0,c
  5913  001FB2  5019               	movf	(___flmul@temp+1)^0,w,c
  5914  001FB4  6E14               	movwf	___flmul@prod^0,c
  5915  001FB6  6A15               	clrf	(___flmul@prod+1)^0,c
  5916  001FB8  6A16               	clrf	(___flmul@prod+2)^0,c
  5917  001FBA  6A17               	clrf	(___flmul@prod+3)^0,c
  5918  001FBC  5006               	movf	(___flmul@a+1)^0,w,c
  5919  001FBE  0202               	mulwf	(___flmul@b+1)^0,c
  5920  001FC0  CFF3 F018          	movff	prodl,___flmul@temp
  5921  001FC4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5922  001FC8  5018               	movf	___flmul@temp^0,w,c
  5923  001FCA  260E               	addwf	___flmul@grs^0,f,c
  5924  001FCC  0E00               	movlw	0
  5925  001FCE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5926  001FD0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5927  001FD2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5928  001FD4  5019               	movf	(___flmul@temp+1)^0,w,c
  5929  001FD6  2614               	addwf	___flmul@prod^0,f,c
  5930  001FD8  0E00               	movlw	0
  5931  001FDA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5932  001FDC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5933  001FDE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5934  001FE0  5005               	movf	___flmul@a^0,w,c
  5935  001FE2  0203               	mulwf	(___flmul@b+2)^0,c
  5936  001FE4  CFF3 F018          	movff	prodl,___flmul@temp
  5937  001FE8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5938  001FEC  5018               	movf	___flmul@temp^0,w,c
  5939  001FEE  260E               	addwf	___flmul@grs^0,f,c
  5940  001FF0  0E00               	movlw	0
  5941  001FF2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5942  001FF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5943  001FF6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5944  001FF8  5019               	movf	(___flmul@temp+1)^0,w,c
  5945  001FFA  2614               	addwf	___flmul@prod^0,f,c
  5946  001FFC  0E00               	movlw	0
  5947  001FFE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5948  002000  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5949  002002  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5950  002004  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5951  002008  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5952  00200C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5953  002010  6A0E               	clrf	___flmul@grs^0,c
  5954  002012  5005               	movf	___flmul@a^0,w,c
  5955  002014  0202               	mulwf	(___flmul@b+1)^0,c
  5956  002016  CFF3 F018          	movff	prodl,___flmul@temp
  5957  00201A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5958  00201E  5018               	movf	___flmul@temp^0,w,c
  5959  002020  260E               	addwf	___flmul@grs^0,f,c
  5960  002022  5019               	movf	(___flmul@temp+1)^0,w,c
  5961  002024  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5962  002026  0E00               	movlw	0
  5963  002028  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5964  00202A  0E00               	movlw	0
  5965  00202C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5966  00202E  5006               	movf	(___flmul@a+1)^0,w,c
  5967  002030  0201               	mulwf	___flmul@b^0,c
  5968  002032  CFF3 F018          	movff	prodl,___flmul@temp
  5969  002036  CFF4 F019          	movff	prodh,___flmul@temp+1
  5970  00203A  5018               	movf	___flmul@temp^0,w,c
  5971  00203C  260E               	addwf	___flmul@grs^0,f,c
  5972  00203E  5019               	movf	(___flmul@temp+1)^0,w,c
  5973  002040  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5974  002042  0E00               	movlw	0
  5975  002044  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5976  002046  0E00               	movlw	0
  5977  002048  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5978  00204A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5979  00204E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5980  002052  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5981  002056  6A0E               	clrf	___flmul@grs^0,c
  5982  002058  5005               	movf	___flmul@a^0,w,c
  5983  00205A  0201               	mulwf	___flmul@b^0,c
  5984  00205C  CFF3 F018          	movff	prodl,___flmul@temp
  5985  002060  CFF4 F019          	movff	prodh,___flmul@temp+1
  5986  002064  5018               	movf	___flmul@temp^0,w,c
  5987  002066  260E               	addwf	___flmul@grs^0,f,c
  5988  002068  5019               	movf	(___flmul@temp+1)^0,w,c
  5989  00206A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5990  00206C  0E00               	movlw	0
  5991  00206E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5992  002070  0E00               	movlw	0
  5993  002072  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5994  002074  5007               	movf	(___flmul@a+2)^0,w,c
  5995  002076  0202               	mulwf	(___flmul@b+1)^0,c
  5996  002078  CFF3 F018          	movff	prodl,___flmul@temp
  5997  00207C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5998  002080  5018               	movf	___flmul@temp^0,w,c
  5999  002082  2614               	addwf	___flmul@prod^0,f,c
  6000  002084  5019               	movf	(___flmul@temp+1)^0,w,c
  6001  002086  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6002  002088  0E00               	movlw	0
  6003  00208A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6004  00208C  0E00               	movlw	0
  6005  00208E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6006  002090  5006               	movf	(___flmul@a+1)^0,w,c
  6007  002092  0203               	mulwf	(___flmul@b+2)^0,c
  6008  002094  CFF3 F018          	movff	prodl,___flmul@temp
  6009  002098  CFF4 F019          	movff	prodh,___flmul@temp+1
  6010  00209C  5018               	movf	___flmul@temp^0,w,c
  6011  00209E  2614               	addwf	___flmul@prod^0,f,c
  6012  0020A0  5019               	movf	(___flmul@temp+1)^0,w,c
  6013  0020A2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6014  0020A4  0E00               	movlw	0
  6015  0020A6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6016  0020A8  0E00               	movlw	0
  6017  0020AA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6018  0020AC  5007               	movf	(___flmul@a+2)^0,w,c
  6019  0020AE  0203               	mulwf	(___flmul@b+2)^0,c
  6020  0020B0  CFF3 F018          	movff	prodl,___flmul@temp
  6021  0020B4  CFF4 F019          	movff	prodh,___flmul@temp+1
  6022  0020B8  5018               	movf	___flmul@temp^0,w,c
  6023  0020BA  6E09               	movwf	??___flmul^0,c
  6024  0020BC  5019               	movf	(___flmul@temp+1)^0,w,c
  6025  0020BE  6E0A               	movwf	(??___flmul+1)^0,c
  6026  0020C0  6A0B               	clrf	(??___flmul+2)^0,c
  6027  0020C2  6A0C               	clrf	(??___flmul+3)^0,c
  6028  0020C4  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6029  0020C8  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6030  0020CC  C009  F00A         	movff	??___flmul,??___flmul+1
  6031  0020D0  6A09               	clrf	??___flmul^0,c
  6032  0020D2  5009               	movf	??___flmul^0,w,c
  6033  0020D4  2614               	addwf	___flmul@prod^0,f,c
  6034  0020D6  500A               	movf	(??___flmul+1)^0,w,c
  6035  0020D8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6036  0020DA  500B               	movf	(??___flmul+2)^0,w,c
  6037  0020DC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6038  0020DE  500C               	movf	(??___flmul+3)^0,w,c
  6039  0020E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6040  0020E2  C00E  F009         	movff	___flmul@grs,??___flmul
  6041  0020E6  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6042  0020EA  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6043  0020EE  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6044  0020F2  0E19               	movlw	25
  6045  0020F4  EF81  F010         	goto	u3280
  6046  0020F8                     u3285:
  6047  0020F8  90D8               	bcf	status,0,c
  6048  0020FA  320C               	rrcf	(??___flmul+3)^0,f,c
  6049  0020FC  320B               	rrcf	(??___flmul+2)^0,f,c
  6050  0020FE  320A               	rrcf	(??___flmul+1)^0,f,c
  6051  002100  3209               	rrcf	??___flmul^0,f,c
  6052  002102                     u3280:
  6053  002102  2EE8               	decfsz	wreg,f,c
  6054  002104  EF7C  F010         	goto	u3285
  6055  002108  5009               	movf	??___flmul^0,w,c
  6056  00210A  2614               	addwf	___flmul@prod^0,f,c
  6057  00210C  500A               	movf	(??___flmul+1)^0,w,c
  6058  00210E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6059  002110  500B               	movf	(??___flmul+2)^0,w,c
  6060  002112  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6061  002114  500C               	movf	(??___flmul+3)^0,w,c
  6062  002116  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6063  002118  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6064  00211C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6065  002120  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6066  002124  6A0E               	clrf	___flmul@grs^0,c
  6067  002126  5012               	movf	___flmul@aexp^0,w,c
  6068  002128  C013  F009         	movff	___flmul@bexp,??___flmul
  6069  00212C  6A0A               	clrf	(??___flmul+1)^0,c
  6070  00212E  2609               	addwf	??___flmul^0,f,c
  6071  002130  0E00               	movlw	0
  6072  002132  220A               	addwfc	(??___flmul+1)^0,f,c
  6073  002134  0E82               	movlw	130
  6074  002136  2409               	addwf	??___flmul^0,w,c
  6075  002138  6E18               	movwf	___flmul@temp^0,c
  6076  00213A  0EFF               	movlw	255
  6077  00213C  200A               	addwfc	(??___flmul+1)^0,w,c
  6078  00213E  6E19               	movwf	(___flmul@temp+1)^0,c
  6079  002140  EFB7  F010         	goto	l3050
  6080  002144                     l3044:
  6081  002144  90D8               	bcf	status,0,c
  6082  002146  3614               	rlcf	___flmul@prod^0,f,c
  6083  002148  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6084  00214A  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6085  00214C  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6086  00214E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6087  002150  EFAC  F010         	goto	u3291
  6088  002154  EFAE  F010         	goto	u3290
  6089  002158                     u3291:
  6090  002158  EFAF  F010         	goto	l713
  6091  00215C                     u3290:
  6092  00215C  8014               	bsf	___flmul@prod^0,0,c
  6093  00215E                     l713:
  6094  00215E  90D8               	bcf	status,0,c
  6095  002160  360E               	rlcf	___flmul@grs^0,f,c
  6096  002162  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6097  002164  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6098  002166  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6099  002168  0618               	decf	___flmul@temp^0,f,c
  6100  00216A  A0D8               	btfss	status,0,c
  6101  00216C  0619               	decf	(___flmul@temp+1)^0,f,c
  6102  00216E                     l3050:
  6103  00216E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6104  002170  EFBC  F010         	goto	u3301
  6105  002174  EFBE  F010         	goto	u3300
  6106  002178                     u3301:
  6107  002178  EFA2  F010         	goto	l3044
  6108  00217C                     u3300:
  6109  00217C  0E00               	movlw	0
  6110  00217E  6E12               	movwf	___flmul@aexp^0,c
  6111  002180  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6112  002182  EFC5  F010         	goto	u3311
  6113  002186  EFC7  F010         	goto	u3310
  6114  00218A                     u3311:
  6115  00218A  EFEB  F010         	goto	l715
  6116  00218E                     u3310:
  6117  00218E  0EFF               	movlw	255
  6118  002190  140E               	andwf	___flmul@grs^0,w,c
  6119  002192  6E09               	movwf	??___flmul^0,c
  6120  002194  0EFF               	movlw	255
  6121  002196  140F               	andwf	(___flmul@grs+1)^0,w,c
  6122  002198  6E0A               	movwf	(??___flmul+1)^0,c
  6123  00219A  0EFF               	movlw	255
  6124  00219C  1410               	andwf	(___flmul@grs+2)^0,w,c
  6125  00219E  6E0B               	movwf	(??___flmul+2)^0,c
  6126  0021A0  0E7F               	movlw	127
  6127  0021A2  1411               	andwf	(___flmul@grs+3)^0,w,c
  6128  0021A4  6E0C               	movwf	(??___flmul+3)^0,c
  6129  0021A6  5009               	movf	??___flmul^0,w,c
  6130  0021A8  100A               	iorwf	(??___flmul+1)^0,w,c
  6131  0021AA  100B               	iorwf	(??___flmul+2)^0,w,c
  6132  0021AC  100C               	iorwf	(??___flmul+3)^0,w,c
  6133  0021AE  B4D8               	btfsc	status,2,c
  6134  0021B0  EFDC  F010         	goto	u3321
  6135  0021B4  EFDE  F010         	goto	u3320
  6136  0021B8                     u3321:
  6137  0021B8  EFE2  F010         	goto	l716
  6138  0021BC                     u3320:
  6139  0021BC                     l3058:
  6140  0021BC  0E01               	movlw	1
  6141  0021BE  6E12               	movwf	___flmul@aexp^0,c
  6142  0021C0  EFEB  F010         	goto	l715
  6143  0021C4                     l716:
  6144  0021C4  A014               	btfss	___flmul@prod^0,0,c
  6145  0021C6  EFE7  F010         	goto	u3331
  6146  0021CA  EFE9  F010         	goto	u3330
  6147  0021CE                     u3331:
  6148  0021CE  EFEB  F010         	goto	l715
  6149  0021D2                     u3330:
  6150  0021D2  EFDE  F010         	goto	l3058
  6151  0021D6                     l715:
  6152  0021D6  5012               	movf	___flmul@aexp^0,w,c
  6153  0021D8  B4D8               	btfsc	status,2,c
  6154  0021DA  EFF1  F010         	goto	u3341
  6155  0021DE  EFF3  F010         	goto	u3340
  6156  0021E2                     u3341:
  6157  0021E2  EF17  F011         	goto	l3070
  6158  0021E6                     u3340:
  6159  0021E6  0E01               	movlw	1
  6160  0021E8  2614               	addwf	___flmul@prod^0,f,c
  6161  0021EA  0E00               	movlw	0
  6162  0021EC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6163  0021EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6164  0021F0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6165  0021F2  A017               	btfss	(___flmul@prod+3)^0,0,c
  6166  0021F4  EFFE  F010         	goto	u3351
  6167  0021F8  EF00  F011         	goto	u3350
  6168  0021FC                     u3351:
  6169  0021FC  EF17  F011         	goto	l3070
  6170  002200                     u3350:
  6171  002200  C014  F009         	movff	___flmul@prod,??___flmul
  6172  002204  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6173  002208  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6174  00220C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6175  002210  340C               	rlcf	(??___flmul+3)^0,w,c
  6176  002212  320C               	rrcf	(??___flmul+3)^0,f,c
  6177  002214  320B               	rrcf	(??___flmul+2)^0,f,c
  6178  002216  320A               	rrcf	(??___flmul+1)^0,f,c
  6179  002218  3209               	rrcf	??___flmul^0,f,c
  6180  00221A  C009  F014         	movff	??___flmul,___flmul@prod
  6181  00221E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6182  002222  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6183  002226  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6184  00222A  4A18               	infsnz	___flmul@temp^0,f,c
  6185  00222C  2A19               	incf	(___flmul@temp+1)^0,f,c
  6186  00222E                     l3070:
  6187  00222E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6188  002230  EF22  F011         	goto	u3361
  6189  002234  5019               	movf	(___flmul@temp+1)^0,w,c
  6190  002236  E108               	bnz	u3360
  6191  002238  2818               	incf	___flmul@temp^0,w,c
  6192  00223A  A0D8               	btfss	status,0,c
  6193  00223C  EF22  F011         	goto	u3361
  6194  002240  EF24  F011         	goto	u3360
  6195  002244                     u3361:
  6196  002244  EF2E  F011         	goto	l3074
  6197  002248                     u3360:
  6198  002248  0E00               	movlw	0
  6199  00224A  6E14               	movwf	___flmul@prod^0,c
  6200  00224C  0E00               	movlw	0
  6201  00224E  6E15               	movwf	(___flmul@prod+1)^0,c
  6202  002250  0E80               	movlw	128
  6203  002252  6E16               	movwf	(___flmul@prod+2)^0,c
  6204  002254  0E7F               	movlw	127
  6205  002256  6E17               	movwf	(___flmul@prod+3)^0,c
  6206  002258  EF5C  F011         	goto	l3086
  6207  00225C                     l3074:
  6208  00225C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6209  00225E  EF3B  F011         	goto	u3370
  6210  002262  5019               	movf	(___flmul@temp+1)^0,w,c
  6211  002264  E106               	bnz	u3371
  6212  002266  0418               	decf	___flmul@temp^0,w,c
  6213  002268  B0D8               	btfsc	status,0,c
  6214  00226A  EF39  F011         	goto	u3371
  6215  00226E  EF3B  F011         	goto	u3370
  6216  002272                     u3371:
  6217  002272  EF47  F011         	goto	l723
  6218  002276                     u3370:
  6219  002276  0E00               	movlw	0
  6220  002278  6E14               	movwf	___flmul@prod^0,c
  6221  00227A  0E00               	movlw	0
  6222  00227C  6E15               	movwf	(___flmul@prod+1)^0,c
  6223  00227E  0E00               	movlw	0
  6224  002280  6E16               	movwf	(___flmul@prod+2)^0,c
  6225  002282  0E00               	movlw	0
  6226  002284  6E17               	movwf	(___flmul@prod+3)^0,c
  6227  002286  0E00               	movlw	0
  6228  002288  6E0D               	movwf	___flmul@sign^0,c
  6229  00228A  EF5C  F011         	goto	l3086
  6230  00228E                     l723:
  6231  00228E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6232  002292  0EFF               	movlw	255
  6233  002294  1614               	andwf	___flmul@prod^0,f,c
  6234  002296  0EFF               	movlw	255
  6235  002298  1615               	andwf	(___flmul@prod+1)^0,f,c
  6236  00229A  0E7F               	movlw	127
  6237  00229C  1616               	andwf	(___flmul@prod+2)^0,f,c
  6238  00229E  0E00               	movlw	0
  6239  0022A0  1617               	andwf	(___flmul@prod+3)^0,f,c
  6240  0022A2  A013               	btfss	___flmul@bexp^0,0,c
  6241  0022A4  EF56  F011         	goto	u3381
  6242  0022A8  EF58  F011         	goto	u3380
  6243  0022AC                     u3381:
  6244  0022AC  EF59  F011         	goto	l3084
  6245  0022B0                     u3380:
  6246  0022B0  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6247  0022B2                     l3084:
  6248  0022B2  90D8               	bcf	status,0,c
  6249  0022B4  3013               	rrcf	___flmul@bexp^0,w,c
  6250  0022B6  6E17               	movwf	(___flmul@prod+3)^0,c
  6251  0022B8                     l3086:
  6252  0022B8  500D               	movf	___flmul@sign^0,w,c
  6253  0022BA  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6254  0022BC  C014  F001         	movff	___flmul@prod,?___flmul
  6255  0022C0  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6256  0022C4  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6257  0022C8  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6258  0022CC                     l710:
  6259  0022CC  0012               	return		;funcret
  6260  0022CE                     __end_of___flmul:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function ___flge *****************
  6264 ;; Defined at:
  6265 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  ff1             4   25[COMRAM] unsigned char 
  6268 ;;  ff2             4   29[COMRAM] unsigned char 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         8       0       0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6282 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6283 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6284 ;;Total ram usage:       12 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_efgtoa
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text21
  6294  002CC4                     __ptext21:
  6295                           	callstack 0
  6296  002CC4                     ___flge:
  6297                           	callstack 26
  6298  002CC4  0E00               	movlw	0
  6299  002CC6  141A               	andwf	___flge@ff1^0,w,c
  6300  002CC8  6E22               	movwf	??___flge^0,c
  6301  002CCA  0E00               	movlw	0
  6302  002CCC  141B               	andwf	(___flge@ff1+1)^0,w,c
  6303  002CCE  6E23               	movwf	(??___flge+1)^0,c
  6304  002CD0  0E80               	movlw	128
  6305  002CD2  141C               	andwf	(___flge@ff1+2)^0,w,c
  6306  002CD4  6E24               	movwf	(??___flge+2)^0,c
  6307  002CD6  0E7F               	movlw	127
  6308  002CD8  141D               	andwf	(___flge@ff1+3)^0,w,c
  6309  002CDA  6E25               	movwf	(??___flge+3)^0,c
  6310  002CDC  5022               	movf	??___flge^0,w,c
  6311  002CDE  1023               	iorwf	(??___flge+1)^0,w,c
  6312  002CE0  1024               	iorwf	(??___flge+2)^0,w,c
  6313  002CE2  1025               	iorwf	(??___flge+3)^0,w,c
  6314  002CE4  A4D8               	btfss	status,2,c
  6315  002CE6  EF77  F016         	goto	u3541
  6316  002CEA  EF79  F016         	goto	u3540
  6317  002CEE                     u3541:
  6318  002CEE  EF81  F016         	goto	l3198
  6319  002CF2                     u3540:
  6320  002CF2  0E00               	movlw	0
  6321  002CF4  6E1A               	movwf	___flge@ff1^0,c
  6322  002CF6  0E00               	movlw	0
  6323  002CF8  6E1B               	movwf	(___flge@ff1+1)^0,c
  6324  002CFA  0E00               	movlw	0
  6325  002CFC  6E1C               	movwf	(___flge@ff1+2)^0,c
  6326  002CFE  0E00               	movlw	0
  6327  002D00  6E1D               	movwf	(___flge@ff1+3)^0,c
  6328  002D02                     l3198:
  6329  002D02  0E00               	movlw	0
  6330  002D04  141E               	andwf	___flge@ff2^0,w,c
  6331  002D06  6E22               	movwf	??___flge^0,c
  6332  002D08  0E00               	movlw	0
  6333  002D0A  141F               	andwf	(___flge@ff2+1)^0,w,c
  6334  002D0C  6E23               	movwf	(??___flge+1)^0,c
  6335  002D0E  0E80               	movlw	128
  6336  002D10  1420               	andwf	(___flge@ff2+2)^0,w,c
  6337  002D12  6E24               	movwf	(??___flge+2)^0,c
  6338  002D14  0E7F               	movlw	127
  6339  002D16  1421               	andwf	(___flge@ff2+3)^0,w,c
  6340  002D18  6E25               	movwf	(??___flge+3)^0,c
  6341  002D1A  5022               	movf	??___flge^0,w,c
  6342  002D1C  1023               	iorwf	(??___flge+1)^0,w,c
  6343  002D1E  1024               	iorwf	(??___flge+2)^0,w,c
  6344  002D20  1025               	iorwf	(??___flge+3)^0,w,c
  6345  002D22  A4D8               	btfss	status,2,c
  6346  002D24  EF96  F016         	goto	u3551
  6347  002D28  EF98  F016         	goto	u3550
  6348  002D2C                     u3551:
  6349  002D2C  EFA0  F016         	goto	l3202
  6350  002D30                     u3550:
  6351  002D30  0E00               	movlw	0
  6352  002D32  6E1E               	movwf	___flge@ff2^0,c
  6353  002D34  0E00               	movlw	0
  6354  002D36  6E1F               	movwf	(___flge@ff2+1)^0,c
  6355  002D38  0E00               	movlw	0
  6356  002D3A  6E20               	movwf	(___flge@ff2+2)^0,c
  6357  002D3C  0E00               	movlw	0
  6358  002D3E  6E21               	movwf	(___flge@ff2+3)^0,c
  6359  002D40                     l3202:
  6360  002D40  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6361  002D42  EFA5  F016         	goto	u3561
  6362  002D46  EFA7  F016         	goto	u3560
  6363  002D4A                     u3561:
  6364  002D4A  EFB0  F016         	goto	l3206
  6365  002D4E                     u3560:
  6366  002D4E  6C1A               	negf	___flge@ff1^0,c
  6367  002D50  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6368  002D52  B0D8               	btfsc	status,0,c
  6369  002D54  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6370  002D56  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6371  002D58  B0D8               	btfsc	status,0,c
  6372  002D5A  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6373  002D5C  0E80               	movlw	128
  6374  002D5E  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6375  002D60                     l3206:
  6376  002D60  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6377  002D62  EFB5  F016         	goto	u3571
  6378  002D66  EFB7  F016         	goto	u3570
  6379  002D6A                     u3571:
  6380  002D6A  EFC0  F016         	goto	l357
  6381  002D6E                     u3570:
  6382  002D6E  6C1E               	negf	___flge@ff2^0,c
  6383  002D70  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6384  002D72  B0D8               	btfsc	status,0,c
  6385  002D74  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6386  002D76  1E20               	comf	(___flge@ff2+2)^0,f,c
  6387  002D78  B0D8               	btfsc	status,0,c
  6388  002D7A  2A20               	incf	(___flge@ff2+2)^0,f,c
  6389  002D7C  0E80               	movlw	128
  6390  002D7E  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6391  002D80                     l357:
  6392  002D80  0E00               	movlw	0
  6393  002D82  1A1A               	xorwf	___flge@ff1^0,f,c
  6394  002D84  0E00               	movlw	0
  6395  002D86  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6396  002D88  0E00               	movlw	0
  6397  002D8A  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6398  002D8C  0E80               	movlw	128
  6399  002D8E  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6400  002D90  0E00               	movlw	0
  6401  002D92  1A1E               	xorwf	___flge@ff2^0,f,c
  6402  002D94  0E00               	movlw	0
  6403  002D96  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6404  002D98  0E00               	movlw	0
  6405  002D9A  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6406  002D9C  0E80               	movlw	128
  6407  002D9E  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6408  002DA0  501E               	movf	___flge@ff2^0,w,c
  6409  002DA2  5C1A               	subwf	___flge@ff1^0,w,c
  6410  002DA4  501F               	movf	(___flge@ff2+1)^0,w,c
  6411  002DA6  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6412  002DA8  5020               	movf	(___flge@ff2+2)^0,w,c
  6413  002DAA  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6414  002DAC  5021               	movf	(___flge@ff2+3)^0,w,c
  6415  002DAE  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6416  002DB0  B0D8               	btfsc	status,0,c
  6417  002DB2  EFDD  F016         	goto	u3581
  6418  002DB6  EFDF  F016         	goto	u3580
  6419  002DBA                     u3581:
  6420  002DBA  EFE2  F016         	goto	l3212
  6421  002DBE                     u3580:
  6422  002DBE  90D8               	bcf	status,0,c
  6423  002DC0  EFE3  F016         	goto	l362
  6424  002DC4                     l3212:
  6425  002DC4  80D8               	bsf	status,0,c
  6426  002DC6                     l362:
  6427  002DC6  0012               	return		;funcret
  6428  002DC8                     __end_of___flge:
  6429                           	callstack 0
  6430                           
  6431 ;; *************** function ___fleq *****************
  6432 ;; Defined at:
  6433 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  ff1             4    0[COMRAM] unsigned char 
  6436 ;;  ff2             4    4[COMRAM] unsigned char 
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;		None               void
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6448 ;;      Params:         8       0       0       0       0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6450 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6451 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6452 ;;Total ram usage:       12 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_efgtoa
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text22
  6462  00329C                     __ptext22:
  6463                           	callstack 0
  6464  00329C                     ___fleq:
  6465                           	callstack 26
  6466  00329C  0E00               	movlw	0
  6467  00329E  1401               	andwf	___fleq@ff1^0,w,c
  6468  0032A0  6E09               	movwf	??___fleq^0,c
  6469  0032A2  0E00               	movlw	0
  6470  0032A4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6471  0032A6  6E0A               	movwf	(??___fleq+1)^0,c
  6472  0032A8  0E80               	movlw	128
  6473  0032AA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6474  0032AC  6E0B               	movwf	(??___fleq+2)^0,c
  6475  0032AE  0E7F               	movlw	127
  6476  0032B0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6477  0032B2  6E0C               	movwf	(??___fleq+3)^0,c
  6478  0032B4  5009               	movf	??___fleq^0,w,c
  6479  0032B6  100A               	iorwf	(??___fleq+1)^0,w,c
  6480  0032B8  100B               	iorwf	(??___fleq+2)^0,w,c
  6481  0032BA  100C               	iorwf	(??___fleq+3)^0,w,c
  6482  0032BC  A4D8               	btfss	status,2,c
  6483  0032BE  EF63  F019         	goto	u3511
  6484  0032C2  EF65  F019         	goto	u3510
  6485  0032C6                     u3511:
  6486  0032C6  EF6D  F019         	goto	l3182
  6487  0032CA                     u3510:
  6488  0032CA  0E00               	movlw	0
  6489  0032CC  6E01               	movwf	___fleq@ff1^0,c
  6490  0032CE  0E00               	movlw	0
  6491  0032D0  6E02               	movwf	(___fleq@ff1+1)^0,c
  6492  0032D2  0E00               	movlw	0
  6493  0032D4  6E03               	movwf	(___fleq@ff1+2)^0,c
  6494  0032D6  0E00               	movlw	0
  6495  0032D8  6E04               	movwf	(___fleq@ff1+3)^0,c
  6496  0032DA                     l3182:
  6497  0032DA  0E00               	movlw	0
  6498  0032DC  1405               	andwf	___fleq@ff2^0,w,c
  6499  0032DE  6E09               	movwf	??___fleq^0,c
  6500  0032E0  0E00               	movlw	0
  6501  0032E2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6502  0032E4  6E0A               	movwf	(??___fleq+1)^0,c
  6503  0032E6  0E80               	movlw	128
  6504  0032E8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6505  0032EA  6E0B               	movwf	(??___fleq+2)^0,c
  6506  0032EC  0E7F               	movlw	127
  6507  0032EE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6508  0032F0  6E0C               	movwf	(??___fleq+3)^0,c
  6509  0032F2  5009               	movf	??___fleq^0,w,c
  6510  0032F4  100A               	iorwf	(??___fleq+1)^0,w,c
  6511  0032F6  100B               	iorwf	(??___fleq+2)^0,w,c
  6512  0032F8  100C               	iorwf	(??___fleq+3)^0,w,c
  6513  0032FA  A4D8               	btfss	status,2,c
  6514  0032FC  EF82  F019         	goto	u3521
  6515  003300  EF84  F019         	goto	u3520
  6516  003304                     u3521:
  6517  003304  EF8C  F019         	goto	l3186
  6518  003308                     u3520:
  6519  003308  0E00               	movlw	0
  6520  00330A  6E05               	movwf	___fleq@ff2^0,c
  6521  00330C  0E00               	movlw	0
  6522  00330E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6523  003310  0E00               	movlw	0
  6524  003312  6E07               	movwf	(___fleq@ff2+2)^0,c
  6525  003314  0E00               	movlw	0
  6526  003316  6E08               	movwf	(___fleq@ff2+3)^0,c
  6527  003318                     l3186:
  6528  003318  5005               	movf	___fleq@ff2^0,w,c
  6529  00331A  1801               	xorwf	___fleq@ff1^0,w,c
  6530  00331C  E10F               	bnz	u3530
  6531  00331E  5006               	movf	(___fleq@ff2+1)^0,w,c
  6532  003320  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6533  003322  E10C               	bnz	u3530
  6534  003324  5007               	movf	(___fleq@ff2+2)^0,w,c
  6535  003326  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6536  003328  E109               	bnz	u3530
  6537  00332A  5008               	movf	(___fleq@ff2+3)^0,w,c
  6538  00332C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6539  00332E  B4D8               	btfsc	status,2,c
  6540  003330  EF9C  F019         	goto	u3531
  6541  003334  EF9E  F019         	goto	u3530
  6542  003338                     u3531:
  6543  003338  EFA1  F019         	goto	l3190
  6544  00333C                     u3530:
  6545  00333C  90D8               	bcf	status,0,c
  6546  00333E  EFA2  F019         	goto	l351
  6547  003342                     l3190:
  6548  003342  80D8               	bsf	status,0,c
  6549  003344                     l351:
  6550  003344  0012               	return		;funcret
  6551  003346                     __end_of___fleq:
  6552                           	callstack 0
  6553                           
  6554 ;; *************** function ___awmod *****************
  6555 ;; Defined at:
  6556 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  dividend        2    0[COMRAM] int 
  6559 ;;  divisor         2    2[COMRAM] int 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  sign            1    5[COMRAM] unsigned char 
  6562 ;;  counter         1    4[COMRAM] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    0[COMRAM] int 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6572 ;;      Params:         4       0       0       0       0       0       0       0       0
  6573 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6575 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6576 ;;Total ram usage:        6 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_efgtoa
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text23
  6586  0031EC                     __ptext23:
  6587                           	callstack 0
  6588  0031EC                     ___awmod:
  6589                           	callstack 26
  6590  0031EC  0E00               	movlw	0
  6591  0031EE  6E06               	movwf	___awmod@sign^0,c
  6592  0031F0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6593  0031F2  EFFF  F018         	goto	u3450
  6594  0031F6  EFFD  F018         	goto	u3451
  6595  0031FA                     u3451:
  6596  0031FA  EF05  F019         	goto	l3150
  6597  0031FE                     u3450:
  6598  0031FE  6C01               	negf	___awmod@dividend^0,c
  6599  003200  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6600  003202  B0D8               	btfsc	status,0,c
  6601  003204  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6602  003206  0E01               	movlw	1
  6603  003208  6E06               	movwf	___awmod@sign^0,c
  6604  00320A                     l3150:
  6605  00320A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6606  00320C  EF0C  F019         	goto	u3460
  6607  003210  EF0A  F019         	goto	u3461
  6608  003214                     u3461:
  6609  003214  EF10  F019         	goto	l3154
  6610  003218                     u3460:
  6611  003218  6C03               	negf	___awmod@divisor^0,c
  6612  00321A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6613  00321C  B0D8               	btfsc	status,0,c
  6614  00321E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6615  003220                     l3154:
  6616  003220  5003               	movf	___awmod@divisor^0,w,c
  6617  003222  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6618  003224  B4D8               	btfsc	status,2,c
  6619  003226  EF17  F019         	goto	u3471
  6620  00322A  EF19  F019         	goto	u3470
  6621  00322E                     u3471:
  6622  00322E  EF3D  F019         	goto	l3170
  6623  003232                     u3470:
  6624  003232  0E01               	movlw	1
  6625  003234  6E05               	movwf	___awmod@counter^0,c
  6626  003236  EF21  F019         	goto	l3160
  6627  00323A                     l3158:
  6628  00323A  90D8               	bcf	status,0,c
  6629  00323C  3603               	rlcf	___awmod@divisor^0,f,c
  6630  00323E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6631  003240  2A05               	incf	___awmod@counter^0,f,c
  6632  003242                     l3160:
  6633  003242  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6634  003244  EF26  F019         	goto	u3481
  6635  003248  EF28  F019         	goto	u3480
  6636  00324C                     u3481:
  6637  00324C  EF1D  F019         	goto	l3158
  6638  003250                     u3480:
  6639  003250                     l3162:
  6640  003250  5003               	movf	___awmod@divisor^0,w,c
  6641  003252  5C01               	subwf	___awmod@dividend^0,w,c
  6642  003254  5004               	movf	(___awmod@divisor+1)^0,w,c
  6643  003256  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6644  003258  A0D8               	btfss	status,0,c
  6645  00325A  EF31  F019         	goto	u3491
  6646  00325E  EF33  F019         	goto	u3490
  6647  003262                     u3491:
  6648  003262  EF37  F019         	goto	l3166
  6649  003266                     u3490:
  6650  003266  5003               	movf	___awmod@divisor^0,w,c
  6651  003268  5E01               	subwf	___awmod@dividend^0,f,c
  6652  00326A  5004               	movf	(___awmod@divisor+1)^0,w,c
  6653  00326C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6654  00326E                     l3166:
  6655  00326E  90D8               	bcf	status,0,c
  6656  003270  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6657  003272  3203               	rrcf	___awmod@divisor^0,f,c
  6658  003274  2E05               	decfsz	___awmod@counter^0,f,c
  6659  003276  EF28  F019         	goto	l3162
  6660  00327A                     l3170:
  6661  00327A  5006               	movf	___awmod@sign^0,w,c
  6662  00327C  B4D8               	btfsc	status,2,c
  6663  00327E  EF43  F019         	goto	u3501
  6664  003282  EF45  F019         	goto	u3500
  6665  003286                     u3501:
  6666  003286  EF49  F019         	goto	l3174
  6667  00328A                     u3500:
  6668  00328A  6C01               	negf	___awmod@dividend^0,c
  6669  00328C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6670  00328E  B0D8               	btfsc	status,0,c
  6671  003290  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6672  003292                     l3174:
  6673  003292  C001  F001         	movff	___awmod@dividend,?___awmod
  6674  003296  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6675  00329A  0012               	return		;funcret
  6676  00329C                     __end_of___awmod:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function ___awdiv *****************
  6680 ;; Defined at:
  6681 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  dividend        2    0[COMRAM] int 
  6684 ;;  divisor         2    2[COMRAM] int 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  quotient        2    6[COMRAM] int 
  6687 ;;  sign            1    5[COMRAM] unsigned char 
  6688 ;;  counter         1    4[COMRAM] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2    0[COMRAM] int 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         4       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        8 bytes
  6703 ;; Hardware stack levels used:    1
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_efgtoa
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text24
  6712  003066                     __ptext24:
  6713                           	callstack 0
  6714  003066                     ___awdiv:
  6715                           	callstack 26
  6716  003066  0E00               	movlw	0
  6717  003068  6E06               	movwf	___awdiv@sign^0,c
  6718  00306A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6719  00306C  EF3C  F018         	goto	u3390
  6720  003070  EF3A  F018         	goto	u3391
  6721  003074                     u3391:
  6722  003074  EF42  F018         	goto	l3106
  6723  003078                     u3390:
  6724  003078  6C03               	negf	___awdiv@divisor^0,c
  6725  00307A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6726  00307C  B0D8               	btfsc	status,0,c
  6727  00307E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6728  003080  0E01               	movlw	1
  6729  003082  6E06               	movwf	___awdiv@sign^0,c
  6730  003084                     l3106:
  6731  003084  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6732  003086  EF49  F018         	goto	u3400
  6733  00308A  EF47  F018         	goto	u3401
  6734  00308E                     u3401:
  6735  00308E  EF4F  F018         	goto	l3112
  6736  003092                     u3400:
  6737  003092  6C01               	negf	___awdiv@dividend^0,c
  6738  003094  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6739  003096  B0D8               	btfsc	status,0,c
  6740  003098  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6741  00309A  0E01               	movlw	1
  6742  00309C  1A06               	xorwf	___awdiv@sign^0,f,c
  6743  00309E                     l3112:
  6744  00309E  0E00               	movlw	0
  6745  0030A0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6746  0030A2  0E00               	movlw	0
  6747  0030A4  6E07               	movwf	___awdiv@quotient^0,c
  6748  0030A6  5003               	movf	___awdiv@divisor^0,w,c
  6749  0030A8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6750  0030AA  B4D8               	btfsc	status,2,c
  6751  0030AC  EF5A  F018         	goto	u3411
  6752  0030B0  EF5C  F018         	goto	u3410
  6753  0030B4                     u3411:
  6754  0030B4  EF84  F018         	goto	l3134
  6755  0030B8                     u3410:
  6756  0030B8  0E01               	movlw	1
  6757  0030BA  6E05               	movwf	___awdiv@counter^0,c
  6758  0030BC  EF64  F018         	goto	l3120
  6759  0030C0                     l3118:
  6760  0030C0  90D8               	bcf	status,0,c
  6761  0030C2  3603               	rlcf	___awdiv@divisor^0,f,c
  6762  0030C4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6763  0030C6  2A05               	incf	___awdiv@counter^0,f,c
  6764  0030C8                     l3120:
  6765  0030C8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6766  0030CA  EF69  F018         	goto	u3421
  6767  0030CE  EF6B  F018         	goto	u3420
  6768  0030D2                     u3421:
  6769  0030D2  EF60  F018         	goto	l3118
  6770  0030D6                     u3420:
  6771  0030D6                     l3122:
  6772  0030D6  90D8               	bcf	status,0,c
  6773  0030D8  3607               	rlcf	___awdiv@quotient^0,f,c
  6774  0030DA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6775  0030DC  5003               	movf	___awdiv@divisor^0,w,c
  6776  0030DE  5C01               	subwf	___awdiv@dividend^0,w,c
  6777  0030E0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6778  0030E2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6779  0030E4  A0D8               	btfss	status,0,c
  6780  0030E6  EF77  F018         	goto	u3431
  6781  0030EA  EF79  F018         	goto	u3430
  6782  0030EE                     u3431:
  6783  0030EE  EF7E  F018         	goto	l3130
  6784  0030F2                     u3430:
  6785  0030F2  5003               	movf	___awdiv@divisor^0,w,c
  6786  0030F4  5E01               	subwf	___awdiv@dividend^0,f,c
  6787  0030F6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6788  0030F8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6789  0030FA  8007               	bsf	___awdiv@quotient^0,0,c
  6790  0030FC                     l3130:
  6791  0030FC  90D8               	bcf	status,0,c
  6792  0030FE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6793  003100  3203               	rrcf	___awdiv@divisor^0,f,c
  6794  003102  2E05               	decfsz	___awdiv@counter^0,f,c
  6795  003104  EF6B  F018         	goto	l3122
  6796  003108                     l3134:
  6797  003108  5006               	movf	___awdiv@sign^0,w,c
  6798  00310A  B4D8               	btfsc	status,2,c
  6799  00310C  EF8A  F018         	goto	u3441
  6800  003110  EF8C  F018         	goto	u3440
  6801  003114                     u3441:
  6802  003114  EF90  F018         	goto	l3138
  6803  003118                     u3440:
  6804  003118  6C07               	negf	___awdiv@quotient^0,c
  6805  00311A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6806  00311C  B0D8               	btfsc	status,0,c
  6807  00311E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6808  003120                     l3138:
  6809  003120  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6810  003124  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6811  003128  0012               	return		;funcret
  6812  00312A                     __end_of___awdiv:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _atoi *****************
  6816 ;; Defined at:
  6817 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6820 ;;		 -> STR_2(6), 
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  n               2   20[COMRAM] int 
  6823 ;;  neg             2   13[COMRAM] int 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  2    7[COMRAM] int 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6833 ;;      Params:         2       0       0       0       0       0       0       0       0
  6834 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6835 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6836 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6837 ;;Total ram usage:       15 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    1
  6840 ;; This function calls:
  6841 ;;		___wmul
  6842 ;;		_isdigit
  6843 ;;		_isspace
  6844 ;; This function is called by:
  6845 ;;		_vfpfcnvrt
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text25
  6850  002A2E                     __ptext25:
  6851                           	callstack 0
  6852  002A2E                     _atoi:
  6853                           	callstack 26
  6854  002A2E  0E00               	movlw	0
  6855  002A30  6E16               	movwf	(atoi@n+1)^0,c
  6856  002A32  0E00               	movlw	0
  6857  002A34  6E15               	movwf	atoi@n^0,c
  6858  002A36  0E00               	movlw	0
  6859  002A38  6E0F               	movwf	(atoi@neg+1)^0,c
  6860  002A3A  0E00               	movlw	0
  6861  002A3C  6E0E               	movwf	atoi@neg^0,c
  6862  002A3E  EF23  F015         	goto	l3682
  6863  002A42                     l3680:
  6864  002A42  4A08               	infsnz	atoi@s^0,f,c
  6865  002A44  2A09               	incf	(atoi@s+1)^0,f,c
  6866  002A46                     l3682:
  6867  002A46  0E01               	movlw	1
  6868  002A48  6E14               	movwf	_atoi$871^0,c
  6869  002A4A  C008  FFF6         	movff	atoi@s,tblptrl
  6870  002A4E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6871  002A52                     	if	0	;tblptru may be non-zero
  6872  002A52                     	endif
  6873  002A52                     	if	0	;tblptru may be non-zero
  6874  002A52                     	endif
  6875  002A52  0008               	tblrd		*
  6876  002A54  50F5               	movf	tablat,w,c
  6877  002A56  0A20               	xorlw	32
  6878  002A58  B4D8               	btfsc	status,2,c
  6879  002A5A  EF31  F015         	goto	u4511
  6880  002A5E  EF33  F015         	goto	u4510
  6881  002A62                     u4511:
  6882  002A62  EF50  F015         	goto	l3690
  6883  002A66                     u4510:
  6884  002A66  0EF7               	movlw	247
  6885  002A68  6E0A               	movwf	??_atoi^0,c
  6886  002A6A  0EFF               	movlw	255
  6887  002A6C  6E0B               	movwf	(??_atoi+1)^0,c
  6888  002A6E  C008  FFF6         	movff	atoi@s,tblptrl
  6889  002A72  C009  FFF7         	movff	atoi@s+1,tblptrh
  6890  002A76                     	if	0	;tblptru may be non-zero
  6891  002A76                     	endif
  6892  002A76                     	if	0	;tblptru may be non-zero
  6893  002A76                     	endif
  6894  002A76  0008               	tblrd		*
  6895  002A78  50F5               	movf	tablat,w,c
  6896  002A7A  6E0C               	movwf	(??_atoi+2)^0,c
  6897  002A7C  6A0D               	clrf	(??_atoi+3)^0,c
  6898  002A7E  500A               	movf	??_atoi^0,w,c
  6899  002A80  260C               	addwf	(??_atoi+2)^0,f,c
  6900  002A82  500B               	movf	(??_atoi+1)^0,w,c
  6901  002A84  220D               	addwfc	(??_atoi+3)^0,f,c
  6902  002A86  500D               	movf	(??_atoi+3)^0,w,c
  6903  002A88  E109               	bnz	u4520
  6904  002A8A  0E05               	movlw	5
  6905  002A8C  5C0C               	subwf	(??_atoi+2)^0,w,c
  6906  002A8E  A0D8               	btfss	status,0,c
  6907  002A90  EF4C  F015         	goto	u4521
  6908  002A94  EF4E  F015         	goto	u4520
  6909  002A98                     u4521:
  6910  002A98  EF50  F015         	goto	l3690
  6911  002A9C                     u4520:
  6912  002A9C  0E00               	movlw	0
  6913  002A9E  6E14               	movwf	_atoi$871^0,c
  6914  002AA0                     l3690:
  6915  002AA0  C014  F010         	movff	_atoi$871,_atoi$870
  6916  002AA4  6A11               	clrf	(_atoi$870+1)^0,c
  6917  002AA6  5010               	movf	_atoi$870^0,w,c
  6918  002AA8  1011               	iorwf	(_atoi$870+1)^0,w,c
  6919  002AAA  A4D8               	btfss	status,2,c
  6920  002AAC  EF5A  F015         	goto	u4531
  6921  002AB0  EF5C  F015         	goto	u4530
  6922  002AB4                     u4531:
  6923  002AB4  EF21  F015         	goto	l3680
  6924  002AB8                     u4530:
  6925  002AB8  EF66  F015         	goto	l3700
  6926  002ABC                     l3696:
  6927  002ABC  0E00               	movlw	0
  6928  002ABE  6E0F               	movwf	(atoi@neg+1)^0,c
  6929  002AC0  0E01               	movlw	1
  6930  002AC2  6E0E               	movwf	atoi@neg^0,c
  6931  002AC4                     l3698:
  6932  002AC4  4A08               	infsnz	atoi@s^0,f,c
  6933  002AC6  2A09               	incf	(atoi@s+1)^0,f,c
  6934  002AC8  EF9B  F015         	goto	l3706
  6935  002ACC                     l3700:
  6936  002ACC  C008  FFF6         	movff	atoi@s,tblptrl
  6937  002AD0  C009  FFF7         	movff	atoi@s+1,tblptrh
  6938  002AD4                     	if	0	;tblptru may be non-zero
  6939  002AD4                     	endif
  6940  002AD4                     	if	0	;tblptru may be non-zero
  6941  002AD4                     	endif
  6942  002AD4  0008               	tblrd		*
  6943  002AD6  50F5               	movf	tablat,w,c
  6944  002AD8  6E0A               	movwf	??_atoi^0,c
  6945  002ADA  6A0B               	clrf	(??_atoi+1)^0,c
  6946                           
  6947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6948                           ; Switch size 1, requested type "simple"
  6949                           ; Number of cases is 1, Range of values is 0 to 0
  6950                           ; switch strategies available:
  6951                           ; Name         Instructions Cycles
  6952                           ; simple_byte            4     3 (average)
  6953                           ;	Chosen strategy is simple_byte
  6954  002ADC  500B               	movf	(??_atoi+1)^0,w,c
  6955  002ADE  0A00               	xorlw	0	; case 0
  6956  002AE0  B4D8               	btfsc	status,2,c
  6957  002AE2  EF75  F015         	goto	l4076
  6958  002AE6  EF9B  F015         	goto	l3706
  6959  002AEA                     l4076:
  6960                           
  6961                           ; Switch size 1, requested type "simple"
  6962                           ; Number of cases is 2, Range of values is 43 to 45
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte            7     4 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967  002AEA  500A               	movf	??_atoi^0,w,c
  6968  002AEC  0A2B               	xorlw	43	; case 43
  6969  002AEE  B4D8               	btfsc	status,2,c
  6970  002AF0  EF62  F015         	goto	l3698
  6971  002AF4  0A06               	xorlw	6	; case 45
  6972  002AF6  B4D8               	btfsc	status,2,c
  6973  002AF8  EF5E  F015         	goto	l3696
  6974  002AFC  EF9B  F015         	goto	l3706
  6975  002B00                     l3702:
  6976  002B00  C015  F001         	movff	atoi@n,___wmul@multiplier
  6977  002B04  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6978  002B08  0E00               	movlw	0
  6979  002B0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6980  002B0C  0E0A               	movlw	10
  6981  002B0E  6E03               	movwf	___wmul@multiplicand^0,c
  6982  002B10  ECAB  F01C         	call	___wmul	;wreg free
  6983  002B14  C008  FFF6         	movff	atoi@s,tblptrl
  6984  002B18  C009  FFF7         	movff	atoi@s+1,tblptrh
  6985  002B1C                     	if	0	;tblptru may be non-zero
  6986  002B1C                     	endif
  6987  002B1C                     	if	0	;tblptru may be non-zero
  6988  002B1C                     	endif
  6989  002B1C  0008               	tblrd		*
  6990  002B1E  50F5               	movf	tablat,w,c
  6991  002B20  5E01               	subwf	?___wmul^0,f,c
  6992  002B22  0E00               	movlw	0
  6993  002B24  5A02               	subwfb	(?___wmul+1)^0,f,c
  6994  002B26  0E30               	movlw	48
  6995  002B28  2401               	addwf	?___wmul^0,w,c
  6996  002B2A  6E15               	movwf	atoi@n^0,c
  6997  002B2C  0E00               	movlw	0
  6998  002B2E  2002               	addwfc	(?___wmul+1)^0,w,c
  6999  002B30  6E16               	movwf	(atoi@n+1)^0,c
  7000  002B32  EF62  F015         	goto	l3698
  7001  002B36                     l3706:
  7002  002B36  0ED0               	movlw	208
  7003  002B38  6E0A               	movwf	??_atoi^0,c
  7004  002B3A  0EFF               	movlw	255
  7005  002B3C  6E0B               	movwf	(??_atoi+1)^0,c
  7006  002B3E  C008  FFF6         	movff	atoi@s,tblptrl
  7007  002B42  C009  FFF7         	movff	atoi@s+1,tblptrh
  7008  002B46                     	if	0	;tblptru may be non-zero
  7009  002B46                     	endif
  7010  002B46                     	if	0	;tblptru may be non-zero
  7011  002B46                     	endif
  7012  002B46  0008               	tblrd		*
  7013  002B48  50F5               	movf	tablat,w,c
  7014  002B4A  6E0C               	movwf	(??_atoi+2)^0,c
  7015  002B4C  6A0D               	clrf	(??_atoi+3)^0,c
  7016  002B4E  500A               	movf	??_atoi^0,w,c
  7017  002B50  260C               	addwf	(??_atoi+2)^0,f,c
  7018  002B52  500B               	movf	(??_atoi+1)^0,w,c
  7019  002B54  220D               	addwfc	(??_atoi+3)^0,f,c
  7020  002B56  500D               	movf	(??_atoi+3)^0,w,c
  7021  002B58  E10A               	bnz	u4540
  7022  002B5A  0E0A               	movlw	10
  7023  002B5C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7024  002B5E  A0D8               	btfss	status,0,c
  7025  002B60  EFB4  F015         	goto	u4541
  7026  002B64  EFB7  F015         	goto	u4540
  7027  002B68                     u4541:
  7028  002B68  0E01               	movlw	1
  7029  002B6A  EFB8  F015         	goto	u4550
  7030  002B6E                     u4540:
  7031  002B6E  0E00               	movlw	0
  7032  002B70                     u4550:
  7033  002B70  6E12               	movwf	_atoi$872^0,c
  7034  002B72  6A13               	clrf	(_atoi$872+1)^0,c
  7035  002B74  5012               	movf	_atoi$872^0,w,c
  7036  002B76  1013               	iorwf	(_atoi$872+1)^0,w,c
  7037  002B78  A4D8               	btfss	status,2,c
  7038  002B7A  EFC1  F015         	goto	u4561
  7039  002B7E  EFC3  F015         	goto	u4560
  7040  002B82                     u4561:
  7041  002B82  EF80  F015         	goto	l3702
  7042  002B86                     u4560:
  7043  002B86  500E               	movf	atoi@neg^0,w,c
  7044  002B88  100F               	iorwf	(atoi@neg+1)^0,w,c
  7045  002B8A  A4D8               	btfss	status,2,c
  7046  002B8C  EFCA  F015         	goto	u4571
  7047  002B90  EFCC  F015         	goto	u4570
  7048  002B94                     u4571:
  7049  002B94  EFDA  F015         	goto	l989
  7050  002B98                     u4570:
  7051  002B98  C015  F00A         	movff	atoi@n,??_atoi
  7052  002B9C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7053  002BA0  1E0A               	comf	??_atoi^0,f,c
  7054  002BA2  1E0B               	comf	(??_atoi+1)^0,f,c
  7055  002BA4  4A0A               	infsnz	??_atoi^0,f,c
  7056  002BA6  2A0B               	incf	(??_atoi+1)^0,f,c
  7057  002BA8  C00A  F008         	movff	??_atoi,?_atoi
  7058  002BAC  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7059  002BB0  EFDE  F015         	goto	l992
  7060  002BB4                     l989:
  7061  002BB4  C015  F008         	movff	atoi@n,?_atoi
  7062  002BB8  C016  F009         	movff	atoi@n+1,?_atoi+1
  7063  002BBC                     l992:
  7064  002BBC  0012               	return		;funcret
  7065  002BBE                     __end_of_atoi:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _isspace *****************
  7069 ;; Defined at:
  7070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  c               2    0[COMRAM] int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;		None
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  2    0[COMRAM] int 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7084 ;;      Params:         2       0       0       0       0       0       0       0       0
  7085 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7087 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7088 ;;Total ram usage:        7 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_atoi
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text26
  7098  0036AC                     __ptext26:
  7099                           	callstack 0
  7100  0036AC                     _isspace:
  7101                           	callstack 26
  7102  0036AC  0E01               	movlw	1
  7103  0036AE  6E07               	movwf	_isspace$901^0,c
  7104  0036B0  0E20               	movlw	32
  7105  0036B2  1801               	xorwf	isspace@c^0,w,c
  7106  0036B4  1002               	iorwf	(isspace@c+1)^0,w,c
  7107  0036B6  B4D8               	btfsc	status,2,c
  7108  0036B8  EF60  F01B         	goto	u3951
  7109  0036BC  EF62  F01B         	goto	u3950
  7110  0036C0                     u3951:
  7111  0036C0  EF7B  F01B         	goto	l3366
  7112  0036C4                     u3950:
  7113  0036C4  0EF7               	movlw	247
  7114  0036C6  6E03               	movwf	??_isspace^0,c
  7115  0036C8  0EFF               	movlw	255
  7116  0036CA  6E04               	movwf	(??_isspace+1)^0,c
  7117  0036CC  C001  F005         	movff	isspace@c,??_isspace+2
  7118  0036D0  C002  F006         	movff	isspace@c+1,??_isspace+3
  7119  0036D4  5003               	movf	??_isspace^0,w,c
  7120  0036D6  2605               	addwf	(??_isspace+2)^0,f,c
  7121  0036D8  5004               	movf	(??_isspace+1)^0,w,c
  7122  0036DA  2206               	addwfc	(??_isspace+3)^0,f,c
  7123  0036DC  5006               	movf	(??_isspace+3)^0,w,c
  7124  0036DE  E109               	bnz	u3960
  7125  0036E0  0E05               	movlw	5
  7126  0036E2  5C05               	subwf	(??_isspace+2)^0,w,c
  7127  0036E4  A0D8               	btfss	status,0,c
  7128  0036E6  EF77  F01B         	goto	u3961
  7129  0036EA  EF79  F01B         	goto	u3960
  7130  0036EE                     u3961:
  7131  0036EE  EF7B  F01B         	goto	l3366
  7132  0036F2                     u3960:
  7133  0036F2  0E00               	movlw	0
  7134  0036F4  6E07               	movwf	_isspace$901^0,c
  7135  0036F6                     l3366:
  7136  0036F6  C007  F001         	movff	_isspace$901,?_isspace
  7137  0036FA  6A02               	clrf	(?_isspace+1)^0,c
  7138  0036FC  0012               	return		;funcret
  7139  0036FE                     __end_of_isspace:
  7140                           	callstack 0
  7141                           
  7142 ;; *************** function _isdigit *****************
  7143 ;; Defined at:
  7144 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;  c               2    0[COMRAM] int 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  2    0[COMRAM] int 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7158 ;;      Params:         2       0       0       0       0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7160 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7161 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7162 ;;Total ram usage:        6 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_vfpfcnvrt
  7168 ;;		_atoi
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text27
  7173  00388A                     __ptext27:
  7174                           	callstack 0
  7175  00388A                     _isdigit:
  7176                           	callstack 27
  7177  00388A  0ED0               	movlw	208
  7178  00388C  6E03               	movwf	??_isdigit^0,c
  7179  00388E  0EFF               	movlw	255
  7180  003890  6E04               	movwf	(??_isdigit+1)^0,c
  7181  003892  C001  F005         	movff	isdigit@c,??_isdigit+2
  7182  003896  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7183  00389A  5003               	movf	??_isdigit^0,w,c
  7184  00389C  2605               	addwf	(??_isdigit+2)^0,f,c
  7185  00389E  5004               	movf	(??_isdigit+1)^0,w,c
  7186  0038A0  2206               	addwfc	(??_isdigit+3)^0,f,c
  7187  0038A2  5006               	movf	(??_isdigit+3)^0,w,c
  7188  0038A4  E10A               	bnz	u3930
  7189  0038A6  0E0A               	movlw	10
  7190  0038A8  5C05               	subwf	(??_isdigit+2)^0,w,c
  7191  0038AA  A0D8               	btfss	status,0,c
  7192  0038AC  EF5A  F01C         	goto	u3931
  7193  0038B0  EF5D  F01C         	goto	u3930
  7194  0038B4                     u3931:
  7195  0038B4  0E01               	movlw	1
  7196  0038B6  EF5E  F01C         	goto	u3940
  7197  0038BA                     u3930:
  7198  0038BA  0E00               	movlw	0
  7199  0038BC                     u3940:
  7200  0038BC  6E01               	movwf	?_isdigit^0,c
  7201  0038BE  6A02               	clrf	(?_isdigit+1)^0,c
  7202  0038C0  0012               	return		;funcret
  7203  0038C2                     __end_of_isdigit:
  7204                           	callstack 0
  7205                           
  7206 ;; *************** function ___wmul *****************
  7207 ;; Defined at:
  7208 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  multiplier      2    0[COMRAM] unsigned int 
  7211 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  product         2    4[COMRAM] unsigned int 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  2    0[COMRAM] unsigned int 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0, prodl, prodh
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7223 ;;      Params:         4       0       0       0       0       0       0       0       0
  7224 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7226 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7227 ;;Total ram usage:        6 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_atoi
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text28
  7237  003956                     __ptext28:
  7238                           	callstack 0
  7239  003956                     ___wmul:
  7240                           	callstack 26
  7241  003956  5001               	movf	___wmul@multiplier^0,w,c
  7242  003958  0203               	mulwf	___wmul@multiplicand^0,c
  7243  00395A  CFF3 F005          	movff	prodl,___wmul@product
  7244  00395E  CFF4 F006          	movff	prodh,___wmul@product+1
  7245  003962  5001               	movf	___wmul@multiplier^0,w,c
  7246  003964  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7247  003966  50F3               	movf	243,w,c
  7248  003968  2606               	addwf	(___wmul@product+1)^0,f,c
  7249  00396A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7250  00396C  0203               	mulwf	___wmul@multiplicand^0,c
  7251  00396E  50F3               	movf	243,w,c
  7252  003970  2606               	addwf	(___wmul@product+1)^0,f,c
  7253  003972  C005  F001         	movff	___wmul@product,?___wmul
  7254  003976  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7255  00397A  0012               	return		;funcret
  7256  00397C                     __end_of___wmul:
  7257                           	callstack 0
  7258                           
  7259 ;; *************** function _Ultrasonico_read *****************
  7260 ;; Defined at:
  7261 ;;		line 55 in file "main.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;		None
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  tiempo          4   29[COMRAM] float 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  4   25[COMRAM] float 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2, status,0, cstack
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7275 ;;      Params:         4       0       0       0       0       0       0       0       0
  7276 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7278 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7279 ;;Total ram usage:        8 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    1
  7282 ;; This function calls:
  7283 ;;		___fldiv
  7284 ;;		___xxtofl
  7285 ;; This function is called by:
  7286 ;;		_main
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text29
  7291  0033EC                     __ptext29:
  7292                           	callstack 0
  7293  0033EC                     _Ultrasonico_read:
  7294                           	callstack 29
  7295  0033EC                     
  7296                           ;main.c: 57:     float tiempo;;main.c: 58:     LATC0=1;
  7297  0033EC  808B               	bsf	3979,0,c	;volatile
  7298  0033EE                     
  7299                           ;main.c: 59:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  7300  0033EE  0E06               	movlw	6
  7301  0033F0                     u5007:
  7302  0033F0  2EE8               	decfsz	wreg,f,c
  7303  0033F2  D7FE               	bra	u5007
  7304  0033F4  D000               	nop2	
  7305  0033F6                     
  7306                           ;main.c: 60:     LATC0=0;
  7307  0033F6  908B               	bcf	3979,0,c	;volatile
  7308  0033F8                     l46:
  7309  0033F8  A081               	btfss	129,0,c	;volatile
  7310  0033FA  EF01  F01A         	goto	u4961
  7311  0033FE  EF03  F01A         	goto	u4960
  7312  003402                     u4961:
  7313  003402  EFFC  F019         	goto	l46
  7314  003406                     u4960:
  7315  003406                     
  7316                           ;main.c: 63:     TMR0=0;
  7317  003406  0E00               	movlw	0
  7318  003408  6ED7               	movwf	215,c	;volatile
  7319  00340A  0E00               	movlw	0
  7320  00340C  6ED6               	movwf	214,c	;volatile
  7321  00340E                     
  7322                           ;main.c: 64:     TMR0ON=1;
  7323  00340E  8ED5               	bsf	4053,7,c	;volatile
  7324  003410                     l49:
  7325  003410  A081               	btfss	129,0,c	;volatile
  7326  003412  EF0D  F01A         	goto	u4971
  7327  003416  EF0F  F01A         	goto	u4970
  7328  00341A                     u4971:
  7329  00341A  EF16  F01A         	goto	l53
  7330  00341E                     u4970:
  7331  00341E  A4F2               	btfss	4082,2,c	;volatile
  7332  003420  EF14  F01A         	goto	u4981
  7333  003424  EF16  F01A         	goto	u4980
  7334  003428                     u4981:
  7335  003428  EF08  F01A         	goto	l49
  7336  00342C                     u4980:
  7337  00342C                     l53:
  7338                           
  7339                           ;main.c: 66:     TMR0ON=0;
  7340  00342C  9ED5               	bcf	4053,7,c	;volatile
  7341                           
  7342                           ;main.c: 67:     TMR0IF=0;
  7343  00342E  94F2               	bcf	4082,2,c	;volatile
  7344  003430                     
  7345                           ;main.c: 68:     tiempo=TMR0;
  7346  003430  CFD6 F001          	movff	4054,___xxtofl@val	;volatile
  7347  003434  CFD7 F002          	movff	4055,___xxtofl@val+1	;volatile
  7348  003438  6A03               	clrf	(___xxtofl@val+2)^0,c
  7349  00343A  6A04               	clrf	(___xxtofl@val+3)^0,c
  7350  00343C  0E00               	movlw	0
  7351  00343E  EC3D  F014         	call	___xxtofl
  7352  003442  C001  F01E         	movff	?___xxtofl,Ultrasonico_read@tiempo
  7353  003446  C002  F01F         	movff	?___xxtofl+1,Ultrasonico_read@tiempo+1
  7354  00344A  C003  F020         	movff	?___xxtofl+2,Ultrasonico_read@tiempo+2
  7355  00344E  C004  F021         	movff	?___xxtofl+3,Ultrasonico_read@tiempo+3
  7356                           
  7357                           ;main.c: 70:     return ((float)tiempo/117.00);
  7358  003452  C01E  F001         	movff	Ultrasonico_read@tiempo,___fldiv@b
  7359  003456  C01F  F002         	movff	Ultrasonico_read@tiempo+1,___fldiv@b+1
  7360  00345A  C020  F003         	movff	Ultrasonico_read@tiempo+2,___fldiv@b+2
  7361  00345E  C021  F004         	movff	Ultrasonico_read@tiempo+3,___fldiv@b+3
  7362  003462  0E00               	movlw	0
  7363  003464  6E05               	movwf	___fldiv@a^0,c
  7364  003466  0E00               	movlw	0
  7365  003468  6E06               	movwf	(___fldiv@a+1)^0,c
  7366  00346A  0EEA               	movlw	234
  7367  00346C  6E07               	movwf	(___fldiv@a+2)^0,c
  7368  00346E  0E42               	movlw	66
  7369  003470  6E08               	movwf	(___fldiv@a+3)^0,c
  7370  003472  EC67  F011         	call	___fldiv	;wreg free
  7371  003476  C001  F01A         	movff	?___fldiv,?_Ultrasonico_read
  7372  00347A  C002  F01B         	movff	?___fldiv+1,?_Ultrasonico_read+1
  7373  00347E  C003  F01C         	movff	?___fldiv+2,?_Ultrasonico_read+2
  7374  003482  C004  F01D         	movff	?___fldiv+3,?_Ultrasonico_read+3
  7375  003486  0012               	return		;funcret
  7376  003488                     __end_of_Ultrasonico_read:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function ___xxtofl *****************
  7380 ;; Defined at:
  7381 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  sign            1    wreg     unsigned char 
  7384 ;;  val             4    0[COMRAM] long 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  sign            1    8[COMRAM] unsigned char 
  7387 ;;  arg             4   10[COMRAM] unsigned long 
  7388 ;;  exp             1    9[COMRAM] unsigned char 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  4    0[COMRAM] unsigned char 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         4       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7401 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:       14 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; This function calls:
  7405 ;;		Nothing
  7406 ;; This function is called by:
  7407 ;;		_Ultrasonico_read
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text30
  7412  00287A                     __ptext30:
  7413                           	callstack 0
  7414  00287A                     ___xxtofl:
  7415                           	callstack 29
  7416                           
  7417                           ;incstack = 0
  7418                           ;___xxtofl@sign stored from wreg
  7419  00287A  6E09               	movwf	___xxtofl@sign^0,c
  7420  00287C  5009               	movf	___xxtofl@sign^0,w,c
  7421  00287E  B4D8               	btfsc	status,2,c
  7422  002880  EF44  F014         	goto	u4821
  7423  002884  EF46  F014         	goto	u4820
  7424  002888                     u4821:
  7425  002888  EF68  F014         	goto	l747
  7426  00288C                     u4820:
  7427  00288C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7428  00288E  EF4D  F014         	goto	u4830
  7429  002892  EF4B  F014         	goto	u4831
  7430  002896                     u4831:
  7431  002896  EF68  F014         	goto	l747
  7432  00289A                     u4830:
  7433  00289A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7434  00289E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7435  0028A2  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7436  0028A6  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7437  0028AA  1E05               	comf	??___xxtofl^0,f,c
  7438  0028AC  1E06               	comf	(??___xxtofl+1)^0,f,c
  7439  0028AE  1E07               	comf	(??___xxtofl+2)^0,f,c
  7440  0028B0  1E08               	comf	(??___xxtofl+3)^0,f,c
  7441  0028B2  2A05               	incf	??___xxtofl^0,f,c
  7442  0028B4  0E00               	movlw	0
  7443  0028B6  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7444  0028B8  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7445  0028BA  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7446  0028BC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7447  0028C0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7448  0028C4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7449  0028C8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7450  0028CC  EF70  F014         	goto	l3886
  7451  0028D0                     l747:
  7452  0028D0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7453  0028D4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7454  0028D8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7455  0028DC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7456  0028E0                     l3886:
  7457  0028E0  5001               	movf	___xxtofl@val^0,w,c
  7458  0028E2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7459  0028E4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7460  0028E6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7461  0028E8  A4D8               	btfss	status,2,c
  7462  0028EA  EF79  F014         	goto	u4841
  7463  0028EE  EF7B  F014         	goto	u4840
  7464  0028F2                     u4841:
  7465  0028F2  EF85  F014         	goto	l3892
  7466  0028F6                     u4840:
  7467  0028F6  0E00               	movlw	0
  7468  0028F8  6E01               	movwf	?___xxtofl^0,c
  7469  0028FA  0E00               	movlw	0
  7470  0028FC  6E02               	movwf	(?___xxtofl+1)^0,c
  7471  0028FE  0E00               	movlw	0
  7472  002900  6E03               	movwf	(?___xxtofl+2)^0,c
  7473  002902  0E00               	movlw	0
  7474  002904  6E04               	movwf	(?___xxtofl+3)^0,c
  7475  002906  EF16  F015         	goto	l750
  7476  00290A                     l3892:
  7477  00290A  0E96               	movlw	150
  7478  00290C  6E0A               	movwf	___xxtofl@exp^0,c
  7479  00290E  EF8F  F014         	goto	l3896
  7480  002912                     l3894:
  7481  002912  2A0A               	incf	___xxtofl@exp^0,f,c
  7482  002914  90D8               	bcf	status,0,c
  7483  002916  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7484  002918  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7485  00291A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7486  00291C  320B               	rrcf	___xxtofl@arg^0,f,c
  7487  00291E                     l3896:
  7488  00291E  0E00               	movlw	0
  7489  002920  140B               	andwf	___xxtofl@arg^0,w,c
  7490  002922  6E05               	movwf	??___xxtofl^0,c
  7491  002924  0E00               	movlw	0
  7492  002926  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7493  002928  6E06               	movwf	(??___xxtofl+1)^0,c
  7494  00292A  0E00               	movlw	0
  7495  00292C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7496  00292E  6E07               	movwf	(??___xxtofl+2)^0,c
  7497  002930  0EFE               	movlw	254
  7498  002932  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7499  002934  6E08               	movwf	(??___xxtofl+3)^0,c
  7500  002936  5005               	movf	??___xxtofl^0,w,c
  7501  002938  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7502  00293A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7503  00293C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7504  00293E  A4D8               	btfss	status,2,c
  7505  002940  EFA4  F014         	goto	u4851
  7506  002944  EFA6  F014         	goto	u4850
  7507  002948                     u4851:
  7508  002948  EF89  F014         	goto	l3894
  7509  00294C                     u4850:
  7510  00294C  EFB4  F014         	goto	l754
  7511  002950                     l3898:
  7512  002950  2A0A               	incf	___xxtofl@exp^0,f,c
  7513  002952  0E01               	movlw	1
  7514  002954  260B               	addwf	___xxtofl@arg^0,f,c
  7515  002956  0E00               	movlw	0
  7516  002958  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7517  00295A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7518  00295C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7519  00295E  90D8               	bcf	status,0,c
  7520  002960  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7521  002962  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7522  002964  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7523  002966  320B               	rrcf	___xxtofl@arg^0,f,c
  7524  002968                     l754:
  7525  002968  0E00               	movlw	0
  7526  00296A  140B               	andwf	___xxtofl@arg^0,w,c
  7527  00296C  6E05               	movwf	??___xxtofl^0,c
  7528  00296E  0E00               	movlw	0
  7529  002970  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7530  002972  6E06               	movwf	(??___xxtofl+1)^0,c
  7531  002974  0E00               	movlw	0
  7532  002976  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7533  002978  6E07               	movwf	(??___xxtofl+2)^0,c
  7534  00297A  0EFF               	movlw	255
  7535  00297C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7536  00297E  6E08               	movwf	(??___xxtofl+3)^0,c
  7537  002980  5005               	movf	??___xxtofl^0,w,c
  7538  002982  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7539  002984  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7540  002986  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7541  002988  A4D8               	btfss	status,2,c
  7542  00298A  EFC9  F014         	goto	u4861
  7543  00298E  EFCB  F014         	goto	u4860
  7544  002992                     u4861:
  7545  002992  EFA8  F014         	goto	l3898
  7546  002996                     u4860:
  7547  002996  EFD3  F014         	goto	l3906
  7548  00299A                     l3904:
  7549  00299A  060A               	decf	___xxtofl@exp^0,f,c
  7550  00299C  90D8               	bcf	status,0,c
  7551  00299E  360B               	rlcf	___xxtofl@arg^0,f,c
  7552  0029A0  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7553  0029A2  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7554  0029A4  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7555  0029A6                     l3906:
  7556  0029A6  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7557  0029A8  EFD8  F014         	goto	u4871
  7558  0029AC  EFDA  F014         	goto	u4870
  7559  0029B0                     u4871:
  7560  0029B0  EFE2  F014         	goto	l761
  7561  0029B4                     u4870:
  7562  0029B4  0E02               	movlw	2
  7563  0029B6  600A               	cpfslt	___xxtofl@exp^0,c
  7564  0029B8  EFE0  F014         	goto	u4881
  7565  0029BC  EFE2  F014         	goto	u4880
  7566  0029C0                     u4881:
  7567  0029C0  EFCD  F014         	goto	l3904
  7568  0029C4                     u4880:
  7569  0029C4                     l761:
  7570  0029C4  B00A               	btfsc	___xxtofl@exp^0,0,c
  7571  0029C6  EFE7  F014         	goto	u4891
  7572  0029CA  EFE9  F014         	goto	u4890
  7573  0029CE                     u4891:
  7574  0029CE  EFEA  F014         	goto	l3912
  7575  0029D2                     u4890:
  7576  0029D2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7577  0029D4                     l3912:
  7578  0029D4  90D8               	bcf	status,0,c
  7579  0029D6  320A               	rrcf	___xxtofl@exp^0,f,c
  7580  0029D8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7581  0029DC  6A06               	clrf	(??___xxtofl+1)^0,c
  7582  0029DE  6A07               	clrf	(??___xxtofl+2)^0,c
  7583  0029E0  6A08               	clrf	(??___xxtofl+3)^0,c
  7584  0029E2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7585  0029E6  6A07               	clrf	(??___xxtofl+2)^0,c
  7586  0029E8  6A06               	clrf	(??___xxtofl+1)^0,c
  7587  0029EA  6A05               	clrf	??___xxtofl^0,c
  7588  0029EC  5005               	movf	??___xxtofl^0,w,c
  7589  0029EE  120B               	iorwf	___xxtofl@arg^0,f,c
  7590  0029F0  5006               	movf	(??___xxtofl+1)^0,w,c
  7591  0029F2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7592  0029F4  5007               	movf	(??___xxtofl+2)^0,w,c
  7593  0029F6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7594  0029F8  5008               	movf	(??___xxtofl+3)^0,w,c
  7595  0029FA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7596  0029FC  5009               	movf	___xxtofl@sign^0,w,c
  7597  0029FE  B4D8               	btfsc	status,2,c
  7598  002A00  EF04  F015         	goto	u4901
  7599  002A04  EF06  F015         	goto	u4900
  7600  002A08                     u4901:
  7601  002A08  EF0E  F015         	goto	l3922
  7602  002A0C                     u4900:
  7603  002A0C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7604  002A0E  EF0D  F015         	goto	u4910
  7605  002A12  EF0B  F015         	goto	u4911
  7606  002A16                     u4911:
  7607  002A16  EF0E  F015         	goto	l3922
  7608  002A1A                     u4910:
  7609  002A1A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7610  002A1C                     l3922:
  7611  002A1C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7612  002A20  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7613  002A24  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7614  002A28  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7615  002A2C                     l750:
  7616  002A2C  0012               	return		;funcret
  7617  002A2E                     __end_of___xxtofl:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function ___fldiv *****************
  7621 ;; Defined at:
  7622 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  b               4    0[COMRAM] unsigned char 
  7625 ;;  a               4    4[COMRAM] unsigned char 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  grs             4   19[COMRAM] unsigned long 
  7628 ;;  rem             4   12[COMRAM] unsigned long 
  7629 ;;  new_exp         2   17[COMRAM] short 
  7630 ;;  aexp            1   24[COMRAM] unsigned char 
  7631 ;;  bexp            1   23[COMRAM] unsigned char 
  7632 ;;  sign            1   16[COMRAM] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  4    0[COMRAM] unsigned char 
  7635 ;; Registers used:
  7636 ;;		wreg, status,2, status,0
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7642 ;;      Params:         8       0       0       0       0       0       0       0       0
  7643 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7644 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7645 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7646 ;;Total ram usage:       25 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_Ultrasonico_read
  7652 ;;		_efgtoa
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text31
  7657  0022CE                     __ptext31:
  7658                           	callstack 0
  7659  0022CE                     ___fldiv:
  7660                           	callstack 26
  7661  0022CE  5004               	movf	(___fldiv@b+3)^0,w,c
  7662  0022D0  0B80               	andlw	128
  7663  0022D2  6E11               	movwf	___fldiv@sign^0,c
  7664  0022D4  5004               	movf	(___fldiv@b+3)^0,w,c
  7665  0022D6  2404               	addwf	(___fldiv@b+3)^0,w,c
  7666  0022D8  6E18               	movwf	___fldiv@bexp^0,c
  7667  0022DA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7668  0022DC  EF72  F011         	goto	u2971
  7669  0022E0  EF74  F011         	goto	u2970
  7670  0022E4                     u2971:
  7671  0022E4  EF75  F011         	goto	l2830
  7672  0022E8                     u2970:
  7673  0022E8  8018               	bsf	___fldiv@bexp^0,0,c
  7674  0022EA                     l2830:
  7675  0022EA  5018               	movf	___fldiv@bexp^0,w,c
  7676  0022EC  B4D8               	btfsc	status,2,c
  7677  0022EE  EF7B  F011         	goto	u2981
  7678  0022F2  EF7D  F011         	goto	u2980
  7679  0022F6                     u2981:
  7680  0022F6  EF92  F011         	goto	l2840
  7681  0022FA                     u2980:
  7682  0022FA  2818               	incf	___fldiv@bexp^0,w,c
  7683  0022FC  A4D8               	btfss	status,2,c
  7684  0022FE  EF83  F011         	goto	u2991
  7685  002302  EF85  F011         	goto	u2990
  7686  002306                     u2991:
  7687  002306  EF8D  F011         	goto	l2836
  7688  00230A                     u2990:
  7689  00230A  0E00               	movlw	0
  7690  00230C  6E01               	movwf	___fldiv@b^0,c
  7691  00230E  0E00               	movlw	0
  7692  002310  6E02               	movwf	(___fldiv@b+1)^0,c
  7693  002312  0E00               	movlw	0
  7694  002314  6E03               	movwf	(___fldiv@b+2)^0,c
  7695  002316  0E00               	movlw	0
  7696  002318  6E04               	movwf	(___fldiv@b+3)^0,c
  7697  00231A                     l2836:
  7698  00231A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7699  00231C  0E00               	movlw	0
  7700  00231E  6E04               	movwf	(___fldiv@b+3)^0,c
  7701  002320  EF9A  F011         	goto	l2842
  7702  002324                     l2840:
  7703  002324  0E00               	movlw	0
  7704  002326  6E01               	movwf	___fldiv@b^0,c
  7705  002328  0E00               	movlw	0
  7706  00232A  6E02               	movwf	(___fldiv@b+1)^0,c
  7707  00232C  0E00               	movlw	0
  7708  00232E  6E03               	movwf	(___fldiv@b+2)^0,c
  7709  002330  0E00               	movlw	0
  7710  002332  6E04               	movwf	(___fldiv@b+3)^0,c
  7711  002334                     l2842:
  7712  002334  5008               	movf	(___fldiv@a+3)^0,w,c
  7713  002336  0B80               	andlw	128
  7714  002338  1A11               	xorwf	___fldiv@sign^0,f,c
  7715  00233A  5008               	movf	(___fldiv@a+3)^0,w,c
  7716  00233C  2408               	addwf	(___fldiv@a+3)^0,w,c
  7717  00233E  6E19               	movwf	___fldiv@aexp^0,c
  7718  002340  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7719  002342  EFA5  F011         	goto	u3001
  7720  002346  EFA7  F011         	goto	u3000
  7721  00234A                     u3001:
  7722  00234A  EFA8  F011         	goto	l2850
  7723  00234E                     u3000:
  7724  00234E  8019               	bsf	___fldiv@aexp^0,0,c
  7725  002350                     l2850:
  7726  002350  5019               	movf	___fldiv@aexp^0,w,c
  7727  002352  B4D8               	btfsc	status,2,c
  7728  002354  EFAE  F011         	goto	u3011
  7729  002358  EFB0  F011         	goto	u3010
  7730  00235C                     u3011:
  7731  00235C  EFC5  F011         	goto	l2860
  7732  002360                     u3010:
  7733  002360  2819               	incf	___fldiv@aexp^0,w,c
  7734  002362  A4D8               	btfss	status,2,c
  7735  002364  EFB6  F011         	goto	u3021
  7736  002368  EFB8  F011         	goto	u3020
  7737  00236C                     u3021:
  7738  00236C  EFC0  F011         	goto	l2856
  7739  002370                     u3020:
  7740  002370  0E00               	movlw	0
  7741  002372  6E05               	movwf	___fldiv@a^0,c
  7742  002374  0E00               	movlw	0
  7743  002376  6E06               	movwf	(___fldiv@a+1)^0,c
  7744  002378  0E00               	movlw	0
  7745  00237A  6E07               	movwf	(___fldiv@a+2)^0,c
  7746  00237C  0E00               	movlw	0
  7747  00237E  6E08               	movwf	(___fldiv@a+3)^0,c
  7748  002380                     l2856:
  7749  002380  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7750  002382  0E00               	movlw	0
  7751  002384  6E08               	movwf	(___fldiv@a+3)^0,c
  7752  002386  EFCD  F011         	goto	l2862
  7753  00238A                     l2860:
  7754  00238A  0E00               	movlw	0
  7755  00238C  6E05               	movwf	___fldiv@a^0,c
  7756  00238E  0E00               	movlw	0
  7757  002390  6E06               	movwf	(___fldiv@a+1)^0,c
  7758  002392  0E00               	movlw	0
  7759  002394  6E07               	movwf	(___fldiv@a+2)^0,c
  7760  002396  0E00               	movlw	0
  7761  002398  6E08               	movwf	(___fldiv@a+3)^0,c
  7762  00239A                     l2862:
  7763  00239A  5005               	movf	___fldiv@a^0,w,c
  7764  00239C  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7765  00239E  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7766  0023A0  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7767  0023A2  A4D8               	btfss	status,2,c
  7768  0023A4  EFD6  F011         	goto	u3031
  7769  0023A8  EFD8  F011         	goto	u3030
  7770  0023AC                     u3031:
  7771  0023AC  EFF0  F011         	goto	l2874
  7772  0023B0                     u3030:
  7773  0023B0  0E00               	movlw	0
  7774  0023B2  6E01               	movwf	___fldiv@b^0,c
  7775  0023B4  0E00               	movlw	0
  7776  0023B6  6E02               	movwf	(___fldiv@b+1)^0,c
  7777  0023B8  0E00               	movlw	0
  7778  0023BA  6E03               	movwf	(___fldiv@b+2)^0,c
  7779  0023BC  0E00               	movlw	0
  7780  0023BE  6E04               	movwf	(___fldiv@b+3)^0,c
  7781  0023C0  0E80               	movlw	128
  7782  0023C2  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7783  0023C4  0E7F               	movlw	127
  7784  0023C6  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7785  0023C8                     l2868:
  7786  0023C8  5011               	movf	___fldiv@sign^0,w,c
  7787  0023CA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7788  0023CC  C001  F001         	movff	___fldiv@b,?___fldiv
  7789  0023D0  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7790  0023D4  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7791  0023D8  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7792  0023DC  EF33  F013         	goto	l674
  7793  0023E0                     l2874:
  7794  0023E0  5018               	movf	___fldiv@bexp^0,w,c
  7795  0023E2  A4D8               	btfss	status,2,c
  7796  0023E4  EFF6  F011         	goto	u3041
  7797  0023E8  EFF8  F011         	goto	u3040
  7798  0023EC                     u3041:
  7799  0023EC  EF02  F012         	goto	l2882
  7800  0023F0                     u3040:
  7801  0023F0  0E00               	movlw	0
  7802  0023F2  6E01               	movwf	?___fldiv^0,c
  7803  0023F4  0E00               	movlw	0
  7804  0023F6  6E02               	movwf	(?___fldiv+1)^0,c
  7805  0023F8  0E00               	movlw	0
  7806  0023FA  6E03               	movwf	(?___fldiv+2)^0,c
  7807  0023FC  0E00               	movlw	0
  7808  0023FE  6E04               	movwf	(?___fldiv+3)^0,c
  7809  002400  EF33  F013         	goto	l674
  7810  002404                     l2882:
  7811  002404  5019               	movf	___fldiv@aexp^0,w,c
  7812  002406  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7813  00240A  6A0A               	clrf	(??___fldiv+1)^0,c
  7814  00240C  5E09               	subwf	??___fldiv^0,f,c
  7815  00240E  0E00               	movlw	0
  7816  002410  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7817  002412  0E7F               	movlw	127
  7818  002414  2409               	addwf	??___fldiv^0,w,c
  7819  002416  6E12               	movwf	___fldiv@new_exp^0,c
  7820  002418  0E00               	movlw	0
  7821  00241A  200A               	addwfc	(??___fldiv+1)^0,w,c
  7822  00241C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7823  00241E  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7824  002422  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7825  002426  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7826  00242A  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7827  00242E  0E00               	movlw	0
  7828  002430  6E01               	movwf	___fldiv@b^0,c
  7829  002432  0E00               	movlw	0
  7830  002434  6E02               	movwf	(___fldiv@b+1)^0,c
  7831  002436  0E00               	movlw	0
  7832  002438  6E03               	movwf	(___fldiv@b+2)^0,c
  7833  00243A  0E00               	movlw	0
  7834  00243C  6E04               	movwf	(___fldiv@b+3)^0,c
  7835  00243E  0E00               	movlw	0
  7836  002440  6E14               	movwf	___fldiv@grs^0,c
  7837  002442  0E00               	movlw	0
  7838  002444  6E15               	movwf	(___fldiv@grs+1)^0,c
  7839  002446  0E00               	movlw	0
  7840  002448  6E16               	movwf	(___fldiv@grs+2)^0,c
  7841  00244A  0E00               	movlw	0
  7842  00244C  6E17               	movwf	(___fldiv@grs+3)^0,c
  7843  00244E  0E00               	movlw	0
  7844  002450  6E19               	movwf	___fldiv@aexp^0,c
  7845  002452  EF63  F012         	goto	l676
  7846  002456                     l2892:
  7847  002456  5019               	movf	___fldiv@aexp^0,w,c
  7848  002458  B4D8               	btfsc	status,2,c
  7849  00245A  EF31  F012         	goto	u3051
  7850  00245E  EF33  F012         	goto	u3050
  7851  002462                     u3051:
  7852  002462  EF4A  F012         	goto	l2900
  7853  002466                     u3050:
  7854  002466  90D8               	bcf	status,0,c
  7855  002468  360D               	rlcf	___fldiv@rem^0,f,c
  7856  00246A  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7857  00246C  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7858  00246E  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7859  002470  90D8               	bcf	status,0,c
  7860  002472  3601               	rlcf	___fldiv@b^0,f,c
  7861  002474  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7862  002476  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7863  002478  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7864  00247A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7865  00247C  EF42  F012         	goto	u3061
  7866  002480  EF44  F012         	goto	u3060
  7867  002484                     u3061:
  7868  002484  EF45  F012         	goto	l679
  7869  002488                     u3060:
  7870  002488  8001               	bsf	___fldiv@b^0,0,c
  7871  00248A                     l679:
  7872  00248A  90D8               	bcf	status,0,c
  7873  00248C  3614               	rlcf	___fldiv@grs^0,f,c
  7874  00248E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7875  002490  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7876  002492  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7877  002494                     l2900:
  7878  002494  5005               	movf	___fldiv@a^0,w,c
  7879  002496  5C0D               	subwf	___fldiv@rem^0,w,c
  7880  002498  5006               	movf	(___fldiv@a+1)^0,w,c
  7881  00249A  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7882  00249C  5007               	movf	(___fldiv@a+2)^0,w,c
  7883  00249E  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7884  0024A0  5008               	movf	(___fldiv@a+3)^0,w,c
  7885  0024A2  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7886  0024A4  A0D8               	btfss	status,0,c
  7887  0024A6  EF57  F012         	goto	u3071
  7888  0024AA  EF59  F012         	goto	u3070
  7889  0024AE                     u3071:
  7890  0024AE  EF62  F012         	goto	l2906
  7891  0024B2                     u3070:
  7892  0024B2  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7893  0024B4  5005               	movf	___fldiv@a^0,w,c
  7894  0024B6  5E0D               	subwf	___fldiv@rem^0,f,c
  7895  0024B8  5006               	movf	(___fldiv@a+1)^0,w,c
  7896  0024BA  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7897  0024BC  5007               	movf	(___fldiv@a+2)^0,w,c
  7898  0024BE  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7899  0024C0  5008               	movf	(___fldiv@a+3)^0,w,c
  7900  0024C2  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7901  0024C4                     l2906:
  7902  0024C4  2A19               	incf	___fldiv@aexp^0,f,c
  7903  0024C6                     l676:
  7904  0024C6  0E19               	movlw	25
  7905  0024C8  6419               	cpfsgt	___fldiv@aexp^0,c
  7906  0024CA  EF69  F012         	goto	u3081
  7907  0024CE  EF6B  F012         	goto	u3080
  7908  0024D2                     u3081:
  7909  0024D2  EF2B  F012         	goto	l2892
  7910  0024D6                     u3080:
  7911  0024D6  500D               	movf	___fldiv@rem^0,w,c
  7912  0024D8  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7913  0024DA  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7914  0024DC  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7915  0024DE  B4D8               	btfsc	status,2,c
  7916  0024E0  EF74  F012         	goto	u3091
  7917  0024E4  EF76  F012         	goto	u3090
  7918  0024E8                     u3091:
  7919  0024E8  EF8E  F012         	goto	l2918
  7920  0024EC                     u3090:
  7921  0024EC  8014               	bsf	___fldiv@grs^0,0,c
  7922  0024EE  EF8E  F012         	goto	l2918
  7923  0024F2                     l2912:
  7924  0024F2  90D8               	bcf	status,0,c
  7925  0024F4  3601               	rlcf	___fldiv@b^0,f,c
  7926  0024F6  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7927  0024F8  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7928  0024FA  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7929  0024FC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7930  0024FE  EF83  F012         	goto	u3101
  7931  002502  EF85  F012         	goto	u3100
  7932  002506                     u3101:
  7933  002506  EF86  F012         	goto	l685
  7934  00250A                     u3100:
  7935  00250A  8001               	bsf	___fldiv@b^0,0,c
  7936  00250C                     l685:
  7937  00250C  90D8               	bcf	status,0,c
  7938  00250E  3614               	rlcf	___fldiv@grs^0,f,c
  7939  002510  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7940  002512  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7941  002514  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7942  002516  0612               	decf	___fldiv@new_exp^0,f,c
  7943  002518  A0D8               	btfss	status,0,c
  7944  00251A  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7945  00251C                     l2918:
  7946  00251C  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7947  00251E  EF93  F012         	goto	u3111
  7948  002522  EF95  F012         	goto	u3110
  7949  002526                     u3111:
  7950  002526  EF79  F012         	goto	l2912
  7951  00252A                     u3110:
  7952  00252A  0E00               	movlw	0
  7953  00252C  6E19               	movwf	___fldiv@aexp^0,c
  7954  00252E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7955  002530  EF9C  F012         	goto	u3121
  7956  002534  EF9E  F012         	goto	u3120
  7957  002538                     u3121:
  7958  002538  EFC2  F012         	goto	l687
  7959  00253C                     u3120:
  7960  00253C  0EFF               	movlw	255
  7961  00253E  1414               	andwf	___fldiv@grs^0,w,c
  7962  002540  6E09               	movwf	??___fldiv^0,c
  7963  002542  0EFF               	movlw	255
  7964  002544  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7965  002546  6E0A               	movwf	(??___fldiv+1)^0,c
  7966  002548  0EFF               	movlw	255
  7967  00254A  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7968  00254C  6E0B               	movwf	(??___fldiv+2)^0,c
  7969  00254E  0E7F               	movlw	127
  7970  002550  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7971  002552  6E0C               	movwf	(??___fldiv+3)^0,c
  7972  002554  5009               	movf	??___fldiv^0,w,c
  7973  002556  100A               	iorwf	(??___fldiv+1)^0,w,c
  7974  002558  100B               	iorwf	(??___fldiv+2)^0,w,c
  7975  00255A  100C               	iorwf	(??___fldiv+3)^0,w,c
  7976  00255C  B4D8               	btfsc	status,2,c
  7977  00255E  EFB3  F012         	goto	u3131
  7978  002562  EFB5  F012         	goto	u3130
  7979  002566                     u3131:
  7980  002566  EFB9  F012         	goto	l688
  7981  00256A                     u3130:
  7982  00256A                     l2926:
  7983  00256A  0E01               	movlw	1
  7984  00256C  6E19               	movwf	___fldiv@aexp^0,c
  7985  00256E  EFC2  F012         	goto	l687
  7986  002572                     l688:
  7987  002572  A001               	btfss	___fldiv@b^0,0,c
  7988  002574  EFBE  F012         	goto	u3141
  7989  002578  EFC0  F012         	goto	u3140
  7990  00257C                     u3141:
  7991  00257C  EFC2  F012         	goto	l687
  7992  002580                     u3140:
  7993  002580  EFB5  F012         	goto	l2926
  7994  002584                     l687:
  7995  002584  5019               	movf	___fldiv@aexp^0,w,c
  7996  002586  B4D8               	btfsc	status,2,c
  7997  002588  EFC8  F012         	goto	u3151
  7998  00258C  EFCA  F012         	goto	u3150
  7999  002590                     u3151:
  8000  002590  EFEE  F012         	goto	l2938
  8001  002594                     u3150:
  8002  002594  0E01               	movlw	1
  8003  002596  2601               	addwf	___fldiv@b^0,f,c
  8004  002598  0E00               	movlw	0
  8005  00259A  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8006  00259C  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8007  00259E  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8008  0025A0  A004               	btfss	(___fldiv@b+3)^0,0,c
  8009  0025A2  EFD5  F012         	goto	u3161
  8010  0025A6  EFD7  F012         	goto	u3160
  8011  0025AA                     u3161:
  8012  0025AA  EFEE  F012         	goto	l2938
  8013  0025AE                     u3160:
  8014  0025AE  C001  F009         	movff	___fldiv@b,??___fldiv
  8015  0025B2  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8016  0025B6  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8017  0025BA  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8018  0025BE  340C               	rlcf	(??___fldiv+3)^0,w,c
  8019  0025C0  320C               	rrcf	(??___fldiv+3)^0,f,c
  8020  0025C2  320B               	rrcf	(??___fldiv+2)^0,f,c
  8021  0025C4  320A               	rrcf	(??___fldiv+1)^0,f,c
  8022  0025C6  3209               	rrcf	??___fldiv^0,f,c
  8023  0025C8  C009  F001         	movff	??___fldiv,___fldiv@b
  8024  0025CC  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8025  0025D0  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8026  0025D4  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8027  0025D8  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8028  0025DA  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8029  0025DC                     l2938:
  8030  0025DC  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8031  0025DE  EFF9  F012         	goto	u3171
  8032  0025E2  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8033  0025E4  E108               	bnz	u3170
  8034  0025E6  2812               	incf	___fldiv@new_exp^0,w,c
  8035  0025E8  A0D8               	btfss	status,0,c
  8036  0025EA  EFF9  F012         	goto	u3171
  8037  0025EE  EFFB  F012         	goto	u3170
  8038  0025F2                     u3171:
  8039  0025F2  EF06  F013         	goto	l2942
  8040  0025F6                     u3170:
  8041  0025F6  0E00               	movlw	0
  8042  0025F8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8043  0025FA  6812               	setf	___fldiv@new_exp^0,c
  8044  0025FC  0E00               	movlw	0
  8045  0025FE  6E01               	movwf	___fldiv@b^0,c
  8046  002600  0E00               	movlw	0
  8047  002602  6E02               	movwf	(___fldiv@b+1)^0,c
  8048  002604  0E00               	movlw	0
  8049  002606  6E03               	movwf	(___fldiv@b+2)^0,c
  8050  002608  0E00               	movlw	0
  8051  00260A  6E04               	movwf	(___fldiv@b+3)^0,c
  8052  00260C                     l2942:
  8053  00260C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8054  00260E  EF13  F013         	goto	u3180
  8055  002612  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8056  002614  E106               	bnz	u3181
  8057  002616  0412               	decf	___fldiv@new_exp^0,w,c
  8058  002618  B0D8               	btfsc	status,0,c
  8059  00261A  EF11  F013         	goto	u3181
  8060  00261E  EF13  F013         	goto	u3180
  8061  002622                     u3181:
  8062  002622  EF21  F013         	goto	l2946
  8063  002626                     u3180:
  8064  002626  0E00               	movlw	0
  8065  002628  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8066  00262A  0E00               	movlw	0
  8067  00262C  6E12               	movwf	___fldiv@new_exp^0,c
  8068  00262E  0E00               	movlw	0
  8069  002630  6E01               	movwf	___fldiv@b^0,c
  8070  002632  0E00               	movlw	0
  8071  002634  6E02               	movwf	(___fldiv@b+1)^0,c
  8072  002636  0E00               	movlw	0
  8073  002638  6E03               	movwf	(___fldiv@b+2)^0,c
  8074  00263A  0E00               	movlw	0
  8075  00263C  6E04               	movwf	(___fldiv@b+3)^0,c
  8076  00263E  0E00               	movlw	0
  8077  002640  6E11               	movwf	___fldiv@sign^0,c
  8078  002642                     l2946:
  8079  002642  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8080  002646  A018               	btfss	___fldiv@bexp^0,0,c
  8081  002648  EF28  F013         	goto	u3191
  8082  00264C  EF2A  F013         	goto	u3190
  8083  002650                     u3191:
  8084  002650  EF2D  F013         	goto	l2952
  8085  002654                     u3190:
  8086  002654  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8087  002656  EF2E  F013         	goto	l2954
  8088  00265A                     l2952:
  8089  00265A  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8090  00265C                     l2954:
  8091  00265C  90D8               	bcf	status,0,c
  8092  00265E  3018               	rrcf	___fldiv@bexp^0,w,c
  8093  002660  6E04               	movwf	(___fldiv@b+3)^0,c
  8094  002662  EFE4  F011         	goto	l2868
  8095  002666                     l674:
  8096  002666  0012               	return		;funcret
  8097  002668                     __end_of___fldiv:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _Ultrasonico_Begin *****************
  8101 ;; Defined at:
  8102 ;;		line 45 in file "main.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; This function calls:
  8123 ;;		Nothing
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text32
  8130  00397C                     __ptext32:
  8131                           	callstack 0
  8132  00397C                     _Ultrasonico_Begin:
  8133                           	callstack 30
  8134  00397C                     
  8135                           ;main.c: 47:     TRISCbits.RC0=0;
  8136  00397C  9094               	bcf	148,0,c	;volatile
  8137                           
  8138                           ;main.c: 48:     TRISBbits.RB0=1;
  8139  00397E  8093               	bsf	147,0,c	;volatile
  8140                           
  8141                           ;main.c: 49:     LATC0=0;
  8142  003980  908B               	bcf	3979,0,c	;volatile
  8143  003982                     
  8144                           ;main.c: 50:     T0CON=0b00001000;
  8145  003982  0E08               	movlw	8
  8146  003984  6ED5               	movwf	213,c	;volatile
  8147  003986                     
  8148                           ;main.c: 51:     TMR0IF=0;
  8149  003986  94F2               	bcf	4082,2,c	;volatile
  8150                           
  8151                           ;main.c: 52:     TMR0=0;
  8152  003988  0E00               	movlw	0
  8153  00398A  6ED7               	movwf	215,c	;volatile
  8154  00398C  0E00               	movlw	0
  8155  00398E  6ED6               	movwf	214,c	;volatile
  8156  003990  0012               	return		;funcret
  8157  003992                     __end_of_Ultrasonico_Begin:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _LCD_setCursor *****************
  8161 ;; Defined at:
  8162 ;;		line 52 in file "LCD_4bits.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  x               1    wreg     unsigned char 
  8165 ;;  y               1    2[COMRAM] unsigned char 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  x               1    5[COMRAM] unsigned char 
  8168 ;;  location        1    6[COMRAM] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8178 ;;      Params:         1       0       0       0       0       0       0       0       0
  8179 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8180 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8181 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8182 ;;Total ram usage:        5 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    1
  8185 ;; This function calls:
  8186 ;;		_LCD_Command
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text33
  8193  003604                     __ptext33:
  8194                           	callstack 0
  8195  003604                     _LCD_setCursor:
  8196                           	callstack 29
  8197                           
  8198                           ;incstack = 0
  8199                           ;LCD_setCursor@x stored from wreg
  8200  003604  6E06               	movwf	LCD_setCursor@x^0,c
  8201  003606                     
  8202                           ;LCD_4bits.c: 54:     switch(y){
  8203  003606  EF17  F01B         	goto	l3966
  8204  00360A                     l3956:
  8205                           
  8206                           ;LCD_4bits.c: 57:         location=(0x80)|((x)&0x0F);
  8207  00360A  5006               	movf	LCD_setCursor@x^0,w,c
  8208  00360C  0B0F               	andlw	15
  8209  00360E  0980               	iorlw	128
  8210  003610  6E07               	movwf	LCD_setCursor@location^0,c
  8211  003612                     
  8212                           ;LCD_4bits.c: 58:         LCD_Command(location);
  8213  003612  5007               	movf	LCD_setCursor@location^0,w,c
  8214  003614  EC7F  F01B         	call	_LCD_Command
  8215                           
  8216                           ;LCD_4bits.c: 59:         break;
  8217  003618  EF2C  F01B         	goto	l89
  8218  00361C                     l3960:
  8219                           
  8220                           ;LCD_4bits.c: 62:         location=(0xC0)|((x)&0x0F);
  8221  00361C  5006               	movf	LCD_setCursor@x^0,w,c
  8222  00361E  0B0F               	andlw	15
  8223  003620  09C0               	iorlw	192
  8224  003622  6E07               	movwf	LCD_setCursor@location^0,c
  8225  003624                     
  8226                           ;LCD_4bits.c: 63:         LCD_Command(location);
  8227  003624  5007               	movf	LCD_setCursor@location^0,w,c
  8228  003626  EC7F  F01B         	call	_LCD_Command
  8229                           
  8230                           ;LCD_4bits.c: 64:         break;
  8231  00362A  EF2C  F01B         	goto	l89
  8232  00362E                     l3966:
  8233  00362E  5003               	movf	LCD_setCursor@y^0,w,c
  8234  003630  6E04               	movwf	??_LCD_setCursor^0,c
  8235  003632  6A05               	clrf	(??_LCD_setCursor+1)^0,c
  8236                           
  8237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8238                           ; Switch size 1, requested type "simple"
  8239                           ; Number of cases is 1, Range of values is 0 to 0
  8240                           ; switch strategies available:
  8241                           ; Name         Instructions Cycles
  8242                           ; simple_byte            4     3 (average)
  8243                           ;	Chosen strategy is simple_byte
  8244  003634  5005               	movf	(??_LCD_setCursor+1)^0,w,c
  8245  003636  0A00               	xorlw	0	; case 0
  8246  003638  B4D8               	btfsc	status,2,c
  8247  00363A  EF21  F01B         	goto	l4078
  8248  00363E  EF2C  F01B         	goto	l89
  8249  003642                     l4078:
  8250                           
  8251                           ; Switch size 1, requested type "simple"
  8252                           ; Number of cases is 2, Range of values is 0 to 1
  8253                           ; switch strategies available:
  8254                           ; Name         Instructions Cycles
  8255                           ; simple_byte            7     4 (average)
  8256                           ;	Chosen strategy is simple_byte
  8257  003642  5004               	movf	??_LCD_setCursor^0,w,c
  8258  003644  0A00               	xorlw	0	; case 0
  8259  003646  B4D8               	btfsc	status,2,c
  8260  003648  EF05  F01B         	goto	l3956
  8261  00364C  0A01               	xorlw	1	; case 1
  8262  00364E  B4D8               	btfsc	status,2,c
  8263  003650  EF0E  F01B         	goto	l3960
  8264  003654  EF2C  F01B         	goto	l89
  8265  003658                     l89:
  8266  003658  0012               	return		;funcret
  8267  00365A                     __end_of_LCD_setCursor:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function _LCD_Print *****************
  8271 ;; Defined at:
  8272 ;;		line 45 in file "LCD_4bits.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;  str             2    2[COMRAM] PTR const unsigned char 
  8275 ;;		 -> STR_3(3), main@distancia_str(10), STR_1(16), 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;		None
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8287 ;;      Params:         2       0       0       0       0       0       0       0       0
  8288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8290 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8291 ;;Total ram usage:        2 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    1
  8294 ;; This function calls:
  8295 ;;		_LCD_Char
  8296 ;; This function is called by:
  8297 ;;		_main
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text34
  8302  00354A                     __ptext34:
  8303                           	callstack 0
  8304  00354A                     _LCD_Print:
  8305                           	callstack 29
  8306  00354A                     
  8307                           ;LCD_4bits.c: 46:     while((*str)!=0){
  8308  00354A  EFBB  F01A         	goto	l3978
  8309  00354E                     l3974:
  8310                           
  8311                           ;LCD_4bits.c: 47:         LCD_Char(*str);
  8312  00354E  C003  FFF6         	movff	LCD_Print@str,tblptrl
  8313  003552  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  8314  003556  6AF8               	clrf	tblptru,c
  8315  003558  0E07               	movlw	(high __ramtop+-1)
  8316  00355A  64F7               	cpfsgt	tblptrh,c
  8317  00355C  D003               	bra	u4937
  8318  00355E  0008               	tblrd		*
  8319  003560  50F5               	movf	tablat,w,c
  8320  003562  D005               	bra	u4930
  8321  003564                     u4937:
  8322  003564  CFF6 FFE1          	movff	tblptrl,fsr1l
  8323  003568  CFF7 FFE2          	movff	tblptrh,fsr1h
  8324  00356C  50E7               	movf	indf1,w,c
  8325  00356E                     u4930:
  8326  00356E  ECEC  F01B         	call	_LCD_Char
  8327  003572                     
  8328                           ;LCD_4bits.c: 48:         str++;
  8329  003572  4A03               	infsnz	LCD_Print@str^0,f,c
  8330  003574  2A04               	incf	(LCD_Print@str+1)^0,f,c
  8331  003576                     l3978:
  8332                           
  8333                           ;LCD_4bits.c: 46:     while((*str)!=0){
  8334  003576  C003  FFF6         	movff	LCD_Print@str,tblptrl
  8335  00357A  C004  FFF7         	movff	LCD_Print@str+1,tblptrh
  8336  00357E  6AF8               	clrf	tblptru,c
  8337  003580  0E07               	movlw	(high __ramtop+-1)
  8338  003582  64F7               	cpfsgt	tblptrh,c
  8339  003584  D003               	bra	u4947
  8340  003586  0008               	tblrd		*
  8341  003588  50F5               	movf	tablat,w,c
  8342  00358A  D005               	bra	u4940
  8343  00358C                     u4947:
  8344  00358C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8345  003590  CFF7 FFE2          	movff	tblptrh,fsr1h
  8346  003594  50E7               	movf	indf1,w,c
  8347  003596                     u4940:
  8348  003596  0900               	iorlw	0
  8349  003598  A4D8               	btfss	status,2,c
  8350  00359A  EFD1  F01A         	goto	u4951
  8351  00359E  EFD3  F01A         	goto	u4950
  8352  0035A2                     u4951:
  8353  0035A2  EFA7  F01A         	goto	l3974
  8354  0035A6                     u4950:
  8355  0035A6  0012               	return		;funcret
  8356  0035A8                     __end_of_LCD_Print:
  8357                           	callstack 0
  8358                           
  8359 ;; *************** function _LCD_Char *****************
  8360 ;; Defined at:
  8361 ;;		line 33 in file "LCD_4bits.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  x               1    wreg     unsigned char 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;  x               1    1[COMRAM] unsigned char 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0
  8376 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8378 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8379 ;;Total ram usage:        2 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_LCD_Print
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text35
  8389  0037D8                     __ptext35:
  8390                           	callstack 0
  8391  0037D8                     _LCD_Char:
  8392                           	callstack 29
  8393                           
  8394                           ;incstack = 0
  8395                           ;LCD_Char@x stored from wreg
  8396  0037D8  6E02               	movwf	LCD_Char@x^0,c
  8397  0037DA                     
  8398                           ;LCD_4bits.c: 34:     LATD = (LATD & 0x0F)|(x & 0xF0);
  8399  0037DA  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  8400  0037DE  0EF0               	movlw	240
  8401  0037E0  1601               	andwf	??_LCD_Char^0,f,c
  8402  0037E2  508C               	movf	140,w,c	;volatile
  8403  0037E4  0B0F               	andlw	15
  8404  0037E6  1001               	iorwf	??_LCD_Char^0,w,c
  8405  0037E8  6E8C               	movwf	140,c	;volatile
  8406  0037EA                     
  8407                           ;LCD_4bits.c: 35:     LATD |=(1<<2);
  8408  0037EA  848C               	bsf	140,2,c	;volatile
  8409  0037EC                     
  8410                           ;LCD_4bits.c: 36:     LATD |=(1<<3);
  8411  0037EC  868C               	bsf	140,3,c	;volatile
  8412  0037EE                     
  8413                           ;LCD_4bits.c: 37:     __nop();
  8414  0037EE  F000               	nop	
  8415  0037F0                     
  8416                           ;LCD_4bits.c: 38:     LATD &=~(1<<3);
  8417  0037F0  968C               	bcf	140,3,c	;volatile
  8418  0037F2                     
  8419                           ;LCD_4bits.c: 39:     LATD = (LATD & 0x0F)|(x<<4);
  8420  0037F2  C002  F001         	movff	LCD_Char@x,??_LCD_Char
  8421  0037F6  3A01               	swapf	??_LCD_Char^0,f,c
  8422  0037F8  0EF0               	movlw	240
  8423  0037FA  1601               	andwf	??_LCD_Char^0,f,c
  8424  0037FC  508C               	movf	140,w,c	;volatile
  8425  0037FE  0B0F               	andlw	15
  8426  003800  1001               	iorwf	??_LCD_Char^0,w,c
  8427  003802  6E8C               	movwf	140,c	;volatile
  8428                           
  8429                           ;LCD_4bits.c: 40:     LATD |=(1<<3);
  8430  003804  868C               	bsf	140,3,c	;volatile
  8431  003806                     
  8432                           ;LCD_4bits.c: 41:     __nop();
  8433  003806  F000               	nop	
  8434                           
  8435                           ;LCD_4bits.c: 42:     LATD &=~(1<<3);
  8436  003808  968C               	bcf	140,3,c	;volatile
  8437  00380A                     
  8438                           ;LCD_4bits.c: 43:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8439  00380A  0E08               	movlw	8
  8440  00380C  6E01               	movwf	??_LCD_Char^0,c
  8441  00380E  0ECA               	movlw	202
  8442  003810                     u5017:
  8443  003810  2EE8               	decfsz	wreg,f,c
  8444  003812  D7FE               	bra	u5017
  8445  003814  2E01               	decfsz	??_LCD_Char^0,f,c
  8446  003816  D7FC               	bra	u5017
  8447  003818  0012               	return		;funcret
  8448  00381A                     __end_of_LCD_Char:
  8449                           	callstack 0
  8450                           
  8451 ;; *************** function _LCD_Begin *****************
  8452 ;; Defined at:
  8453 ;;		line 4 in file "LCD_4bits.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8469 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8470 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8471 ;;Total ram usage:        1 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    1
  8474 ;; This function calls:
  8475 ;;		_LCD_Command
  8476 ;; This function is called by:
  8477 ;;		_main
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text36
  8482  0038F8                     __ptext36:
  8483                           	callstack 0
  8484  0038F8                     _LCD_Begin:
  8485                           	callstack 29
  8486  0038F8                     
  8487                           ;LCD_4bits.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  8488  0038F8  0E27               	movlw	39
  8489  0038FA  6E03               	movwf	??_LCD_Begin^0,c
  8490  0038FC  0EF5               	movlw	245
  8491  0038FE                     u5027:
  8492  0038FE  2EE8               	decfsz	wreg,f,c
  8493  003900  D7FE               	bra	u5027
  8494  003902  2E03               	decfsz	??_LCD_Begin^0,f,c
  8495  003904  D7FC               	bra	u5027
  8496  003906  F000               	nop	
  8497  003908                     
  8498                           ;LCD_4bits.c: 7:     TRISD &=~((1<<2)|(1<<3)|(0b11110000));
  8499  003908  0E03               	movlw	3
  8500  00390A  1695               	andwf	149,f,c	;volatile
  8501  00390C                     
  8502                           ;LCD_4bits.c: 8:     LCD_Command(0x02);
  8503  00390C  0E02               	movlw	2
  8504  00390E  EC7F  F01B         	call	_LCD_Command
  8505  003912                     
  8506                           ;LCD_4bits.c: 9:     LCD_Command(0x28);
  8507  003912  0E28               	movlw	40
  8508  003914  EC7F  F01B         	call	_LCD_Command
  8509  003918                     
  8510                           ;LCD_4bits.c: 10:     LCD_Command(0x01);
  8511  003918  0E01               	movlw	1
  8512  00391A  EC7F  F01B         	call	_LCD_Command
  8513  00391E                     
  8514                           ;LCD_4bits.c: 11:     LCD_Command(0x0C);
  8515  00391E  0E0C               	movlw	12
  8516  003920  EC7F  F01B         	call	_LCD_Command
  8517  003924                     
  8518                           ;LCD_4bits.c: 12:     LCD_Command(0x06);
  8519  003924  0E06               	movlw	6
  8520  003926  EC7F  F01B         	call	_LCD_Command
  8521  00392A  0012               	return		;funcret
  8522  00392C                     __end_of_LCD_Begin:
  8523                           	callstack 0
  8524                           
  8525 ;; *************** function _LCD_Command *****************
  8526 ;; Defined at:
  8527 ;;		line 20 in file "LCD_4bits.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  dat             1    wreg     unsigned char 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  dat             1    1[COMRAM] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  1    wreg      void 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8541 ;;      Params:         0       0       0       0       0       0       0       0       0
  8542 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8543 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8544 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8545 ;;Total ram usage:        2 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_LCD_Begin
  8551 ;;		_LCD_setCursor
  8552 ;;		_LCD_Clear
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text37
  8557  0036FE                     __ptext37:
  8558                           	callstack 0
  8559  0036FE                     _LCD_Command:
  8560                           	callstack 29
  8561                           
  8562                           ;incstack = 0
  8563                           ;LCD_Command@dat stored from wreg
  8564  0036FE  6E02               	movwf	LCD_Command@dat^0,c
  8565  003700                     
  8566                           ;LCD_4bits.c: 21:     LATD = (LATD & 0x0F)|(dat & 0xF0);
  8567  003700  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  8568  003704  0EF0               	movlw	240
  8569  003706  1601               	andwf	??_LCD_Command^0,f,c
  8570  003708  508C               	movf	140,w,c	;volatile
  8571  00370A  0B0F               	andlw	15
  8572  00370C  1001               	iorwf	??_LCD_Command^0,w,c
  8573  00370E  6E8C               	movwf	140,c	;volatile
  8574  003710                     
  8575                           ;LCD_4bits.c: 22:     LATD &=~(1<<2);
  8576  003710  948C               	bcf	140,2,c	;volatile
  8577  003712                     
  8578                           ;LCD_4bits.c: 23:     LATD |=(1<<3);
  8579  003712  868C               	bsf	140,3,c	;volatile
  8580  003714                     
  8581                           ;LCD_4bits.c: 24:     __nop();
  8582  003714  F000               	nop	
  8583  003716                     
  8584                           ;LCD_4bits.c: 25:     LATD &=~(1<<3);
  8585  003716  968C               	bcf	140,3,c	;volatile
  8586                           
  8587                           ;LCD_4bits.c: 26:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8588  003718  0E03               	movlw	3
  8589  00371A  6E01               	movwf	??_LCD_Command^0,c
  8590  00371C  0E98               	movlw	152
  8591  00371E                     u5037:
  8592  00371E  2EE8               	decfsz	wreg,f,c
  8593  003720  D7FE               	bra	u5037
  8594  003722  2E01               	decfsz	??_LCD_Command^0,f,c
  8595  003724  D7FC               	bra	u5037
  8596  003726                     
  8597                           ;LCD_4bits.c: 27:     LATD = (LATD & 0x0F)|(dat<<4);
  8598  003726  C002  F001         	movff	LCD_Command@dat,??_LCD_Command
  8599  00372A  3A01               	swapf	??_LCD_Command^0,f,c
  8600  00372C  0EF0               	movlw	240
  8601  00372E  1601               	andwf	??_LCD_Command^0,f,c
  8602  003730  508C               	movf	140,w,c	;volatile
  8603  003732  0B0F               	andlw	15
  8604  003734  1001               	iorwf	??_LCD_Command^0,w,c
  8605  003736  6E8C               	movwf	140,c	;volatile
  8606                           
  8607                           ;LCD_4bits.c: 28:     LATD |=(1<<3);
  8608  003738  868C               	bsf	140,3,c	;volatile
  8609  00373A                     
  8610                           ;LCD_4bits.c: 29:     __nop();
  8611  00373A  F000               	nop	
  8612                           
  8613                           ;LCD_4bits.c: 30:     LATD &=~(1<<3);
  8614  00373C  968C               	bcf	140,3,c	;volatile
  8615  00373E                     
  8616                           ;LCD_4bits.c: 31:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8617  00373E  0E08               	movlw	8
  8618  003740  6E01               	movwf	??_LCD_Command^0,c
  8619  003742  0ECA               	movlw	202
  8620  003744                     u5047:
  8621  003744  2EE8               	decfsz	wreg,f,c
  8622  003746  D7FE               	bra	u5047
  8623  003748  2E01               	decfsz	??_LCD_Command^0,f,c
  8624  00374A  D7FC               	bra	u5047
  8625  00374C  0012               	return		;funcret
  8626  00374E                     __end_of_LCD_Command:
  8627                           	callstack 0
  8628                           
  8629                           	psect	rparam
  8630  0000                     
  8631                           	psect	idloc
  8632                           
  8633                           ;Config register IDLOC0 @ 0x200000
  8634                           ;	unspecified, using default values
  8635  200000                     	org	2097152
  8636  200000  FF                 	db	255
  8637                           
  8638                           ;Config register IDLOC1 @ 0x200001
  8639                           ;	unspecified, using default values
  8640  200001                     	org	2097153
  8641  200001  FF                 	db	255
  8642                           
  8643                           ;Config register IDLOC2 @ 0x200002
  8644                           ;	unspecified, using default values
  8645  200002                     	org	2097154
  8646  200002  FF                 	db	255
  8647                           
  8648                           ;Config register IDLOC3 @ 0x200003
  8649                           ;	unspecified, using default values
  8650  200003                     	org	2097155
  8651  200003  FF                 	db	255
  8652                           
  8653                           ;Config register IDLOC4 @ 0x200004
  8654                           ;	unspecified, using default values
  8655  200004                     	org	2097156
  8656  200004  FF                 	db	255
  8657                           
  8658                           ;Config register IDLOC5 @ 0x200005
  8659                           ;	unspecified, using default values
  8660  200005                     	org	2097157
  8661  200005  FF                 	db	255
  8662                           
  8663                           ;Config register IDLOC6 @ 0x200006
  8664                           ;	unspecified, using default values
  8665  200006                     	org	2097158
  8666  200006  FF                 	db	255
  8667                           
  8668                           ;Config register IDLOC7 @ 0x200007
  8669                           ;	unspecified, using default values
  8670  200007                     	org	2097159
  8671  200007  FF                 	db	255
  8672                           
  8673                           	psect	config
  8674                           
  8675                           ;Config register CONFIG1L @ 0x300000
  8676                           ;	PLL Prescaler Selection bits
  8677                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8678                           ;	System Clock Postscaler Selection bits
  8679                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8680                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8681                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8682  300000                     	org	3145728
  8683  300000  00                 	db	0
  8684                           
  8685                           ;Config register CONFIG1H @ 0x300001
  8686                           ;	Oscillator Selection bits
  8687                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  8688                           ;	Fail-Safe Clock Monitor Enable bit
  8689                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8690                           ;	Internal/External Oscillator Switchover bit
  8691                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8692  300001                     	org	3145729
  8693  300001  08                 	db	8
  8694                           
  8695                           ;Config register CONFIG2L @ 0x300002
  8696                           ;	Power-up Timer Enable bit
  8697                           ;	PWRT = OFF, PWRT disabled
  8698                           ;	Brown-out Reset Enable bits
  8699                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8700                           ;	Brown-out Reset Voltage bits
  8701                           ;	BORV = 3, Minimum setting 2.05V
  8702                           ;	USB Voltage Regulator Enable bit
  8703                           ;	VREGEN = OFF, USB voltage regulator disabled
  8704  300002                     	org	3145730
  8705  300002  1F                 	db	31
  8706                           
  8707                           ;Config register CONFIG2H @ 0x300003
  8708                           ;	Watchdog Timer Enable bit
  8709                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8710                           ;	Watchdog Timer Postscale Select bits
  8711                           ;	WDTPS = 32768, 1:32768
  8712  300003                     	org	3145731
  8713  300003  1E                 	db	30
  8714                           
  8715                           ; Padding undefined space
  8716  300004                     	org	3145732
  8717  300004  FF                 	db	255
  8718                           
  8719                           ;Config register CONFIG3H @ 0x300005
  8720                           ;	CCP2 MUX bit
  8721                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8722                           ;	PORTB A/D Enable bit
  8723                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8724                           ;	Low-Power Timer 1 Oscillator Enable bit
  8725                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8726                           ;	MCLR Pin Enable bit
  8727                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8728  300005                     	org	3145733
  8729  300005  01                 	db	1
  8730                           
  8731                           ;Config register CONFIG4L @ 0x300006
  8732                           ;	Stack Full/Underflow Reset Enable bit
  8733                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8734                           ;	Single-Supply ICSP Enable bit
  8735                           ;	LVP = OFF, Single-Supply ICSP disabled
  8736                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8737                           ;	ICPRT = OFF, ICPORT disabled
  8738                           ;	Extended Instruction Set Enable bit
  8739                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8740                           ;	Background Debugger Enable bit
  8741                           ;	DEBUG = 0x1, unprogrammed default
  8742  300006                     	org	3145734
  8743  300006  81                 	db	129
  8744                           
  8745                           ; Padding undefined space
  8746  300007                     	org	3145735
  8747  300007  FF                 	db	255
  8748                           
  8749                           ;Config register CONFIG5L @ 0x300008
  8750                           ;	Code Protection bit
  8751                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8752                           ;	Code Protection bit
  8753                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8754                           ;	Code Protection bit
  8755                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8756                           ;	Code Protection bit
  8757                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8758  300008                     	org	3145736
  8759  300008  0F                 	db	15
  8760                           
  8761                           ;Config register CONFIG5H @ 0x300009
  8762                           ;	Boot Block Code Protection bit
  8763                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8764                           ;	Data EEPROM Code Protection bit
  8765                           ;	CPD = OFF, Data EEPROM is not code-protected
  8766  300009                     	org	3145737
  8767  300009  C0                 	db	192
  8768                           
  8769                           ;Config register CONFIG6L @ 0x30000A
  8770                           ;	Write Protection bit
  8771                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8772                           ;	Write Protection bit
  8773                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8774                           ;	Write Protection bit
  8775                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8776                           ;	Write Protection bit
  8777                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8778  30000A                     	org	3145738
  8779  30000A  0F                 	db	15
  8780                           
  8781                           ;Config register CONFIG6H @ 0x30000B
  8782                           ;	Configuration Register Write Protection bit
  8783                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8784                           ;	Boot Block Write Protection bit
  8785                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8786                           ;	Data EEPROM Write Protection bit
  8787                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8788  30000B                     	org	3145739
  8789  30000B  E0                 	db	224
  8790                           
  8791                           ;Config register CONFIG7L @ 0x30000C
  8792                           ;	Table Read Protection bit
  8793                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8794                           ;	Table Read Protection bit
  8795                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8796                           ;	Table Read Protection bit
  8797                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8798                           ;	Table Read Protection bit
  8799                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8800  30000C                     	org	3145740
  8801  30000C  0F                 	db	15
  8802                           
  8803                           ;Config register CONFIG7H @ 0x30000D
  8804                           ;	Boot Block Table Read Protection bit
  8805                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8806  30000D                     	org	3145741
  8807  30000D  40                 	db	64
  8808                           tosu	equ	0xFFF
  8809                           tosh	equ	0xFFE
  8810                           tosl	equ	0xFFD
  8811                           stkptr	equ	0xFFC
  8812                           pclatu	equ	0xFFB
  8813                           pclath	equ	0xFFA
  8814                           pcl	equ	0xFF9
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           indf0	equ	0xFEF
  8822                           postinc0	equ	0xFEE
  8823                           postdec0	equ	0xFED
  8824                           preinc0	equ	0xFEC
  8825                           plusw0	equ	0xFEB
  8826                           fsr0h	equ	0xFEA
  8827                           fsr0l	equ	0xFE9
  8828                           wreg	equ	0xFE8
  8829                           indf1	equ	0xFE7
  8830                           postinc1	equ	0xFE6
  8831                           postdec1	equ	0xFE5
  8832                           preinc1	equ	0xFE4
  8833                           plusw1	equ	0xFE3
  8834                           fsr1h	equ	0xFE2
  8835                           fsr1l	equ	0xFE1
  8836                           bsr	equ	0xFE0
  8837                           indf2	equ	0xFDF
  8838                           postinc2	equ	0xFDE
  8839                           postdec2	equ	0xFDD
  8840                           preinc2	equ	0xFDC
  8841                           plusw2	equ	0xFDB
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160     88     100
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@distancia_str(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@distancia_str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S680_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@distancia_str(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@distancia_str(BANK0[10]), 

    LCD_Print@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[3]), main@distancia_str(BANK0[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Ultrasonico_read->___fldiv
    _LCD_setCursor->_LCD_Command
    _LCD_Print->_LCD_Char
    _LCD_Begin->_LCD_Command

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   32083
                                             89 COMRAM     2     2      0
                                             74 BANK0     14    14      0
                          _LCD_Begin
                          _LCD_Print
                      _LCD_setCursor
                  _Ultrasonico_Begin
                   _Ultrasonico_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28684
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28325
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   27945
                                             57 COMRAM    24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22240
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Ultrasonico_read                                     8     4      4    2580
                                             25 COMRAM     8     4      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Ultrasonico_Begin                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     385
                                              2 COMRAM     5     4      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            2     0      2     317
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Begin
     _LCD_Command
   _LCD_Print
     _LCD_Char
   _LCD_setCursor
     _LCD_Command
   _Ultrasonico_Begin
   _Ultrasonico_read
     ___fldiv
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      64       5       62.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      20        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jun 18 21:20:58 2022

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
              ?_LCD_Command 0001                          l43 3990                          l53 342C  
                        l54 3486                          l46 33F8                          l73 374C  
                        l49 3410                          l82 35A6                          l67 392A  
                        l76 3818                          l92 397A                          l89 3658  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l323 3128  
                       l351 3344                         l336 329A                         l362 2DC6  
                       l620 1BD2                         l357 2D80                         l621 1BC0  
                       l710 22CC                         l366 3888                         l622 1B86  
                       l713 215E                         l706 1F68                         l723 228E  
                       l715 21D6                         l811 316E                         l716 21C4  
                       l637 1CEC                         l629 1EA2                         l389 2CC2  
                       l750 2A2C                         l646 1DBC                         l662 3792  
                       l814 31B0                         l647 1DAA                         l816 31EA  
                       l761 29C4                         l674 2666                         l754 2968  
                       l834 1486                         l770 36AA                         l747 28D0  
                       l676 24C6                         l852 0C1A                         l685 250C  
                       l950 34E8                         l687 2584                         l679 248A  
                       l943 192C                         l688 2572                         l960 2EC4  
                       l880 105A                         l936 19E2                         l949 34E0  
                       l992 2BBC                         l989 2BB4                         l998 2878  
                       _pad 312A                ___awmod@sign 0006                         wreg 000FE8  
              ___flmul@aexp 0012                ___flmul@bexp 0013                 _tolower$965 000D  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 000A                        l1001 27BC                        l1022 3850  
                      l1008 38C0                        l1016 36FC                        l1060 38F6  
                      l1037 3064                        l1045 37D6                        l1054 3602  
                      l1048 3992                        l1064 2F9A                        l3010 1FD4  
                      l3002 1F9C                        l1074 3540                        l3100 306A  
                      l3020 201E                        l3012 1FEC                        l3004 1FA8  
                      l3110 309A                        l3102 3078                        l3030 2074  
                      l3022 202E                        l3014 1FF8                        l3006 1FB2  
                      l1079 3548                        l3120 30C8                        l3112 309E  
                      l3104 3080                        l3200 2D30                        l3040 2118  
                      l3032 2090                        l3024 203A                        l3016 2004  
                      l3008 1FC8                        l4000 3674                        l3130 30FC  
                      l3122 30D6                        l3114 30A6                        l3106 3084  
                      l3210 2DBE                        l3202 2D40                        l3050 216E  
                      l3042 2126                        l3034 209C                        l3026 204A  
                      l3018 2012                        l4002 367C                        l4010 334A  
                      l3132 3102                        l3124 30DC                        l3116 30B8  
                      l3108 3092                        l3212 2DC4                        l3204 2D4E  
                      l3052 217C                        l3044 2144                        l3036 20B8  
                      l3028 2064                        l3220 3878                        l4004 3698  
                      l4020 337C                        l4012 334E                        l3126 30F2  
                      l3118 30C0                        l3134 3108                        l3150 320A  
                      l3142 31EC                        l3206 2D60                        l3062 21E6  
                      l3070 222E                        l3054 2180                        l3046 214E  
                      l3038 20E2                        l3230 2BE8                        l3302 2E66  
                      l4030 33CE                        l4022 33A2                        l4014 3352  
                      l3136 3118                        l3128 30FA                        l3160 3242  
                      l3152 3218                        l3144 31F0                        l3208 2D6E  
                      l3080 22A2                        l3072 2248                        l3064 21F2  
                      l3056 218E                        l3048 215C                        l3216 3852  
                      l2600 1A00                        l3240 2C36                        l3232 2C12  
                      l3224 2BBE                        l3304 2E78                        l3312 35A8  
                      l3320 3520                        l3400 08E8                        l4024 33AC  
                      l4016 335C                        l4008 3346                        l3138 3120  
                      l3162 3250                        l3170 327A                        l3154 3220  
                      l3146 31FE                        l3082 22B0                        l3074 225C  
                      l3066 2200                        l3058 21BC                        l3218 3868  
                      l2602 1A10                        l2610 1A3A                        l3250 2C62  
                      l3234 2C14                        l3226 2BD4                        l3330 26DE  
                      l3314 35B8                        l3322 3532                        l3410 0972  
                      l3402 090E                        l4026 33B8                        l4018 3368  
                      l3172 328A                        l3164 3266                        l3156 3232  
                      l3148 3206                        l3180 32CA                        l3084 22B2  
                      l3076 2276                        l3068 222A                        l2700 1C04  
                      l2620 1A6A                        l2612 1A4A                        l2604 1A20  
                      l3092 374E                        l3260 2C92                        l3236 2C24  
                      l3308 2EBC                        l3340 27AC                        l3332 26F2  
                      l3316 34EA                        l3500 0D1E                        l3420 09E2  
                      l3412 098A                        l4028 33C2                        l3174 3292  
                      l3166 326E                        l3158 323A                        l3190 3342  
                      l3182 32DA                        l3078 2292                        l3086 22B8  
                      l2710 1C40                        l2702 1C14                        l2630 1AAA  
                      l2622 1A78                        l2614 1A50                        l2606 1A30  
                      l3094 375E                        l3262 2CA2                        l3246 2C4E  
                      l3238 2C28                        l3350 2868                        l3334 2700  
                      l3342 27E0                        l3326 2668                        l3270 3138  
                      l3510 0D64                        l3502 0D30                        l3414 0994  
                      l3406 0944                        l3360 36B0                        l3168 3274  
                      l3184 3308                        l3088 22BC                        l2720 1C86  
                      l2712 1C4E                        l2704 1C22                        l2640 1AE4  
                      l2632 1AAC                        l2624 1A7A                        l2616 1A62  
                      l2608 1A32                        l3264 2CB2                        l3256 2C76  
                      l3248 2C58                        l3344 281C                        l3328 2688  
                      l2800 37B2                        l3280 318E                        l3272 314C  
                      l3600 1252                        l3520 0E78                        l3512 0DC8  
                      l3504 0D38                        l3424 0A18                        l3408 0956  
                      l3354 388A                        l3362 36C4                        l3098 3066  
                      l3186 3318                        l3178 329C                        l3194 2CC4  
                      l2730 1D02                        l2722 1CBA                        l2714 1C50  
                      l2706 1C30                        l2650 1AF8                        l2642 1AE8  
                      l2626 1A8A                        l2634 1AB4                        l2618 1A64  
                      l3258 2C82                        l3290 2DC8                        l3346 2830  
                      l3338 2770                        l2802 37B6                        l2810 38EA  
                      l3282 3192                        l3274 315A                        l3610 12BC  
                      l3602 1270                        l3530 0F36                        l3522 0EAC  
                      l3514 0E20                        l3506 0D40                        l3450 0B7A  
                      l3442 0AB2                        l3426 0A2A                        l3418 09BC  
                      l3370 082E                        l2900 2494                        l2820 3972  
                      l3364 36F2                        l4076 2AEA                        l3700 2ACC  
                      l3188 333C                        l3196 2CF2                        l2740 1D3E  
                      l2732 1D12                        l2724 1CBC                        l2716 1C5A  
                      l2708 1C3C                        l2660 1B0C                        l2652 1AFC  
                      l2644 1AEC                        l2636 1AC4                        l2628 1A9A  
                      l3292 2DE8                        l3348 2858                        l2580 2F9C  
                      l2804 38C2                        l3284 31BE                        l3276 3166  
                      l3268 312A                        l3620 12FA                        l3612 12C0  
                      l3604 128C                        l3540 100A                        l3532 0F46  
                      l3524 0EDE                        l3516 0E54                        l3508 0D50  
                      l3460 0BDA                        l3452 0B82                        l3444 0AE6  
                      l3428 0A46                        l3436 0A62                        l3380 0882  
                      l3372 0838                        l4078 3642                        l2910 24EC  
                      l2902 24B2                        l2830 22EA                        l3366 36F6  
                      l3358 36AC                        l3710 2B74                        l3702 2B00  
                      l3198 2D02                        l2750 1D6A                        l2742 1D40  
                      l2726 1CCC                        l2718 1C60                        l2670 1B20  
                      l2662 1B10                        l2654 1B00                        l2646 1AF0  
                      l2638 1AD6                        l3294 2E26                        l2590 301E  
                      l2582 2FAE                        l2806 38CE                        l3286 31D2  
                      l3278 317A                        l2814 381A                        l3630 132C  
                      l3622 1302                        l3614 12D0                        l3606 129E  
                      l3550 1052                        l3542 101E                        l3534 0F7A  
                      l3526 0EF4                        l3518 0E5A                        l3462 0BEC  
                      l3446 0AEC                        l3454 0BB4                        l3438 0A7C  
                      l3390 08C6                        l3382 088C                        l3374 0848  
                      l2920 252A                        l2912 24F2                        l2904 24B4  
                      l2832 22FA                        l2840 2324                        l2824 22CE  
                      l3712 2B86                        l2760 1DA2                        l2744 1D4E  
                      l2736 1D26                        l2752 1D6C                        l2728 1CDC  
                      l2680 1B7E                        l2664 1B14                        l2656 1B04  
                      l2648 1AF4                        l2672 1B24                        l3296 2E4E  
                      l2584 2FC0                        l2808 38D2                        l3632 1332  
                      l3640 1382                        l3624 1310                        l3616 12E2  
                      l3608 12AC                        l3560 110E                        l3552 1076  
                      l3536 0FD0                        l3544 1022                        l3528 0F26  
                      l3480 0C9C                        l3464 0BF4                        l3456 0BC4  
                      l3448 0B46                        l3392 08D2                        l3384 0894  
                      l3376 0856                        l3720 2EC6                        l3800 17B2  
                      l2930 2594                        l2922 252E                        l2914 24FC  
                      l2906 24C4                        l2850 2350                        l2842 2334  
                      l2834 230A                        l2826 22DA                        l2818 3956  
                      l3714 2B98                        l3706 2B36                        l2770 1E20  
                      l2746 1D56                        l2738 1D30                        l2754 1D7A  
                      l2690 1BB4                        l2682 1B94                        l2674 1B28  
                      l2666 1B18                        l2658 1B08                        l2594 19E4  
                      l3298 2E5A                        l2586 2FCA                        l3650 13D2  
                      l3642 1394                        l3634 1358                        l3626 1318  
                      l3618 12EA                        l3570 1156                        l3562 111C  
                      l3554 10DA                        l3546 1032                        l3538 0FD6  
                      l3490 0CD4                        l3482 0CA4                        l3474 0C38  
                      l3466 0C0E                        l3458 0BC8                        l3394 08DA  
                      l3386 08A6                        l3378 085E                        l3730 2F22  
                      l3722 2EF0                        l3810 184A                        l3802 17C0  
                      l2940 25F6                        l2932 25A0                        l2924 253C  
                      l2916 250A                        l2908 24D6                        l2852 2360  
                      l2860 238A                        l2844 233A                        l2836 231A  
                      l2828 22E8                        l3900 2952                        l2780 1E66  
                      l2764 1DCC                        l2772 1E22                        l2756 1D7E  
                      l2748 1D5A                        l2692 1BBE                        l2684 1BA0  
                      l2676 1B52                        l2668 1B1C                        l2596 19F0  
                      l2588 2FE8                        l3652 13DA                        l3644 13AE  
                      l3636 1374                        l3628 1320                        l3580 1180  
                      l3572 115A                        l3556 10E8                        l3564 1124  
                      l3548 1046                        l3492 0CE2                        l3476 0C4A  
                      l3484 0CA8                        l3468 0C26                        l3396 08DE  
                      l3388 08B4                        l3732 2F3E                        l3804 17F0  
                      l3740 1488                        l2950 2654                        l2942 260C  
                      l2934 25AE                        l2926 256A                        l2918 251C  
                      l2870 23CC                        l2862 239A                        l2854 2370  
                      l2846 2340                        l2838 231C                        l3910 29D2  
                      l3902 295E                        l2790 1E90                        l2782 1E74  
                      l2774 1E32                        l2766 1DD8                        l2758 1D8C  
                      l2694 1BE0                        l2686 1BA4                        l2678 1B6E  
                      l2598 19FE                        l3670 1460                        l3662 142A  
                      l3654 13EA                        l3646 13B4                        l3638 137C  
                      l3590 11B4                        l3582 1186                        l3574 1160  
                      l3566 1138                        l3558 10FC                        l3494 0CE6  
                      l3486 0CB0                        l3478 0C66                        l3398 08E2  
                      l3734 2F50                        l3726 2EFC                        l3830 1986  
                      l3814 18B6                        l3750 14F4                        l3742 14AC  
                      ?_pad 0011                        l2952 265A                        l2944 2626  
                      l2936 25D8                        l2864 23B0                        l2856 2380  
                      l2848 234E                        l3920 2A1A                        l3912 29D4  
                      l3904 299A                        l3680 2A42                        l2792 1E92  
                      l2784 1E7A                        l2776 1E42                        l2768 1DE6  
                      l2696 1BF0                        l2688 1BB2                        l3672 1466  
                      l3664 143C                        l3656 13F0                        l3648 13C6  
                      l3576 116C                        l3568 1146                        l3584 118C  
                      l3592 11BA                        l3496 0CF8                        l3488 0CC2  
                      l3736 2F78                        l3728 2F0A                        l3816 18C8  
                      l3824 1940                        l3808 181C                        l3760 1574  
                      l3752 152A                        l3744 14BA                        l3840 19AC  
                      l3850 3710                        l2954 265C                        l2946 2642  
                      l2938 25DC                        l2890 244E                        l2882 2404  
                      l2866 23C0                        l2874 23E0                        l2858 2382  
                      l3922 2A1C                        l3914 29D8                        l3906 29A6  
                      l3690 2AA0                        l3682 2A46                        l2970 1ED0  
                      l2962 1EA4                        l2786 1E7C                        l2778 1E62  
                      l3666 1448                        l3658 13F6                        l3594 1212  
                      l3586 119E                        l3578 117C                        l3498 0D06  
                      l3842 19D0                        l3826 1964                        l3834 1992  
                      l3818 18FC                        l3770 15F8                        l3754 1538  
                      l3746 14CC                        l3930 349E                        l3860 373A  
                      l3852 3712                        l3940 38F8                        l2948 2646  
                      l2892 2456                        l2884 241E                        l2876 23F0  
                      l2868 23C8                        l3916 29FC                        l3908 29B4  
                      l3684 2A4A                        l2980 1F0C                        l2972 1EE0  
                      l2964 1EB0                        l2788 1E82                        l2796 3794  
                      l3668 1450                        l3596 1246                        l3588 11B0  
                      l3836 19A0                        l3828 1972                        l3780 1692  
                      l3772 1606                        l3764 15BA                        l3756 1546  
                      l3748 14D0                        l3932 34C4                        l3862 373E  
                      l3854 3714                        l3950 391E                        l3942 3908  
                      l3870 37EE                        l3934 397C                        l2894 2466  
                      l2886 242E                        l2878 23F0                        l3918 2A0C  
                      l3694 2AA6                        l3686 2A66                        l3678 2A2E  
                      l2990 1F42                        l2982 1F12                        l2974 1EF0  
                      l2966 1EBE                        l2798 37A0                        l3598 124E  
                      l3790 171A                        l3774 162A                        l3758 1566  
                      l3766 15CC                        l3926 3488                        l3856 3716  
                      l3848 3700                        l3952 3924                        l3944 390C  
                      l3872 37F0                        l3864 37DA                        l3960 361C  
                      l3936 3982                        l2896 247A                        l2888 243E  
                      l3880 287C                        l3696 2ABC                        l3688 2A9C  
                      l2992 1F52                        l2984 1F20                        l2976 1EF6  
                      l2968 1EC0                        l3792 174A                        l3784 16D8  
                      l3776 1664                        l3768 15F0                        l3928 3490  
                      l3858 3726                        l3946 3912                        l3874 37F2  
                      l3866 37EA                        l3962 3624                        l3954 3606  
                      l3938 3986                        l2898 2488                        l3882 288C  
                      l3698 2AC4                        l2994 1F58                        l2986 1F22  
                      l2978 1F06                        l3794 175A                        l3778 1684  
                      l3786 16EA                        l3948 3918                        l3876 3806  
                      l3868 37EC                        l3972 354A                        l3956 360A  
                      l3892 290A                        l3884 289A                        l3980 33EC  
                      l2996 1F78                        l2988 1F32                        l3796 178A  
                      l3788 170A                        l3878 380A                        l3974 354E  
                      l3958 3612                        l3966 362E                        l3894 2912  
                      l3886 28E0                        l3990 341E                        l3982 33EE  
                      l2998 1F88                        l3798 179C                        l3976 3572  
                      l3896 291E                        l3888 28F6                        l3992 3430  
                      l3984 33F6                        l3978 3576                        l3898 2950  
                      l3986 3406                        l3988 340E                        l3996 365A  
                      l3998 366C                        STR_1 0801                        STR_2 0811  
                      STR_3 082A                        STR_4 0817                        STR_5 081F  
                      STR_8 081B                        STR_9 0823                        u3000 234E  
                      u3001 234A                        u3010 2360                        u3011 235C  
                      u3100 250A                        u3020 2370                        u3101 2506  
                      u3021 236C                        u3110 252A                        u3030 23B0  
                      u3111 2526                        u3031 23AC                        u3120 253C  
                      u3040 23F0                        u3200 1EBE                        u4000 08C6  
                      _LATD 000F8C                        u3121 2538                        u3041 23EC  
                      u3201 1EBA                        u4001 08C2                        u3130 256A  
                      u3050 2466                        u3210 1ED0                        u4010 090E  
                      u3131 2566                        u3051 2462                        u3211 1ECC  
                      u4011 090A                        u3140 2580                        u3060 2488  
                      u3300 217C                        u3220 1EE0                        u2500 2FAE  
                      u4100 0B42                        u4020 093C                        u3141 257C  
                      u3061 2484                        u3301 2178                        u3221 1EDC  
                      u2501 2FAA                        u4101 0B3E                        u4021 0936  
                      u3150 2594                        u3070 24B2                        u3310 218E  
                      u3230 1F20                        u2510 2FC0                        u4110 0BB4  
                      u4030 093E                        u3151 2590                        u3071 24AE  
                      u3311 218A                        u3231 1F1C                        u2511 2FBC  
                      u4111 0BB0                        u3160 25AE                        u3080 24D6  
                      u3400 3092                        u3320 21BC                        u3240 1F32  
                      u2600 1A9A                        u2520 2FE8                        u4200 0CD4  
                      u4120 0BDA                        u4040 0956                        u3161 25AA  
                      u3081 24D2                        u3401 308E                        u3321 21B8  
                      u3241 1F2E                        u2601 1A96                        u2521 2FE4  
                      u4201 0CD0                        u4121 0BD6                        u4041 0952  
                      u3170 25F6                        u3090 24EC                        u3410 30B8  
                      u3330 21D2                        u3250 1F42                        u2610 1AD6  
                      u2530 301E                        u4210 0CE2                        u4130 0BEC  
                      u4050 09E2                        u3171 25F2                        u3091 24E8  
                      u3411 30B4                        u3331 21CE                        u3251 1F3E  
                      u2611 1AD2                        u2531 301A                        u4211 0CDE  
                      u4131 0BE8                        u4051 09DE                        u3180 2626  
                      u3420 30D6                        u3500 328A                        u3340 21E6  
                      u3260 1F78                        u2700 1BF0                        u2620 1AE4  
                      u2540 19FE                        u4300 101E                        u4220 0CF8  
                      u4140 0C0E                        u4060 0A10                        u3181 2622  
                      u3421 30D2                        u3501 3286                        u3341 21E2  
                      u3261 1F74                        u2701 1BEC                        u2621 1AE0  
                      u2541 19FA                        u4301 101A                        u4221 0CF4  
                      u4141 0C0A                        u4061 0A0A                        u3190 2654  
                      u3430 30F2                        u3510 32CA                        u3350 2200  
                      u3270 1F88                        u2710 1C22                        u2630 1B52  
                      u2550 1A10                        u4310 1046                        u4230 0D06  
                      u4150 0C34                        u4070 0A12                        u3191 2650  
                      u5007 33F0                        u3431 30EE                        u3511 32C6  
                      u3351 21FC                        u3271 1F84                        u2711 1C1E  
                      u2631 1B4E                        u2551 1A0C                        u4311 1042  
                      u4231 0D02                        u4151 0C30                        u3440 3118  
                      u3520 3308                        u3360 2248                        u3280 2102  
                      u2800 1D6A                        u2720 1C30                        u2640 1B6A  
                      u2560 1A20                        u3600 2BD4                        u4400 128C  
                      u4320 10E8                        u4240 0D30                        u4160 0C4A  
                      u4080 0A2A                        u5017 3810                        u3441 3114  
                      u3521 3304                        u3361 2244                        u2801 1D66  
                      u2721 1C2C                        u2641 1B64                        u2561 1A1C  
                      u3601 2BD0                        u4401 1288                        u4321 10E4  
                      u4241 0D2C                        u4161 0C46                        u4081 0A26  
                      u3450 31FE                        u3530 333C                        u3370 2276  
                      u3290 215C                        u2810 1D7A                        u2730 1C4E  
                      u2650 1B6C                        u2570 1A62                        u3610 2C08  
                      u4410 129E                        u4330 10FC                        u4250 0E78  
                      u4170 0C66                        u4090 0AAE                        u5027 38FE  
                      u3451 31FA                        u3531 3338                        u3371 2272  
                      u3291 2158                        u2811 1D76                        u2731 1C4A  
                      u2571 1A5E                        u4411 129A                        u4331 10F8  
                      u4251 0E74                        u4171 0C62                        u4091 0AAA  
                      u3460 3218                        u3540 2CF2                        u3380 22B0  
                      u2900 1E62                        u2820 1D8C                        u2740 1C86  
                      u2660 1B94                        u2580 1A78                        u3620 2C36  
                      u3700 31BE                        u4500 143C                        u4420 12AC  
                      u4340 110E                        u4260 0EDE                        u4180 0C9C  
                      u5037 371E                        u3461 3214                        u3541 2CEE  
                      u3381 22AC                        u3285 20F8                        u2901 1E5E  
                      u2821 1D88                        u2741 1C82                        u2661 1B90  
                      u2581 1A74                        u3621 2C32                        u3701 31BA  
                      u4501 1438                        u4421 12A8                        u4341 110A  
                      u4261 0EDA                        u4181 0C98                        u4510 2A66  
                      u3390 3078                        u3470 3232                        u3550 2D30  
                      u2910 1E74                        u2830 1DA2                        u2750 1CCC  
                      u2670 1BB2                        u2590 1A8A                        u3630 2C4A  
                      u3710 2E08                        u4430 12E2                        u4350 111C  
                      u4270 0F26                        u4190 0CC2                        u5047 3744  
                      u4511 2A62                        u3391 3074                        u3471 322E  
                      u3551 2D2C                        u2911 1E70                        u2831 1D9E  
                      u2751 1CC8                        u2671 1BAE                        u2591 1A86  
                      u3631 2C46                        u3615 2BFE                        u4431 12DE  
                      u4351 1118                        u4271 0F22                        u4191 0CBE  
                      u4520 2A9C                        u3480 3250                        u3560 2D4E  
                      u2920 1E90                        u2840 1DB8                        u2760 1D02  
                      u2680 1BD2                        u3640 2C72                        u3720 2E26  
                      u3800 351A                        u4440 1310                        u4360 1138  
                      u4280 0F36                        u4600 2F3E                        u4521 2A98  
                      u3481 324C                        u3561 2D4A                        u2921 1E8C  
                      u2841 1DB4                        u2761 1CFE                        u2681 1BCE  
                      u3641 2C6E                        u3721 2E22                        u3801 3514  
                      u4441 130C                        u4361 1134                        u4281 0F32  
                      u4601 2F3A                        u4530 2AB8                        u3490 3266  
                      u3570 2D6E                        u2850 1DCC                        u2770 1D12  
                      u2690 1BE0                        u3650 2C92                        u3730 2E4E  
                      u2930 37D6                        u3810 351C                        u4450 1394  
                      u4370 1146                        u4290 0FD0                        u4610 2F50  
                      u4531 2AB4                        u3491 3262                        u3571 2D6A  
                      u2851 1DC8                        u2771 1D0E                        u2691 1BDC  
                      u3651 2C8E                        u3731 2E4A                        u3715 2DFE  
                      u2931 37D2                        u4451 1390                        u4371 1142  
                      u4291 0FCC                        u4611 2F4C                        u4540 2B6E  
                      u3580 2DBE                        u2860 1DE6                        u2780 1D3E  
                      u3660 2CA2                        u3740 2E78                        u3900 2800  
                      u2940 38EA                        u3820 3532                        u4460 13AE  
                      u4380 119E                        u4620 2F78                        u4700 162A  
                      u4541 2B68                        u3581 2DBA                        u2861 1DE2  
                      u2781 1D3A                        u3661 2C9E                        u3741 2E74  
                      u2941 38E6                        u3821 352E                        u4461 13AA  
                      u4381 119A                        u4621 2F74                        u4701 1626  
                      u4550 2B70                        u3590 3868                        u2870 1E20  
                      u2790 1D4E                        u3910 281C                        u3830 26B0  
                      u3670 3138                        u2950 384A                        u4470 13C6  
                      u4390 1270                        u4710 16D2                        u4630 14AC  
                      u3591 3864                        u2871 1E1C                        u2791 1D4A  
                      u3911 2818                        u3671 3134                        u2951 3844  
                      u4471 13C2                        u4391 126C                        u4711 16CC  
                      u4631 14A8                        u4560 2B86                        u2880 1E32  
                      u3760 2EB2                        u3920 2858                        u3840 26DE  
                      u3680 315A                        u2960 384C                        u4480 1424  
                      u4800 18C8                        u4720 16D4                        u4640 14F4  
                      u4561 2B82                        u2881 1E2E                        u3761 2EAC  
                      u3921 2854                        u3905 27F6                        u3841 26DA  
                      u3681 3156                        u4481 141E                        u4801 18C4  
                      u4641 14F0                        u2970 22E8                        u3930 38BA  
                      u4570 2B98                        u2890 1E42                        u3770 2EB4  
                      u3850 2700                        u3690 31B0                        u4490 1426  
                      u4810 1964                        u4730 16EA                        u4650 1538  
                      u2971 22E4                        u3931 38B4                        u4571 2B94  
                      u2891 1E3E                        u3755 2E8A                        u3851 26FC  
                      u3835 26A6                        u3691 31AC                        u4811 1960  
                      u4731 16E6                        u4651 1534                        u2980 22FA  
                      u4900 2A0C                        u4820 288C                        u3940 38BC  
                      u3780 35F0                        u4580 2EF0                        u4740 171A  
                      u4660 15B4                        u2981 22F6                        u4901 2A08  
                      u4821 2888                        u4581 2EEC                        u4741 1716  
                      u4661 15AE                        u2990 230A                        u4910 2A1A  
                      u4830 289A                        u3950 36C4                        u3870 276C  
                      u3790 3602                        u4590 2F22                        u4750 175A  
                      u4670 15B6                        u2991 2306                        u4911 2A16  
                      u4831 2896                        u3951 36C0                        u3871 2768  
                      u3791 35FE                        u4591 2F1E                        u4751 1756  
                      u4840 28F6                        u3960 36F2                        u3880 2790  
                      u4760 179C                        u4680 15CC                        u4920 34E0  
                      u4841 28F2                        u3961 36EE                        u3865 2714  
                      u4761 1798                        u4681 15C8                        u4921 34DC  
                      u4930 356E                        u4850 294C                        u3890 27AC  
                      u3866 271E                        u3970 0856                        u4770 184A  
                      u4690 15F0                        u4851 2948                        u3891 27A8  
                      u3867 272E                        u3787 35E6                        u3971 0852  
                      u4771 1846                        u4691 15EC                        u4940 3596  
                      u4860 2996                        u3980 08A6                        u4780 18B0  
                      u4861 2992                        u3885 2786                        u3981 08A2  
                      u4781 18AA                        u4950 35A6                        u4870 29B4  
                      u3990 08B4                        u4790 18B2                        u4951 35A2  
                      u4871 29B0                        u3991 08B0                        u4880 29C4  
                      u4960 3406                        u4937 3564                        u4881 29C0  
                      u4961 3402                        u4890 29D2                        u4970 341E  
                      u4947 358C                        u4891 29CE                        u4971 341A  
                      u4980 342C                        u4981 3428                        u4997 33D8  
                      _TMR0 000FD6                        _dbuf 0100                        _atoi 2A2E  
                      _main 3346          __size_of_LCD_Begin 0034                        _prec 005C  
                      _nout 00C0                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9      __size_of_LCD_setCursor 0056               ___fpclassifyf 2DC8  
                      prodh 000FF4                        prodl 000FF3          __size_of_LCD_Print 005E  
                      start 0000             ___fldiv@new_exp 0012                ___param_bank 000000  
                     ??_pad 0017            __end_of_LCD_Char 381A               ___fltol@sign1 0009  
                     ?_atoi 0008             __end_of___fladd 1EA4                       ?_main 0001  
           __end_of___fldiv 2668             __end_of___awdiv 312A             __end_of___flneg 388A  
                     STR_12 0827                       STR_14 0827             __end_of___awmod 329C  
           __end_of___flmul 22CE             __end_of___flsub 3794             __end_of___fltol 2CC4  
                     _T0CON 000FD5             ___awdiv@divisor 0003                       _LATC0 007C58  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 003C                       _TRISD 000F95  
                     _flags 005E                       _fputc 2F9C                       _fputs 3794  
           __end_of_isdigit 38C2                       atoi@n 0015                       pad@fp 0011  
                     atoi@s 0008                       _width 00C2                       _putch 3992  
           __end_of_isspace 36FE             __end_of_isupper 3852                       tablat 000FF5  
                     status 000FD8             __end_of_sprintf 36AC              ?___fpclassifyf 0001  
           __end_of_tolower 354A             __end_of_strncmp 2F9C             __initialization 392C  
              __end_of_atoi 2BBE                __end_of_main 33EC                      ??_atoi 000A  
                    ??_main 005A               _LCD_setCursor 3604              LCD_setCursor@x 0006  
            LCD_setCursor@y 0003           __end_of_LCD_Begin 392C               __activetblptr 000002  
         __end_of_LCD_Print 35A8               main@distancia 00B4                LCD_Print@str 0003  
                    ?_fputc 0001                      ?_fputs 000A            ___awdiv@dividend 0001  
                    ?_putch 0001                      _OSCCON 000FD3                      _TMR0IF 007F92  
                    _TMR0ON 007EAF            __end_of___xxtofl 2A2E                vfprintf@cfmt 0058  
                    ___flge 2CC4                      ___fleq 329C                   ??___fladd 0009  
                    ___wmul 3956                   ??___fldiv 0009                   ??___awdiv 0005  
                 ??___flneg 0005                   ??___awmod 0005                   ??___flmul 0009  
                 ??___flsub 0022                   ??___fltol 0005                      _efgtoa 082E  
                    _floorf 2668                      clear_0 3932                      clear_1 393E  
          ___awdiv@quotient 0007             ___awmod@divisor 0003              ?_LCD_setCursor 0003  
           ___awmod@counter 0005                      pad@buf 0013           ?_Ultrasonico_read 001A  
      __size_of_LCD_Command 0050                      _strcpy 35A8                      _strlen 38C2  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003          ??_Ultrasonico_read 001E  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0000                   ??_isspace 0003                      tblptrh 000FF7  
                 ??_isupper 0003                      tblptrl 000FF6                      tblptru 000FF8  
                    putch@c 0001            __end_of_vfprintf 34EA                   ??_sprintf 005A  
                 ??_tolower 0009                   ??_strncmp 0007                  ___flge@ff1 001A  
                ___flge@ff2 001E             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                   ?_LCD_Char 0001                  __accesstop 0060  
   __end_of__initialization 394C                  ___flneg@f1 0001               ___rparam_used 000001  
                ___fltol@f1 0001                   LCD_Char@x 0002              __pcstackCOMRAM 0001  
             __end_of_fputc 3066               __end_of_fputs 37D8               __end_of_putch 3994  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 00B8                  __pbssBANK1 0100                  ??_LCD_Char 0001  
                _efgtoa$811 0064                  _efgtoa$805 0060                  _efgtoa$806 0062  
                _efgtoa$815 0066                  _efgtoa$816 0068                  _efgtoa$817 006A  
                   ?___flge 001A                     ?___fleq 0001                     ?___wmul 0001  
                   ?_efgtoa 002E             ??_LCD_setCursor 0004                     ?_floorf 001A  
                   ?_strcpy 0001                     ?_strlen 0001                   ?___xxtofl 0001  
        __size_of_vfpfcnvrt 055C                     __Hparam 0000                     __Lparam 0000  
           __size_of___flge 0104             __size_of___fleq 00AA                     ___fladd 19E4  
                   ___fldiv 22CE                     ___awdiv 3066                     ___flneg 3852  
                   ___awmod 31EC                     ___flmul 1EA4                     ___flsub 374E  
                   ___fltol 2BBE             __size_of___wmul 0026                   ?_vfprintf 0052  
              __psmallconst 0800             __size_of_efgtoa 0C5A             __size_of_floorf 0212  
                   __pcinit 392C                     __ramtop 0800                     __ptext0 3346  
                   __ptext1 365A                     __ptext2 3488                     __ptext3 1488  
                   __ptext4 2EC6                     __ptext5 082E                     __ptext6 34EA  
                   __ptext7 381A                     __ptext8 35A8                     __ptext9 312A  
         _Ultrasonico_Begin 397C             __size_of_strcpy 005C             __size_of_strlen 0036  
              __size_of_pad 00C2                     _isdigit 388A                  ??___xxtofl 0005  
        ?_Ultrasonico_Begin 0001            ___awmod@dividend 0001                     _isspace 36AC  
                   _isupper 381A                     efgtoa@c 0034                     efgtoa@d 0078  
                   efgtoa@e 0090                     efgtoa@f 0030                     efgtoa@g 008C  
                   efgtoa@h 0082                     efgtoa@i 008A                     efgtoa@l 0086  
                   efgtoa@m 0072                     efgtoa@n 0092                     efgtoa@p 007C  
                   efgtoa@t 006C                     efgtoa@u 0094                     efgtoa@w 007E  
                 _LCD_Begin 38F8                     atoi@neg 000E                   _LCD_Print 354A  
                   _sprintf 365A                     _tolower 34EA                     _strncmp 2EC6  
      end_of_initialization 394C         ??_Ultrasonico_Begin 0001                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   fputc@fp 0003              LCD_Command@dat 0002               __Lmediumconst 0000  
                   fputs@fp 000C           __end_of_vfpfcnvrt 19E4                  efgtoa@mode 0081  
                efgtoa@sign 007A                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 0058  
 __end_of_Ultrasonico_Begin 3992                     strcpy@d 0009                     strlen@a 0003  
                   strcpy@s 0007                     strlen@s 0001                   _PORTBbits 000F81  
               ___fladd@grs 0010               ___xxtofl@sign 0009                   _TRISBbits 000F93  
                 _TRISCbits 000F94                  ?_LCD_Begin 0001                 ___fldiv@grs 0014  
               ___fldiv@rem 000D                  ?_LCD_Print 0003   __size_of_Ultrasonico_read 009C  
               ___flmul@grs 000E           __size_of_LCD_Char 0042               ??_LCD_Command 0001  
            __end_of___flge 2DC8              __end_of___fleq 3346                 vfpfcnvrt@ap 003E  
               vfpfcnvrt@ct 004E                 vfpfcnvrt@fp 003A              __end_of___wmul 397C  
            __end_of_efgtoa 1488              __end_of_floorf 287A                  floorf@F527 00B8  
            __end_of_strcpy 3604              __end_of_strlen 38F8         start_initialization 392C  
               __end_of_pad 31EC       __end_of___fpclassifyf 2EC6                 vfprintf@fmt 0054  
                  ??___flge 0022                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 0035  __size_of_Ultrasonico_Begin 0016                    ??_floorf 001E  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
       __end_of_LCD_Command 374E                   ___flmul@a 0005                   ___flmul@b 0001  
               __pbssCOMRAM 005C                   ___flsub@a 001E                   ___flsub@b 001A  
             __pcstackBANK0 0060                 ??_LCD_Begin 0003           __size_of___xxtofl 01B4  
               ??_LCD_Print 0005                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0001                    ?___flsub 001A                    ?___fltol 0001  
     __end_of_LCD_setCursor 365A           __size_of_vfprintf 0062                 __smallconst 0800  
                  ?_isdigit 0001                    ?_isspace 0001                    ?_isupper 0001  
                  ?_sprintf 0098                    ?_tolower 0007           main@distancia_str 00AA  
            __size_of_fputc 00CA              __size_of_fputs 0044                    ?_strncmp 0001  
            __size_of_putch 0002            _Ultrasonico_read 33EC                    _LCD_Char 37D8  
            ___wmul@product 0005       LCD_setCursor@location 0007                 _LCD_Command 36FE  
                 _vfpfcnvrt 1488           ___wmul@multiplier 0001                  vfpfcnvrt@c 0051  
                vfpfcnvrt@f 004A                    __Hrparam 0000                  vfprintf@ap 0056  
                  __Lrparam 0000                  vfprintf@fp 0052            __size_of___fladd 04C0  
          __size_of___fldiv 039A            __size_of___awdiv 00C4            __size_of___flneg 0038  
          __size_of___awmod 00B0            __size_of___flmul 042A            __size_of___flsub 0046  
          __size_of___fltol 0106                  ?_vfpfcnvrt 003A          ___fpclassifyf@F465 00BC  
                sprintf@fmt 009A                    ___xxtofl 287A                    _atoi$870 0010  
                  _atoi$871 0014                    _atoi$872 0012            __size_of_isdigit 0038  
          __size_of_isspace 0052                    __ptext10 38C2                    __ptext11 3794  
                  __ptext20 1EA4                    __ptext12 2F9C                    __ptext21 2CC4  
                  __ptext13 3992                    __ptext30 287A                    __ptext22 329C  
                  __ptext14 2668                    __ptext31 22CE                    __ptext23 31EC  
                  __ptext15 2DC8                    __ptext32 397C                    __ptext24 3066  
                  __ptext16 2BBE                    __ptext33 3604                    __ptext25 2A2E  
                  __ptext17 374E                    __ptext34 354A                    __ptext26 36AC  
                  __ptext18 19E4                    __ptext35 37D8                    __ptext27 388A  
                  __ptext19 3852                    __ptext36 38F8                    __ptext28 3956  
                  __ptext37 36FE                    __ptext29 33EC            __size_of_isupper 0038  
          __size_of_sprintf 0052            __size_of_tolower 0060                  strcpy@dest 0001  
          __size_of_strncmp 00D6               __size_of_atoi 0190               __size_of_main 00A6  
                  efgtoa@fp 002E                    efgtoa@ne 0070                    efgtoa@pp 006E  
                  efgtoa@ou 0074                    _vfprintf 3488                 _isspace$901 0007  
    Ultrasonico_read@tiempo 001E                    isdigit@c 0001                   sprintf@ap 00A2  
                  isspace@c 0001                   strcpy@src 0003                    isupper@c 0001  
                 strncmp@_l 0001                   strncmp@_r 0003                 efgtoa@nmode 0080  
               ??_vfpfcnvrt 0040               _vfpfcnvrt$831 0044               _vfpfcnvrt$832 0046  
             _vfpfcnvrt$836 0048    __end_of_Ultrasonico_read 3488                    sprintf@f 00A4  
                  tolower@c 0007                    sprintf@s 0098      __size_of___fpclassifyf 00FE  
                  strncmp@l 0008                    strncmp@n 0005                    strncmp@r 000A  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
